diff --git a/common/common_vc14.vcxproj b/common/common_vc14.vcxproj
index fd8ece6..33b1d27 100644
--- a/common/common_vc14.vcxproj
+++ b/common/common_vc14.vcxproj
@@ -5,6 +5,30 @@
       <Configuration>Debug</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
+    <ProjectConfiguration Include="DeployRelease|x64">
+      <Configuration>DeployRelease</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="PreRelease MT|x64">
+      <Configuration>PreRelease MT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="PreRelease|x64">
+      <Configuration>PreRelease</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release MT|x64">
+      <Configuration>Release MT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseAVX2 MT|x64">
+      <Configuration>ReleaseAVX2 MT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseAVX2|x64">
+      <Configuration>ReleaseAVX2</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
     <ProjectConfiguration Include="Release|x64">
       <Configuration>Release</Configuration>
       <Platform>x64</Platform>
@@ -46,23 +70,70 @@
     <ProjectGuid>{472E19AB-DEF0-42DF-819B-18722E8DC822}</ProjectGuid>
     <Keyword>Win32Proj</Keyword>
     <RootNamespace>common_vc14</RootNamespace>
-    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
-    <SccProjectName>SAK</SccProjectName>
-    <SccAuxPath>SAK</SccAuxPath>
-    <SccLocalPath>SAK</SccLocalPath>
-    <SccProvider>SAK</SccProvider>
+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
+    <SccProjectName>
+    </SccProjectName>
+    <SccAuxPath>
+    </SccAuxPath>
+    <SccLocalPath>
+    </SccLocalPath>
+    <SccProvider>
+    </SccProvider>
+    <ProjectName>common_1_5_97_vc14</ProjectName>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
     <ConfigurationType>StaticLibrary</ConfigurationType>
     <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
+    <PlatformToolset>v142</PlatformToolset>
     <CharacterSet>MultiByte</CharacterSet>
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
     <ConfigurationType>StaticLibrary</ConfigurationType>
     <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release MT|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2 MT|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease MT|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
     <WholeProgramOptimization>true</WholeProgramOptimization>
     <CharacterSet>MultiByte</CharacterSet>
   </PropertyGroup>
@@ -77,14 +148,56 @@
   <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
   </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release MT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2 MT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease MT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(Configuration)\</OutDir>
-    <IntDir>$(Platform)_$(PlatformToolset)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</OutDir>
+    <IntDir>$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</IntDir>
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(Configuration)\</OutDir>
-    <IntDir>$(Platform)_$(PlatformToolset)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</OutDir>
+    <IntDir>$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release MT|x64'">
+    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</OutDir>
+    <IntDir>$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'">
+    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</OutDir>
+    <IntDir>$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'">
+    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</OutDir>
+    <IntDir>$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2 MT|x64'">
+    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</OutDir>
+    <IntDir>$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'">
+    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</OutDir>
+    <IntDir>$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease MT|x64'">
+    <OutDir>$(SolutionDir)$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</OutDir>
+    <IntDir>$(Platform)_$(PlatformToolset)\$(ProjectName)\$(Configuration)\</IntDir>
   </PropertyGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
     <ClCompile>
@@ -93,9 +206,12 @@
       <WarningLevel>Level3</WarningLevel>
       <Optimization>Disabled</Optimization>
       <PreprocessorDefinitions>_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
       <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <StringPooling>true</StringPooling>
+      <LanguageStandard>stdcpp17</LanguageStandard>
     </ClCompile>
     <Link>
       <SubSystem>Windows</SubSystem>
@@ -110,9 +226,166 @@
       <FunctionLevelLinking>true</FunctionLevelLinking>
       <IntrinsicFunctions>true</IntrinsicFunctions>
       <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <StringPooling>true</StringPooling>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release MT|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <StringPooling>true</StringPooling>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <StringPooling>true</StringPooling>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <StringPooling>true</StringPooling>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2 MT|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <StringPooling>true</StringPooling>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <StringPooling>true</StringPooling>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease MT|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
       <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <StringPooling>true</StringPooling>
+      <LanguageStandard>stdcpp17</LanguageStandard>
     </ClCompile>
     <Link>
       <SubSystem>Windows</SubSystem>
diff --git a/skse64/skse64/BSModelDB.cpp b/skse64/skse64/BSModelDB.cpp
index 5bcaf05..f3f7f9e 100644
--- a/skse64/skse64/BSModelDB.cpp
+++ b/skse64/skse64/BSModelDB.cpp
@@ -1,4 +1,4 @@
-#include "skse64/BSModelDB.h"
+#include "BSModelDB.h"
 
 // 206875324DD3C045FB854CB2889AFBCA94C7790B+89
-RelocPtr <BSModelDB::BSModelProcessor*> g_TESProcessor(0x01EC3C10);
+BSModelDB::BSModelProcessor** g_TESProcessor = IAL::Addr<BSModelDB::BSModelProcessor**>(514326);
diff --git a/skse64/skse64/BSModelDB.h b/skse64/skse64/BSModelDB.h
index ed2a1b2..8cc8c7e 100644
--- a/skse64/skse64/BSModelDB.h
+++ b/skse64/skse64/BSModelDB.h
@@ -42,9 +42,12 @@ public:
 
 		MEMBER_FN_PREFIX(TESProcessor);
 		// find from ??_7BSModelProcessor@BSModelDB@@6B@
-		DEFINE_MEMBER_FN(dtor, void, 0x00D2ECA0);
-		DEFINE_MEMBER_FN(Impl_Process, void, 0x00181800, ModelData * modelData, const char * modelName, NiAVObject ** root, UInt32 * typeOut);
+		DEFINE_MEMBER_FN(dtor, void, offset1);
+		DEFINE_MEMBER_FN(Impl_Process, void, offset2, ModelData * modelData, const char * modelName, NiAVObject ** root, UInt32 * typeOut);
 	};
+private:
+	inline static auto offset1 = IAL::Offset(74034);
+	inline static auto offset2 = IAL::Offset(14000);
 };
 
-extern RelocPtr <BSModelDB::BSModelProcessor*> g_TESProcessor;
+extern BSModelDB::BSModelProcessor** g_TESProcessor;
diff --git a/skse64/skse64/GameAPI.cpp b/skse64/skse64/GameAPI.cpp
index 42e12e6..1d2ee01 100644
--- a/skse64/skse64/GameAPI.cpp
+++ b/skse64/skse64/GameAPI.cpp
@@ -1,19 +1,19 @@
-#include "skse64/GameAPI.h"
+#include "GameAPI.h"
 
 // 4371A3D33EB5D62C7C548EBD5F760AF15A9B0B96+41
-RelocPtr <Heap> g_mainHeap(0x01EBD280);
+Heap *g_mainHeap = IAL::Addr<Heap*>(514110);
 
 // 75643FD50A96D1F83B1AC4797EC84EF1C53039AC+68
-RelocPtr <ConsoleManager *> g_console(0x02F000F0);
+ConsoleManager ** g_console = IAL::Addr<ConsoleManager**>(515064);
 
 // E1E59B64FDA5B8A9085AE9314353ABEEA0DB2823+C4
-RelocPtr <UInt32> g_consoleHandle(0x02F4C31C);
+UInt32* g_consoleHandle = IAL::Addr<UInt32*>(519394);
 
 // 52DD97B7C619EA732D3CD95637F449FC7A23DD12+24
-RelocPtr<UInt32> g_TlsIndexPtr(0x03497408);
+UInt32* g_TlsIndexPtr = IAL::Addr<UInt32*>(528600);
 
 // BC8BF08A45C960EB35F2BAFEC9432C80365A1473+14A
-RelocPtr<PlayerCharacter*> g_thePlayer(0x02F26EF8);
+PlayerCharacter** g_thePlayer = IAL::Addr<PlayerCharacter**>(517014);
 
 void * Heap_Allocate(size_t size)
 {
diff --git a/skse64/skse64/GameAPI.h b/skse64/skse64/GameAPI.h
index 4fce738..e62eb7e 100644
--- a/skse64/skse64/GameAPI.h
+++ b/skse64/skse64/GameAPI.h
@@ -8,11 +8,14 @@ class Heap
 {
 public:
 	MEMBER_FN_PREFIX(Heap);
-	DEFINE_MEMBER_FN(Allocate, void *, 0x00C02260, size_t size, size_t alignment, bool aligned);
-	DEFINE_MEMBER_FN(Free, void, 0x00C02560, void * buf, bool aligned);
+	DEFINE_MEMBER_FN(Allocate, void *, offset1, size_t size, size_t alignment, bool aligned);
+	DEFINE_MEMBER_FN(Free, void, offset2, void * buf, bool aligned);
+private:
+	inline static auto offset1 = IAL::Offset(66859);
+	inline static auto offset2 = IAL::Offset(66861);
 };
 
-extern RelocPtr <Heap> g_mainHeap;
+extern Heap* g_mainHeap;
 
 void * Heap_Allocate(size_t size);
 void Heap_Free(void * ptr);
@@ -21,13 +24,15 @@ class ConsoleManager
 {
 public:
 	MEMBER_FN_PREFIX(ConsoleManager);
-	DEFINE_MEMBER_FN(VPrint, void, 0x0085C2C0, const char * fmt, va_list args);
+	DEFINE_MEMBER_FN(VPrint, void, offset1, const char * fmt, va_list args);
 //	DEFINE_MEMBER_FN(Print, void, 0x001D2050, const char * str);
+private:
+	inline static auto offset1 = IAL::Offset(50180);
 };
 
-extern RelocPtr <ConsoleManager *> g_console;
-extern RelocPtr <UInt32> g_consoleHandle;
-extern RelocPtr <PlayerCharacter*> g_thePlayer;
+extern ConsoleManager ** g_console;
+extern UInt32* g_consoleHandle;
+extern PlayerCharacter** g_thePlayer;
 
 void Console_Print(const char * fmt, ...);
 bool IsConsoleMode(void);
diff --git a/skse64/skse64/GameBSExtraData.cpp b/skse64/skse64/GameBSExtraData.cpp
index 6a647fd..b3351c1 100644
--- a/skse64/skse64/GameBSExtraData.cpp
+++ b/skse64/skse64/GameBSExtraData.cpp
@@ -2,188 +2,188 @@
 #include "GameExtraData.h"
 #include "GameRTTI.h"
 
-extern const void * RTTIForExtraType[0xB4] = 
+extern uint32_t RTTIForExtraType[0xB4] = 
 {
-	NULL,						// 0x0
-	RTTI_ExtraHavok,			// 0x1,
-	RTTI_ExtraCell3D,			// 0x2,
-	RTTI_ExtraCellWaterType,	// 0x3,
-	RTTI_ExtraRegionList,		// 0x4,
-	RTTI_ExtraSeenData,			// 0x5,
-	RTTI_ExtraEditorID,			// 0x6,
-	RTTI_ExtraCellMusicType,	// 0x7,
-	RTTI_ExtraCellSkyRegion,	// 0x8,
-	RTTI_ExtraProcessMiddleLow,	// 0x9,
-	RTTI_ExtraDetachTime,		// 0xA,
-	RTTI_ExtraPersistentCell,	// 0xB,
-	NULL,						// 0xC,
-	RTTI_ExtraAction,			// 0xD,
-	RTTI_ExtraStartingPosition,	// 0xE,
-	NULL,						// 0xF,
-	RTTI_ExtraAnimGraphManager,	// 0x10,
-	NULL,						// 0x11,
-	RTTI_ExtraUsedMarkers,		// 0x12,
-	RTTI_ExtraDistantData,		// 0x13,
-	RTTI_ExtraRagDollData,		// 0x14,
-	RTTI_ExtraContainerChanges,	// 0x15,
-	RTTI_ExtraWorn,				// 0x16,
-	RTTI_ExtraWornLeft,			// 0x17,
-	RTTI_ExtraPackageStartLocation,	// 0x18,
-	RTTI_ExtraPackage,			// 0x19,
-	RTTI_ExtraTresPassPackage,	// 0x1A,
-	RTTI_ExtraRunOncePacks,		// 0x1B,
-	RTTI_ExtraReferenceHandle,	// 0x1C,
-	RTTI_ExtraFollower,			// 0x1D,
-	RTTI_ExtraLevCreaModifier,	// 0x1E,
-	RTTI_ExtraGhost,			// 0x1F,
-	RTTI_ExtraOriginalReference,	// 0x20,
-	RTTI_ExtraOwnership,		// 0x21,
-	RTTI_ExtraGlobal,			// 0x22,
-	RTTI_ExtraRank,				// 0x23,
-	RTTI_ExtraCount,			// 0x24,
-	RTTI_ExtraHealth,			// 0x25,
-	NULL,						// 0x26,
-	RTTI_ExtraTimeLeft,			// 0x27,
-	RTTI_ExtraCharge,			// 0x28,
-	RTTI_ExtraLight,			// 0x29,
-	RTTI_ExtraLock,				// 0x2A,
-	RTTI_ExtraTeleport,			// 0x2B,
-	RTTI_ExtraMapMarker,		// 0x2C,
-	RTTI_ExtraLeveledCreature,	// 0x2D,
-	RTTI_ExtraLeveledItem,		// 0x2E,
-	RTTI_ExtraScale,			// 0x2F,
-	NULL,						// 0x30,	was ExtraSeed, removed in 1.7.7.0
-	NULL,						// 0x31,
-	NULL,						// 0x32,
-	NULL,						// 0x33,
-	RTTI_ExtraPlayerCrimeList,	// 0x34,
-	NULL,						// 0x35
-	RTTI_ExtraEnableStateParent,	// 0x36,
-	RTTI_ExtraEnableStateChildren,	// 0x37,
-	RTTI_ExtraItemDropper,		// 0x38,
-	RTTI_ExtraDroppedItemList,	// 0x39,
-	RTTI_ExtraRandomTeleportMarker, // 0x3A,
-	NULL,						// 0x3B
-	RTTI_ExtraSavedHavokData,	// 0x3C,
-	RTTI_ExtraCannotWear,		// 0x3D,
-	RTTI_ExtraPoison,			// 0x3E,
-	NULL,						// 0x3F
-	RTTI_ExtraLastFinishedSequence,	// 0x40,
-	RTTI_ExtraSavedAnimation,	// 0x41,
-	RTTI_ExtraNorthRotation,	// 0x42,
-	RTTI_ExtraSpawnContainer,	// 0x43,
-	RTTI_ExtraFriendHits,		// 0x44,
-	RTTI_ExtraHeadingTarget,	// 0x45,
-	NULL,						// 0x46
-	RTTI_ExtraRefractionProperty,	// 0x47,
-	RTTI_ExtraStartingWorldOrCell,	// 0x48,
-	RTTI_ExtraHotkey,			// 0x49,
-	NULL,						// 0x4A
-	RTTI_ExtraEditorRefMoveData,	// 0x4B,
-	RTTI_ExtraInfoGeneralTopic,	// 0x4C,
-	RTTI_ExtraHasNoRumors,		// 0x4D,
-	RTTI_ExtraSound,			// 0x4E,
-	RTTI_ExtraTerminalState,	// 0x4F,
-	RTTI_ExtraLinkedRef,		// 0x50,
-	RTTI_ExtraLinkedRefChildren,	// 0x51,
-	RTTI_ExtraActivateRef,		// 0x52,
-	RTTI_ExtraActivateRefChildren,	// 0x53,
-	RTTI_ExtraCanTalkToPlayer,	// 0x54,
-	RTTI_ExtraObjectHealth,		// 0x55,
-	RTTI_ExtraCellImageSpace,	// 0x56,
-	RTTI_ExtraNavMeshPortal,	// 0x57,
-	RTTI_ExtraModelSwap,		// 0x58,
-	RTTI_ExtraRadius,			// 0x59,
-	NULL,						// 0x5A,
-	RTTI_ExtraFactionChanges,	// 0x5B,
-	RTTI_ExtraDismemberedLimbs,	// 0x5C,
-	RTTI_ExtraActorCause,		// 0x5D,
-	RTTI_ExtraMultiBound,		// 0x5E,
-	NULL,						// 0x5F,	was ExtraMultiBoundData, removed in 1.7.7.0
-	RTTI_ExtraMultiBoundRef,	// 0x60,
-	RTTI_ExtraReflectedRefs,	// 0x61,
-	RTTI_ExtraReflectorRefs,	// 0x62,
-	RTTI_ExtraEmittanceSource,	// 0x63,
-	NULL,						// 0x64,	was ExtraRadioData, removed in 1.7.7.0
-	RTTI_ExtraCombatStyle,		// 0x65,
-	NULL,						// 0x66,
-	RTTI_ExtraPrimitive,		// 0x67,
-	RTTI_ExtraOpenCloseActivateRef,	// 0x68,
-	RTTI_ExtraAnimNoteReceiver,	// 0x69,
-	RTTI_ExtraAmmo,				// 0x6A,
-	RTTI_ExtraPatrolRefData,	// 0x6B,
-	RTTI_ExtraPackageData,		// 0x6C,
-	RTTI_ExtraOcclusionShape,	// 0x6D,
-	RTTI_ExtraCollisionData,	// 0x6E,
-	RTTI_ExtraSayTopicInfoOnceADay,	// 0x6F,
-	RTTI_ExtraEncounterZone,	// 0x70,
-	RTTI_ExtraSayToTopicInfo,		// 0x71,
-	RTTI_ExtraOcclusionPlaneRefData,	// 0x72,
-	RTTI_ExtraPortalRefData,	// 0x73,
-	RTTI_ExtraPortal,			// 0x74,
-	RTTI_ExtraRoom,				// 0x75,
-	RTTI_ExtraHealthPerc,		// 0x76,
-	RTTI_ExtraRoomRefData,		// 0x77,
-	RTTI_ExtraGuardedRefData,	// 0x78,
-	RTTI_ExtraCreatureAwakeSound,	// 0x79,
-	NULL,						// 0x7A,
-	RTTI_ExtraHorse,			// 0x7B,
-	RTTI_ExtraIgnoredBySandbox,	// 0x7C,
-	RTTI_ExtraCellAcousticSpace,	// 0x7D,
-	RTTI_ExtraReservedMarkers,	// 0x7E,
-	RTTI_ExtraWeaponIdleSound,	// 0x7F,
-	RTTI_ExtraWaterLightRefs,	// 0x80,
-	RTTI_ExtraLitWaterRefs,		// 0x81,
-	RTTI_ExtraWeaponAttackSound,	// 0x82,
-	RTTI_ExtraActivateLoopSound,	// 0x83,
-	RTTI_ExtraPatrolRefInUseData,	// 0x84,
-	RTTI_ExtraAshPileRef,		// 0x85,
-	NULL,						// 0x86
-	RTTI_ExtraFollowerSwimBreadcrumbs,	// 0x87,
-	RTTI_ExtraAliasInstanceArray,	// 0x88,
-	RTTI_ExtraLocation,			// 0x89,
-	NULL,						// 0x8A,
-	RTTI_ExtraLocationRefType,	// 0x8B,
-	RTTI_ExtraPromotedRef,		// 0x8C,
-	NULL,						// 0x8D,
-	RTTI_ExtraOutfitItem,		// 0x8E,
-	NULL,						// 0x8F,
-	RTTI_ExtraLeveledItemBase,	// 0x90,
-	RTTI_ExtraLightData,		// 0x91,
-	RTTI_ExtraSceneData,		// 0x92,
-	RTTI_ExtraBadPosition,		// 0x93,
-	RTTI_ExtraHeadTrackingWeight,	// 0x94,
-	RTTI_ExtraFromAlias,		// 0x95,
-	RTTI_ExtraShouldWear,		// 0x96,
-	RTTI_ExtraFavorCost,		// 0x97,
-	RTTI_ExtraAttachedArrows3D,	// 0x98,
-	RTTI_ExtraTextDisplayData,	// 0x99,
-	RTTI_ExtraAlphaCutoff,		// 0x9A,
-	RTTI_ExtraEnchantment,		// 0x9B,
-	RTTI_ExtraSoul,				// 0x9C,
-	RTTI_ExtraForcedTarget,		// 0x9D,
-	NULL,						// 0x9E,
-	RTTI_ExtraUniqueID,			// 0x9F,
-	RTTI_ExtraFlags,			// 0xA0,
-	RTTI_ExtraRefrPath,			// 0xA1,
-	RTTI_ExtraDecalGroup,		// 0xA2,
-	RTTI_ExtraLockList,			// 0xA3,
-	RTTI_ExtraForcedLandingMarker,	// 0xA4,
-	RTTI_ExtraLargeRefOwnerCells,	// 0xA5,
-	RTTI_ExtraCellWaterEnvMap,	// 0xA6,
-	RTTI_ExtraCellGrassData,	// 0xA7,
-	RTTI_ExtraTeleportName,		// 0xA8,
-	RTTI_ExtraInteraction,		// 0xA9,
-	RTTI_ExtraWaterData,		// 0xAA,
-	RTTI_ExtraWaterCurrentZoneData,	// 0xAB,
-	RTTI_ExtraAttachRef,		// 0xAC,
-	RTTI_ExtraAttachRefChildren,	// 0xAD,
-	RTTI_ExtraGroupConstraint,	// 0xAE,
-	RTTI_ExtraScriptedAnimDependence, // 0xAF,
-	RTTI_ExtraCachedScale,		// 0xB0,
-	RTTI_ExtraRaceData,			// 0xB1,
-	RTTI_ExtraGIDBuffer,		// 0xB2,
-	RTTI_ExtraMissingRefIDs,	// 0xB3
+	RTTI::NONE,						// 0x0
+	RTTI::ExtraHavok,			// 0x1,
+	RTTI::ExtraCell3D,			// 0x2,
+	RTTI::ExtraCellWaterType,	// 0x3,
+	RTTI::ExtraRegionList,		// 0x4,
+	RTTI::ExtraSeenData,			// 0x5,
+	RTTI::ExtraEditorID,			// 0x6,
+	RTTI::ExtraCellMusicType,	// 0x7,
+	RTTI::ExtraCellSkyRegion,	// 0x8,
+	RTTI::ExtraProcessMiddleLow,	// 0x9,
+	RTTI::ExtraDetachTime,		// 0xA,
+	RTTI::ExtraPersistentCell,	// 0xB,
+	RTTI::NONE,						// 0xC,
+	RTTI::ExtraAction,			// 0xD,
+	RTTI::ExtraStartingPosition,	// 0xE,
+	RTTI::NONE,						// 0xF,
+	RTTI::ExtraAnimGraphManager,	// 0x10,
+	RTTI::NONE,						// 0x11,
+	RTTI::ExtraUsedMarkers,		// 0x12,
+	RTTI::ExtraDistantData,		// 0x13,
+	RTTI::ExtraRagDollData,		// 0x14,
+	RTTI::ExtraContainerChanges,	// 0x15,
+	RTTI::ExtraWorn,				// 0x16,
+	RTTI::ExtraWornLeft,			// 0x17,
+	RTTI::ExtraPackageStartLocation,	// 0x18,
+	RTTI::ExtraPackage,			// 0x19,
+	RTTI::ExtraTresPassPackage,	// 0x1A,
+	RTTI::ExtraRunOncePacks,		// 0x1B,
+	RTTI::ExtraReferenceHandle,	// 0x1C,
+	RTTI::ExtraFollower,			// 0x1D,
+	RTTI::ExtraLevCreaModifier,	// 0x1E,
+	RTTI::ExtraGhost,			// 0x1F,
+	RTTI::ExtraOriginalReference,	// 0x20,
+	RTTI::ExtraOwnership,		// 0x21,
+	RTTI::ExtraGlobal,			// 0x22,
+	RTTI::ExtraRank,				// 0x23,
+	RTTI::ExtraCount,			// 0x24,
+	RTTI::ExtraHealth,			// 0x25,
+	RTTI::NONE,						// 0x26,
+	RTTI::ExtraTimeLeft,			// 0x27,
+	RTTI::ExtraCharge,			// 0x28,
+	RTTI::ExtraLight,			// 0x29,
+	RTTI::ExtraLock,				// 0x2A,
+	RTTI::ExtraTeleport,			// 0x2B,
+	RTTI::ExtraMapMarker,		// 0x2C,
+	RTTI::ExtraLeveledCreature,	// 0x2D,
+	RTTI::ExtraLeveledItem,		// 0x2E,
+	RTTI::ExtraScale,			// 0x2F,
+	RTTI::NONE,						// 0x30,	was ExtraSeed, removed in 1.7.7.0
+	RTTI::NONE,						// 0x31,
+	RTTI::NONE,						// 0x32,
+	RTTI::NONE,						// 0x33,
+	RTTI::ExtraPlayerCrimeList,	// 0x34,
+	RTTI::NONE,						// 0x35
+	RTTI::ExtraEnableStateParent,	// 0x36,
+	RTTI::ExtraEnableStateChildren,	// 0x37,
+	RTTI::ExtraItemDropper,		// 0x38,
+	RTTI::ExtraDroppedItemList,	// 0x39,
+	RTTI::ExtraRandomTeleportMarker, // 0x3A,
+	RTTI::NONE,						// 0x3B
+	RTTI::ExtraSavedHavokData,	// 0x3C,
+	RTTI::ExtraCannotWear,		// 0x3D,
+	RTTI::ExtraPoison,			// 0x3E,
+	RTTI::NONE,						// 0x3F
+	RTTI::ExtraLastFinishedSequence,	// 0x40,
+	RTTI::ExtraSavedAnimation,	// 0x41,
+	RTTI::ExtraNorthRotation,	// 0x42,
+	RTTI::ExtraSpawnContainer,	// 0x43,
+	RTTI::ExtraFriendHits,		// 0x44,
+	RTTI::ExtraHeadingTarget,	// 0x45,
+	RTTI::NONE,						// 0x46
+	RTTI::ExtraRefractionProperty,	// 0x47,
+	RTTI::ExtraStartingWorldOrCell,	// 0x48,
+	RTTI::ExtraHotkey,			// 0x49,
+	RTTI::NONE,						// 0x4A
+	RTTI::ExtraEditorRefMoveData,	// 0x4B,
+	RTTI::ExtraInfoGeneralTopic,	// 0x4C,
+	RTTI::ExtraHasNoRumors,		// 0x4D,
+	RTTI::ExtraSound,			// 0x4E,
+	RTTI::ExtraTerminalState,	// 0x4F,
+	RTTI::ExtraLinkedRef,		// 0x50,
+	RTTI::ExtraLinkedRefChildren,	// 0x51,
+	RTTI::ExtraActivateRef,		// 0x52,
+	RTTI::ExtraActivateRefChildren,	// 0x53,
+	RTTI::ExtraCanTalkToPlayer,	// 0x54,
+	RTTI::ExtraObjectHealth,		// 0x55,
+	RTTI::ExtraCellImageSpace,	// 0x56,
+	RTTI::ExtraNavMeshPortal,	// 0x57,
+	RTTI::ExtraModelSwap,		// 0x58,
+	RTTI::ExtraRadius,			// 0x59,
+	RTTI::NONE,						// 0x5A,
+	RTTI::ExtraFactionChanges,	// 0x5B,
+	RTTI::ExtraDismemberedLimbs,	// 0x5C,
+	RTTI::ExtraActorCause,		// 0x5D,
+	RTTI::ExtraMultiBound,		// 0x5E,
+	RTTI::NONE,						// 0x5F,	was ExtraMultiBoundData, removed in 1.7.7.0
+	RTTI::ExtraMultiBoundRef,	// 0x60,
+	RTTI::ExtraReflectedRefs,	// 0x61,
+	RTTI::ExtraReflectorRefs,	// 0x62,
+	RTTI::ExtraEmittanceSource,	// 0x63,
+	RTTI::NONE,						// 0x64,	was ExtraRadioData, removed in 1.7.7.0
+	RTTI::ExtraCombatStyle,		// 0x65,
+	RTTI::NONE,						// 0x66,
+	RTTI::ExtraPrimitive,		// 0x67,
+	RTTI::ExtraOpenCloseActivateRef,	// 0x68,
+	RTTI::ExtraAnimNoteReceiver,	// 0x69,
+	RTTI::ExtraAmmo,				// 0x6A,
+	RTTI::ExtraPatrolRefData,	// 0x6B,
+	RTTI::ExtraPackageData,		// 0x6C,
+	RTTI::ExtraOcclusionShape,	// 0x6D,
+	RTTI::ExtraCollisionData,	// 0x6E,
+	RTTI::ExtraSayTopicInfoOnceADay,	// 0x6F,
+	RTTI::ExtraEncounterZone,	// 0x70,
+	RTTI::ExtraSayToTopicInfo,		// 0x71,
+	RTTI::ExtraOcclusionPlaneRefData,	// 0x72,
+	RTTI::ExtraPortalRefData,	// 0x73,
+	RTTI::ExtraPortal,			// 0x74,
+	RTTI::ExtraRoom,				// 0x75,
+	RTTI::ExtraHealthPerc,		// 0x76,
+	RTTI::ExtraRoomRefData,		// 0x77,
+	RTTI::ExtraGuardedRefData,	// 0x78,
+	RTTI::ExtraCreatureAwakeSound,	// 0x79,
+	RTTI::NONE,						// 0x7A,
+	RTTI::ExtraHorse,			// 0x7B,
+	RTTI::ExtraIgnoredBySandbox,	// 0x7C,
+	RTTI::ExtraCellAcousticSpace,	// 0x7D,
+	RTTI::ExtraReservedMarkers,	// 0x7E,
+	RTTI::ExtraWeaponIdleSound,	// 0x7F,
+	RTTI::ExtraWaterLightRefs,	// 0x80,
+	RTTI::ExtraLitWaterRefs,		// 0x81,
+	RTTI::ExtraWeaponAttackSound,	// 0x82,
+	RTTI::ExtraActivateLoopSound,	// 0x83,
+	RTTI::ExtraPatrolRefInUseData,	// 0x84,
+	RTTI::ExtraAshPileRef,		// 0x85,
+	RTTI::NONE,						// 0x86
+	RTTI::ExtraFollowerSwimBreadcrumbs,	// 0x87,
+	RTTI::ExtraAliasInstanceArray,	// 0x88,
+	RTTI::ExtraLocation,			// 0x89,
+	RTTI::NONE,						// 0x8A,
+	RTTI::ExtraLocationRefType,	// 0x8B,
+	RTTI::ExtraPromotedRef,		// 0x8C,
+	RTTI::NONE,						// 0x8D,
+	RTTI::ExtraOutfitItem,		// 0x8E,
+	RTTI::NONE,						// 0x8F,
+	RTTI::ExtraLeveledItemBase,	// 0x90,
+	RTTI::ExtraLightData,		// 0x91,
+	RTTI::ExtraSceneData,		// 0x92,
+	RTTI::ExtraBadPosition,		// 0x93,
+	RTTI::ExtraHeadTrackingWeight,	// 0x94,
+	RTTI::ExtraFromAlias,		// 0x95,
+	RTTI::ExtraShouldWear,		// 0x96,
+	RTTI::ExtraFavorCost,		// 0x97,
+	RTTI::ExtraAttachedArrows3D,	// 0x98,
+	RTTI::ExtraTextDisplayData,	// 0x99,
+	RTTI::ExtraAlphaCutoff,		// 0x9A,
+	RTTI::ExtraEnchantment,		// 0x9B,
+	RTTI::ExtraSoul,				// 0x9C,
+	RTTI::ExtraForcedTarget,		// 0x9D,
+	RTTI::NONE,						// 0x9E,
+	RTTI::ExtraUniqueID,			// 0x9F,
+	RTTI::ExtraFlags,			// 0xA0,
+	RTTI::ExtraRefrPath,			// 0xA1,
+	RTTI::ExtraDecalGroup,		// 0xA2,
+	RTTI::ExtraLockList,			// 0xA3,
+	RTTI::ExtraForcedLandingMarker,	// 0xA4,
+	RTTI::ExtraLargeRefOwnerCells,	// 0xA5,
+	RTTI::ExtraCellWaterEnvMap,	// 0xA6,
+	RTTI::ExtraCellGrassData,	// 0xA7,
+	RTTI::ExtraTeleportName,		// 0xA8,
+	RTTI::ExtraInteraction,		// 0xA9,
+	RTTI::ExtraWaterData,		// 0xAA,
+	RTTI::ExtraWaterCurrentZoneData,	// 0xAB,
+	RTTI::ExtraAttachRef,		// 0xAC,
+	RTTI::ExtraAttachRefChildren,	// 0xAD,
+	RTTI::ExtraGroupConstraint,	// 0xAE,
+	RTTI::ExtraScriptedAnimDependence, // 0xAF,
+	RTTI::ExtraCachedScale,		// 0xB0,
+	RTTI::ExtraRaceData,			// 0xB1,
+	RTTI::ExtraGIDBuffer,		// 0xB2,
+	RTTI::ExtraMissingRefIDs,	// 0xB3
 };
 
 
@@ -192,10 +192,13 @@ BSExtraData* BaseExtraList::GetByType(UInt32 type)
 	BSReadLocker locker(&m_lock);
 	if (!HasType(type)) return NULL;
 
-	const void* rttiType = RTTIForExtraType[type];
+	auto rttiType = RTTIForExtraType[type];
+	if (rttiType == RTTI::NONE) {
+		return NULL;
+	}
 
 	for(BSExtraData * traverse = m_data; traverse; traverse = traverse->next) {
-		if (Runtime_DynamicCast((void*)(traverse), RTTI_BSExtraData, rttiType) != NULL) {
+		if (IRTTI::Cast<void*>((void*)(traverse), RTTI::BSExtraData, rttiType) != NULL) {
 			return traverse;
 		}
 		//if(traverse->type == type)
diff --git a/skse64/skse64/GameBSExtraData.h b/skse64/skse64/GameBSExtraData.h
index 5725294..895d48e 100644
--- a/skse64/skse64/GameBSExtraData.h
+++ b/skse64/skse64/GameBSExtraData.h
@@ -257,10 +257,13 @@ public:
 private:
 	MEMBER_FN_PREFIX(BaseExtraList);
 	// 6AE109C256B98466C001B25B75BD48FB62F884B1+5A
-	DEFINE_MEMBER_FN(CheckContainerExtraData_Internal, bool, 0x0010CC40, bool isEquipped);
+	DEFINE_MEMBER_FN(CheckContainerExtraData_Internal, bool, offset1, bool isEquipped);
 	// This also does some internal ReferenceHandle lookup
 	// B995A21984B048C2B4F61777E615FFFB2806F9B7
-	DEFINE_MEMBER_FN(GetExtraTextDisplayData_Internal, ExtraTextDisplayData*, 0x00111420);
+	DEFINE_MEMBER_FN(GetExtraTextDisplayData_Internal, ExtraTextDisplayData*, offset2);
+private:
+    inline static auto offset1 = IAL::Offset(11452);
+    inline static auto offset2 = IAL::Offset(11508);
 };
 
 typedef tList<BaseExtraList> ExtendDataList;
diff --git a/skse64/skse64/GameCamera.cpp b/skse64/skse64/GameCamera.cpp
index 6259886..78176bb 100644
--- a/skse64/skse64/GameCamera.cpp
+++ b/skse64/skse64/GameCamera.cpp
@@ -1,5 +1,13 @@
 #include "GameCamera.h"
 
+// 0FAF5D3C755F11266ECC496FD392A0A2EA23403B+37
+static auto g_playerCamera = IAL::Addr<PlayerCamera**>(514642);
+
+PlayerCamera* PlayerCamera::GetSingleton(void)
+{
+	return *g_playerCamera;
+}
+
 void LocalMapCamera::SetDefaultStateMinFrustumDimensions(float width, float height)
 {
 	defaultState->minFrustumWidth = width / 2.0;
diff --git a/skse64/skse64/GameCamera.h b/skse64/skse64/GameCamera.h
index 4d37614..2deca9a 100644
--- a/skse64/skse64/GameCamera.h
+++ b/skse64/skse64/GameCamera.h
@@ -5,8 +5,8 @@
 
 #include "GameSettings.h"
 
-#include "skse64/NiObjects.h"
-#include "skse64/NiTypes.h"
+#include "NiObjects.h"
+#include "NiTypes.h"
 
 class TESCamera;
 class NiNode;
@@ -260,7 +260,9 @@ public:
 	UInt8		pad31[7];		// 31
 
 	MEMBER_FN_PREFIX(TESCamera);
-	DEFINE_MEMBER_FN(SetCameraState, UInt32, 0x004F5C80, TESCameraState * cameraState);
+	DEFINE_MEMBER_FN(SetCameraState, UInt32, offset1, TESCameraState * cameraState);
+private:
+	inline static auto offset1 = IAL::Offset(32290);
 };
 STATIC_ASSERT(offsetof(TESCamera, cameraNode) == 0x20);
 STATIC_ASSERT(sizeof(TESCamera) == 0x38);
@@ -297,8 +299,11 @@ public:
 	void SetDefaultStateBounds(float x, float y, float z);
 
 	MEMBER_FN_PREFIX(LocalMapCamera);
-	DEFINE_MEMBER_FN(ctor, void, 0x001F5390);
-	DEFINE_MEMBER_FN(SetNorthRotation, void, 0x001F5750, float northRotation);
+	DEFINE_MEMBER_FN(ctor, void, offset1);
+	DEFINE_MEMBER_FN(SetNorthRotation, void, offset2, float northRotation);
+private:
+	inline static auto offset1 = IAL::Offset(16084);
+	inline static auto offset2 = IAL::Offset(16089);
 };
 
 STATIC_ASSERT(offsetof(LocalMapCamera, northRotation) == 0x60);
@@ -337,12 +342,7 @@ public:
 	PlayerCamera();
 	virtual ~PlayerCamera();
 
-	static PlayerCamera *	GetSingleton(void)
-	{
-		// 0FAF5D3C755F11266ECC496FD392A0A2EA23403B+37
-		static RelocPtr<PlayerCamera*> g_playerCamera(0x02EC59B8);
-		return *g_playerCamera;
-	}
+	static PlayerCamera* GetSingleton(void);
 
 	enum
 	{
@@ -380,7 +380,9 @@ public:
 	UInt8	pad166[2];									// 166
 
 	MEMBER_FN_PREFIX(PlayerCamera);
-	DEFINE_MEMBER_FN(UpdateThirdPerson, void, 0x0084D630, bool weaponDrawn);
+	DEFINE_MEMBER_FN(UpdateThirdPerson, void, offset1, bool weaponDrawn);
+private:
+	inline static auto offset1 = IAL::Offset(49908);
 };
 
 STATIC_ASSERT(offsetof(PlayerCamera, cameraStates) == 0xB8);
diff --git a/skse64/skse64/GameData.cpp b/skse64/skse64/GameData.cpp
index 85c347a..383d6b6 100644
--- a/skse64/skse64/GameData.cpp
+++ b/skse64/skse64/GameData.cpp
@@ -1,71 +1,71 @@
-#include "skse64/GameData.h"
+#include "GameData.h"
 
 // 9615953AF64D4A2EB76F7BDE0F38D30B311B1351+40
-RelocAddr <UInt32*> g_gameTime(0x02F6B950);
+UInt32* g_gameTime = IAL::Addr<UInt32*>(523662);
 
 // AB8F3A77254A4A7EF23D7EA9C232AF6674856B23+2B7
-RelocPtr <DataHandler *> g_dataHandler(0x01EBE428);
+DataHandler ** g_dataHandler = IAL::Addr<DataHandler**>(514141);
 
 // 5F417CF4D2EB33C7D6903EA38BB5CDDEF48A6F83+4B
-RelocPtr <PersistentFormManager *> g_persistentFormManager(0x01EBEAE8);
+PersistentFormManager ** g_persistentFormManager = IAL::Addr<PersistentFormManager**>(514172);
 
 // 1AF6E849D5819F74A0FAC96D2E9D6AD46900704B+60
-RelocPtr <FaceGen *> g_faceGen(0x01EBEB40);
+FaceGen **g_faceGen = IAL::Addr<FaceGen**>(514182);
 
 // 6F7C1B16C6DF82EB76AEECA5A719A0A1EC196C45+28
-RelocPtr<MagicFavorites *>	g_MagicFavorites(0x02F26730);
+MagicFavorites **g_MagicFavorites = IAL::Addr<MagicFavorites**>(516858);
 
 // C744C8E2830617136B1E2036CE7FAA915F0BB6FF+1D
-RelocPtr<MenuTopicManager *> g_MenuTopicManager(0x02EFF988);
+MenuTopicManager** g_MenuTopicManager = IAL::Addr<MenuTopicManager**>(514959);
 
 // 72603162CC51078584DECEF18ACB8B61C91A63FC+86
-RelocPtr <ActorValueList *> g_actorValueList(0x01EBE418);
+ActorValueList ** g_actorValueList = IAL::Addr<ActorValueList**>(514139);
 
 // aWerewolfSpell
-RelocPtr <DefaultObjectList> g_defaultObjectList(0x01DB5E80);
+DefaultObjectList* g_defaultObjectList = IAL::Addr<DefaultObjectList*>(501723);
 
 // 2667BD6593B94B34C30A11FA27E9E27627704C71+AB
-RelocPtr <BGSSaveLoadManager *> g_saveLoadManager(0x02F26740);
+BGSSaveLoadManager** g_saveLoadManager = IAL::Addr<BGSSaveLoadManager**>(516860);
 
 // 3A2D747A1809205B8E28BD34724286AF76CF511B+2A
-RelocPtr <MiscStatManager>	g_MiscStatManager(0x02EC54D8);
+MiscStatManager*	g_MiscStatManager = IAL::Addr<MiscStatManager*>(514503);
 
 // A9D0A72CC9E5F85E2169118F999943FD43AF51EA+95
-RelocPtr <EquipManager *> g_equipManager(0x02EC4838);
+EquipManager** g_equipManager = IAL::Addr<EquipManager**>(514494);
 
 // 60C21F969EDFE69EBC96CEEF9620AAF752E2E28B+2
-RelocPtr <RelationshipRanks> g_relationshipRanks(0x01DD3EF8);
+RelationshipRanks* g_relationshipRanks = IAL::Addr<RelationshipRanks*>(502260);
 
-RelocAddr<_ChangeActorHeadPart> ChangeActorHeadPart(0x003DC3C0);
+_ChangeActorHeadPart ChangeActorHeadPart = IAL::Addr<_ChangeActorHeadPart>(26468);
 // E596A4244F8A3A25FD8DB7E62A3904933060BEA8+DD
-RelocAddr<_GetEitherHandSlot> GetEitherHandSlot(0x00331650);
+_GetEitherHandSlot GetEitherHandSlot = IAL::Addr<_GetEitherHandSlot>(23152);
 // A57D77CB5250B7D84828312B34413A9123EDDD53+35
-RelocAddr<_GetRightHandSlot> GetRightHandSlot(0x00331620);
+_GetRightHandSlot GetRightHandSlot = IAL::Addr<_GetRightHandSlot>(23151); 
 // A9D0A72CC9E5F85E2169118F999943FD43AF51EA+83
-RelocAddr<_GetLeftHandSlot> GetLeftHandSlot(0x003315F0);
-RelocAddr<_LookupActorValueByName> LookupActorValueByName(0x003E1450);
-RelocAddr<_UpdatePlayerTints> UpdatePlayerTints(0x008B40C0);
-RelocAddr<_GetActorBaseOverlays> GetActorBaseOverlays(0x00368B30);
-RelocAddr<_GetNumActorBaseOverlays> GetNumActorBaseOverlays(0x00368BC0);
+_GetLeftHandSlot GetLeftHandSlot = IAL::Addr<_GetRightHandSlot>(23150);
+_LookupActorValueByName LookupActorValueByName = IAL::Addr<_LookupActorValueByName>(26570); 
+_UpdatePlayerTints UpdatePlayerTints = IAL::Addr<_UpdatePlayerTints>(51521); 
+_GetActorBaseOverlays GetActorBaseOverlays = IAL::Addr<_GetActorBaseOverlays>(24275);
+_GetNumActorBaseOverlays GetNumActorBaseOverlays = IAL::Addr<_GetNumActorBaseOverlays>(24276);
 
-RelocAddr<_ApplyMasksToRenderTarget> ApplyMasksToRenderTarget(0x003DB420);
+_ApplyMasksToRenderTarget ApplyMasksToRenderTarget = IAL::Addr<_ApplyMasksToRenderTarget>(26454);
 
 // 0A2FCE1738344AE17FCD2B406BDCAAD46AA64394+DC | +1A
-RelocAddr<_UpdateModelSkin> UpdateModelSkin(0x003DC720); // Applies tint to ShaderType 5 nodes
+_UpdateModelSkin UpdateModelSkin = IAL::Addr<_UpdateModelSkin>(26472);// Applies tint to ShaderType 5 nodes
 // BFB8C9723EF563C7B5A0E336C4A44311725F8047+F4 | +1A
-RelocAddr<_UpdateModelHair> UpdateModelHair(0x003DC7E0); // Applies tint to ShaderType 6 nodes
-RelocAddr<_UpdateModelFace> UpdateModelFace(0x003DBDA0);
-RelocAddr<_UpdateHarvestModel> UpdateHarvestModel(0x0019CE40);
+_UpdateModelHair UpdateModelHair = IAL::Addr<_UpdateModelHair>(26473); // Applies tint to ShaderType 6 nodes
+_UpdateModelFace UpdateModelFace = IAL::Addr<_UpdateModelFace>(26458); 
+_UpdateHarvestModel UpdateHarvestModel = IAL::Addr<_UpdateHarvestModel>(14693);
 
-RelocAddr<_GetRelationshipIndex> GetRelationshipIndex(0x00345ED0);
+_GetRelationshipIndex GetRelationshipIndex = IAL::Addr<_GetRelationshipIndex>(23624);
 
 // aNosetype
-RelocPtr<FacePresetList> g_facePresetList(0x01DD6210);
+FacePresetList *g_facePresetList = IAL::Addr<FacePresetList*>(502301); 
 
 // C5B21010DCF340FCDDDC7866C50C3D78AEF34CB5+6B
 //RelocPtr <bool> g_isGameDataReady(0x058FEAB4);
 
-RelocAddr<_HasLOS> HasLOS(0x0091C620);
+_HasLOS HasLOS = IAL::Addr<_HasLOS>(53029);
 
 class LoadedModFinder
 {
@@ -87,12 +87,12 @@ const ModInfo * DataHandler::LookupModByName(const char * modName)
 
 DataHandler* DataHandler::GetSingleton()
 {
-	return *(g_dataHandler.GetPtr());
+	return *g_dataHandler;
 }
 
 MiscStatManager * MiscStatManager::GetSingleton(void)
 {
-	return g_MiscStatManager.GetPtr(); 
+	return g_MiscStatManager; 
 }
 
 MiscStatManager::MiscStat * MiscStatManager::Get(const char * name)
@@ -127,7 +127,7 @@ FaceGen * FaceGen::GetSingleton(void)
 
 MagicFavorites * MagicFavorites::GetSingleton()
 {
-	return *(g_MagicFavorites.GetPtr());
+	return *g_MagicFavorites;
 }
 
 void MagicFavorites::ClearHotkey(SInt8 idx)
@@ -172,7 +172,7 @@ bool MagicFavorites::IsFavorited(TESForm * form)
 
 MenuTopicManager * MenuTopicManager::GetSingleton(void)
 {
-	return *(g_MenuTopicManager.GetPtr());
+	return *g_MenuTopicManager;
 }
 
 NiPointer<TESObjectREFR> MenuTopicManager::GetDialogueTarget()
@@ -207,7 +207,7 @@ UInt32 ActorValueList::ResolveActorValueByName(const char * name)
 
 DefaultObjectList * DefaultObjectList::GetSingleton(void)
 {
-	return g_defaultObjectList.GetPtr();
+	return g_defaultObjectList;
 }
 
 void BGSSaveLoadManager::Save(const char * name)
diff --git a/skse64/skse64/GameData.h b/skse64/skse64/GameData.h
index a0af1c6..f60eeae 100644
--- a/skse64/skse64/GameData.h
+++ b/skse64/skse64/GameData.h
@@ -1,10 +1,10 @@
 #pragma once
 
 #include "skse64_common/Utilities.h"
-#include "skse64/GameTypes.h"
-#include "skse64/GameForms.h"
-#include "skse64/GameObjects.h"
-#include "skse64/GameReferences.h"
+#include "GameTypes.h"
+#include "GameForms.h"
+#include "GameObjects.h"
+#include "GameReferences.h"
 
 class TESObjectWEAP;
 class TESNPC;
@@ -38,7 +38,7 @@ class Setting;
 class NiAVObject;
 class NiColorA;
 
-extern RelocAddr <UInt32*> g_gameTime;
+extern UInt32* g_gameTime;
 
 struct FormRecordData
 {
@@ -361,7 +361,9 @@ public:
 	UInt32 LoadScripts_Hook();
 
 	MEMBER_FN_PREFIX(DataHandler);
-	DEFINE_MEMBER_FN(LoadScripts, UInt32, 0x001713D0);
+	DEFINE_MEMBER_FN(LoadScripts, UInt32, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(13657);
 };
 
 STATIC_ASSERT(offsetof(DataHandler, regionList) == 0xD00);
@@ -369,8 +371,8 @@ STATIC_ASSERT(offsetof(DataHandler, addonNodes) == 0xD20);
 STATIC_ASSERT(offsetof(DataHandler, modList) == 0xD60);
 STATIC_ASSERT(sizeof(DataHandler) == 0xDC0);
 
-extern RelocPtr <DataHandler*> g_dataHandler;
-extern RelocPtr <bool> g_isGameDataReady;
+extern DataHandler** g_dataHandler;
+extern bool* g_isGameDataReady;
 
 class MiscStatManager
 {
@@ -412,28 +414,31 @@ public:
 	static EquipManager *   GetSingleton(void);
 
 	MEMBER_FN_PREFIX(EquipManager);
-	DEFINE_MEMBER_FN(EquipItem, void, 0x00637A80, Actor * actor, TESForm * item, BaseExtraList * extraData, SInt32 count, BGSEquipSlot * equipSlot, bool withEquipSound, bool preventUnequip, bool showMsg, void * unk);
-	DEFINE_MEMBER_FN(UnequipItem, bool, 0x00638190, Actor * actor, TESForm * item, BaseExtraList * extraData, SInt32 count, BGSEquipSlot * equipSlot, bool unkFlag1, bool preventEquip, bool unkFlag2, bool unkFlag3, void * unk);
+	DEFINE_MEMBER_FN(EquipItem, void, offset1, Actor * actor, TESForm * item, BaseExtraList * extraData, SInt32 count, BGSEquipSlot * equipSlot, bool withEquipSound, bool preventUnequip, bool showMsg, void * unk);
+	DEFINE_MEMBER_FN(UnequipItem, bool, offset2, Actor * actor, TESForm * item, BaseExtraList * extraData, SInt32 count, BGSEquipSlot * equipSlot, bool unkFlag1, bool preventEquip, bool unkFlag2, bool unkFlag3, void * unk);
+private:
+	inline static auto offset1 = IAL::Offset(37938);
+	inline static auto offset2 = IAL::Offset(37945);
 };
 
 
 typedef BGSEquipSlot * (*_GetEitherHandSlot)();
-extern RelocAddr<_GetEitherHandSlot> GetEitherHandSlot;
+extern _GetEitherHandSlot GetEitherHandSlot;
 
 typedef BGSEquipSlot * (*_GetRightHandSlot)();
-extern RelocAddr<_GetRightHandSlot> GetRightHandSlot;
+extern _GetRightHandSlot GetRightHandSlot;
 
 typedef BGSEquipSlot * (*_GetLeftHandSlot)();
-extern RelocAddr<_GetLeftHandSlot> GetLeftHandSlot;
+extern _GetLeftHandSlot GetLeftHandSlot;
 
 typedef UInt32(*_LookupActorValueByName)(const char * name);
-extern RelocAddr<_LookupActorValueByName> LookupActorValueByName;
+extern _LookupActorValueByName LookupActorValueByName;
 
 typedef bool(*_HasLOS)(Actor* source, TESObjectREFR* target, UInt8 * unk1);
-extern RelocAddr<_HasLOS> HasLOS;
+extern _HasLOS HasLOS;
 
 typedef UInt32(*_GetRelationshipIndex)(TESForm * form1, TESForm * form2);
-extern RelocAddr<_GetRelationshipIndex> GetRelationshipIndex;
+extern _GetRelationshipIndex GetRelationshipIndex;
 
 class RelationshipRanks
 {
@@ -493,8 +498,8 @@ public:
 	{
 	public:
 		MEMBER_FN_PREFIX(MorphDatabase);
-		DEFINE_MEMBER_FN(GetFaceGenModelMapEntry, bool, 0x003D4F90, const char * meshPath, BSFaceGenModelMap ** entry);
-		DEFINE_MEMBER_FN(SetFaceGenModelMapEntry, void, 0x003D4D80, const char * meshPath, BSFaceGenModel * model);
+		DEFINE_MEMBER_FN(GetFaceGenModelMapEntry, bool, offset1, const char * meshPath, BSFaceGenModelMap ** entry);
+		DEFINE_MEMBER_FN(SetFaceGenModelMapEntry, void, offset2, const char * meshPath, BSFaceGenModel * model);
 
 		UInt64	unk00;	// 00
 		UInt32	unk08;	// 08
@@ -529,40 +534,45 @@ public:
 	UInt8			pad61[7];					// 61
 
 	MEMBER_FN_PREFIX(FaceGen);
-	DEFINE_MEMBER_FN(RegenerateHead, void, 0x003D2A60, BSFaceGenNiNode * headNode, BGSHeadPart * head, TESNPC * npc);
-	DEFINE_MEMBER_FN(ApplyMorph, void, 0x003D2380, BSFaceGenNiNode * faceGenNode, BGSHeadPart * headPart, BSFixedString * morphName, float relative);
+	DEFINE_MEMBER_FN(RegenerateHead, void, offset3, BSFaceGenNiNode * headNode, BGSHeadPart * head, TESNPC * npc);
+	DEFINE_MEMBER_FN(ApplyMorph, void, offset4, BSFaceGenNiNode * faceGenNode, BGSHeadPart * headPart, BSFixedString * morphName, float relative);
+private:
+	inline static auto offset1 = IAL::Offset(26312);
+	inline static auto offset2 = IAL::Offset(26311);
+	inline static auto offset3 = IAL::Offset(26259);
+	inline static auto offset4 = IAL::Offset(26254);
 };
 STATIC_ASSERT(offsetof(FaceGen, isReset) == 0x58);
 
 // Changes one HeadPart to another
 typedef void(*_ChangeActorHeadPart)(Actor*, BGSHeadPart* oldPart, BGSHeadPart* newPart);
-extern RelocAddr<_ChangeActorHeadPart> ChangeActorHeadPart;
+extern _ChangeActorHeadPart ChangeActorHeadPart;
 
 
 // Regenerates dynamic tints
 typedef UInt32(*_UpdatePlayerTints)();
-extern RelocAddr<_UpdatePlayerTints> UpdatePlayerTints;
+extern _UpdatePlayerTints UpdatePlayerTints;
 
 typedef BGSHeadPart ** (*_GetActorBaseOverlays)(TESNPC * npc);
-extern RelocAddr<_GetActorBaseOverlays> GetActorBaseOverlays;
+extern _GetActorBaseOverlays GetActorBaseOverlays;
 
 typedef UInt32(*_GetNumActorBaseOverlays)(TESNPC * npc);
-extern RelocAddr<_GetNumActorBaseOverlays> GetNumActorBaseOverlays;
+extern _GetNumActorBaseOverlays GetNumActorBaseOverlays;
 
 typedef bool(*_ApplyMasksToRenderTarget)(tArray<TintMask*> * tintMask, NiTexture * renderTarget);
-extern RelocAddr<_ApplyMasksToRenderTarget> ApplyMasksToRenderTarget;
+extern _ApplyMasksToRenderTarget ApplyMasksToRenderTarget;
 
 typedef UInt32(*_UpdateModelSkin)(NiAVObject*, NiColorA**);
-extern RelocAddr<_UpdateModelSkin> UpdateModelSkin;
+extern _UpdateModelSkin UpdateModelSkin;
 
 typedef UInt32(*_UpdateModelHair)(NiAVObject*, NiColorA**);
-extern RelocAddr<_UpdateModelHair> UpdateModelHair;
+extern _UpdateModelHair UpdateModelHair;
 
 typedef UInt32(*_UpdateModelFace)(NiAVObject*);
-extern RelocAddr<_UpdateModelFace> UpdateModelFace;
+extern _UpdateModelFace UpdateModelFace;
 
 typedef void(*_UpdateHarvestModel)(TESObjectREFR*, NiAVObject*);
-extern RelocAddr<_UpdateHarvestModel> UpdateHarvestModel;
+extern _UpdateHarvestModel UpdateHarvestModel;
 
 // 40
 class MagicFavorites
@@ -676,12 +686,18 @@ public:
 	}
 
 	MEMBER_FN_PREFIX(PersistentFormManager);
-	DEFINE_MEMBER_FN(CreateOffensiveEnchantment, EnchantmentItem *, 0x0059F0F0, tArray<MagicItem::EffectItem> * effectArray);
-	DEFINE_MEMBER_FN(CreateDefensiveEnchantment, EnchantmentItem *, 0x0059F190, tArray<MagicItem::EffectItem> * effectArray);
-	DEFINE_MEMBER_FN(CreatePoison, void, 0x0059F2E0, tArray<MagicItem::EffectItem> * effectArray, AlchemyItem ** poison);
-	DEFINE_MEMBER_FN(CreatePotion, void, 0x0059F230, AlchemyItem ** potion, tArray<MagicItem::EffectItem> * effectArray);
+	DEFINE_MEMBER_FN(CreateOffensiveEnchantment, EnchantmentItem *, offset1, tArray<MagicItem::EffectItem> * effectArray);
+	DEFINE_MEMBER_FN(CreateDefensiveEnchantment, EnchantmentItem *, offset2, tArray<MagicItem::EffectItem> * effectArray);
+	DEFINE_MEMBER_FN(CreatePoison, void, offset3, tArray<MagicItem::EffectItem> * effectArray, AlchemyItem ** poison);
+	DEFINE_MEMBER_FN(CreatePotion, void, offset4, AlchemyItem ** potion, tArray<MagicItem::EffectItem> * effectArray);
 	//DEFINE_MEMBER_FN(AddPersistentForm, void, 0x0068A0F0, TESForm *);
-	DEFINE_MEMBER_FN(ScheduleForDeletion, void, 0x0059F6E0, TESForm *);
+	DEFINE_MEMBER_FN(ScheduleForDeletion, void, offset5, TESForm *);
+private:
+	inline static auto offset1 = IAL::Offset(35263);
+	inline static auto offset2 = IAL::Offset(35264);
+	inline static auto offset3 = IAL::Offset(35266);
+	inline static auto offset4 = IAL::Offset(35265);
+	inline static auto offset5 = IAL::Offset(35269);
 };
 STATIC_ASSERT(sizeof(PersistentFormManager) == 0xD0);
 
@@ -866,14 +882,21 @@ public:
 	
 	private:
 	// SE: Save_Internal signature changed! Normal save: unk1=2, unk2=0
-	DEFINE_MEMBER_FN(Save_Internal, bool, 0x00586DE0, int unk1, UInt32 unk2, const char * name);
-	DEFINE_MEMBER_FN(Load_Internal, bool, 0x00587350, const char * name, int unk1, UInt32 unk2, UInt32 unk3);
+	DEFINE_MEMBER_FN(Save_Internal, bool, offset1, int unk1, UInt32 unk2, const char * name);
+	DEFINE_MEMBER_FN(Load_Internal, bool, offset2, const char * name, int unk1, UInt32 unk2, UInt32 unk3);
 
-	DEFINE_MEMBER_FN(SaveGame_HookTarget, void, 0x0057CCC0, UInt64 *unk0);
-	DEFINE_MEMBER_FN(LoadGame_HookTarget, bool, 0x0057D1A0, UInt64 *unk0, UInt32 unk1, UInt32 unk2, void *unk3);
+	DEFINE_MEMBER_FN(SaveGame_HookTarget, void, offset3, UInt64 *unk0);
+	DEFINE_MEMBER_FN(LoadGame_HookTarget, bool, offset4, UInt64 *unk0, UInt32 unk1, UInt32 unk2, void *unk3);
 
-	DEFINE_MEMBER_FN(ProcessEvents_Internal, void, 0x00589A60);
-	DEFINE_MEMBER_FN(DeleteSavegame, void, 0x00586D70, const char * saveName, UInt32 unk1);
+	DEFINE_MEMBER_FN(ProcessEvents_Internal, void, offset5);
+	DEFINE_MEMBER_FN(DeleteSavegame, void, offset6, const char * saveName, UInt32 unk1);
+private:
+	inline static auto offset1 = IAL::Offset(34818);
+	inline static auto offset2 = IAL::Offset(34819);
+	inline static auto offset3 = IAL::Offset(34676);
+	inline static auto offset4 = IAL::Offset(34677);
+	inline static auto offset5 = IAL::Offset(34862);
+	inline static auto offset6 = IAL::Offset(34817);
 };
 STATIC_ASSERT(offsetof(BGSSaveLoadManager, thread) == 0x2B0);
 STATIC_ASSERT(offsetof(BGSSaveLoadManager::Thread, hThread) == 0x30);
diff --git a/skse64/skse64/GameEvents.cpp b/skse64/skse64/GameEvents.cpp
index 8c16f2e..83b375a 100644
--- a/skse64/skse64/GameEvents.cpp
+++ b/skse64/skse64/GameEvents.cpp
@@ -1,7 +1,7 @@
 #include "GameEvents.h"
 
 // 614D2151B14D0D61E7DA7088CAB85DB111E2E0D3+1B
-RelocAddr<_GetEventDispatcherList> GetEventDispatcherList(0x00186790);
+_GetEventDispatcherList GetEventDispatcherList = IAL::Addr<_GetEventDispatcherList>(14108);
 
 //EventDispatcher<BGSFootstepEvent>* g_footstepEventDispatcher = (EventDispatcher<BGSFootstepEvent>*) 0x01B2E9C0;
 
diff --git a/skse64/skse64/GameEvents.h b/skse64/skse64/GameEvents.h
index e585b44..e4df68b 100644
--- a/skse64/skse64/GameEvents.h
+++ b/skse64/skse64/GameEvents.h
@@ -40,11 +40,11 @@ class EventDispatcher
 	// Note: in SE there are multiple identical copies of all these functions 
 	MEMBER_FN_PREFIX(EventDispatcher);
 	// 66B1C7AC473D5EA48E4FD620BBFE0A06392C5885+66
-	DEFINE_MEMBER_FN(AddEventSink_Internal, void, 0x0056B600, SinkT * eventSink);
+	DEFINE_MEMBER_FN(AddEventSink_Internal, void, offset1, SinkT * eventSink);
 	// ??_7BGSProcedureShoutExecState@@6B@ dtor | +43
-	DEFINE_MEMBER_FN(RemoveEventSink_Internal, void, 0x00423B70, SinkT * eventSink);
+	DEFINE_MEMBER_FN(RemoveEventSink_Internal, void, offset2, SinkT * eventSink);
 	// D6BA7CEC95B2C2B9C593A9AEE7F0ADFFB2C10E11+456
-	DEFINE_MEMBER_FN(SendEvent_Internal, void, 0x00177DC0, EventArgT * evn);
+	DEFINE_MEMBER_FN(SendEvent_Internal, void, offset3, EventArgT * evn);
 
 public:
 
@@ -53,6 +53,11 @@ public:
 	void AddEventSink(SinkT * eventSink)		{ CALL_MEMBER_FN(this,AddEventSink_Internal)(eventSink); }
 	void RemoveEventSink(SinkT * eventSink)		{ CALL_MEMBER_FN(this,RemoveEventSink_Internal)(eventSink); }
 	void SendEvent(EventArgT * evn)				{ CALL_MEMBER_FN(this,SendEvent_Internal)(evn); }
+
+private:
+	inline static auto offset1 = IAL::Offset(34381);
+	inline static auto offset2 = IAL::Offset(28367);
+	inline static auto offset3 = IAL::Offset(13805);
 };
 STATIC_ASSERT(sizeof(EventDispatcher<void*>) == 0x58);
 
@@ -499,6 +504,11 @@ struct TESCellAttachDetachEvent
 	UInt8			attached;	// 08	- 01 - attached, 00 - detached
 };
 
+struct TESCellFullyLoadedEvent
+{
+	TESObjectCELL* cell;
+};
+
 struct TESMoveAttachDetachEvent
 {
 	TESObjectREFR * reference;	// 00
@@ -633,67 +643,69 @@ struct DefaultObjectsReadyEvent
 	};
 };
 
+struct TESFastTravelEndEvent;
+
 class EventDispatcherList
 {
 public:
-	EventDispatcher<void>								unk00;					//	00
-	EventDispatcher<void>								unk58;					//  58  - sink offset 010
-	EventDispatcher<TESActiveEffectApplyRemoveEvent>	unkB0;					//  B0  - sink offset 018
-	EventDispatcher<void>								unk108;					//  108 - sink offset 020
-	EventDispatcher<void>								unk160;					//  160 - sink offset 028
-	EventDispatcher<TESCellAttachDetachEvent>			unk1B8;					//  1B8 - sink offset 030
-	EventDispatcher<void>								unk210;					//  210 - sink offset 038
-	EventDispatcher<void>								unk2C0;					//  2C0 - sink offset 040
-	EventDispatcher<TESCombatEvent>						combatDispatcher;		//  318 - sink offset 048
-	EventDispatcher<TESContainerChangedEvent>			unk370;					//  370 - sink offset 050
-	EventDispatcher<TESDeathEvent>						deathDispatcher;		//  3C8 - sink offset 058
-	EventDispatcher<void>								unk420;					//  420 - sink offset 068
-	EventDispatcher<void>								unk478;					//  478 - sink offset 070
-	EventDispatcher<void>								unk4D0;					//  4D0 - sink offset 078
-	EventDispatcher<void>								unk528;					//  528 - sink offset 080
-	EventDispatcher<void>								unk580;					//  580 - sink offset 088
-	EventDispatcher<void>								unk5D8;					//  5D8 - sink offset 090
-	EventDispatcher<void>								unk630;					//  630 - sink offset 098
-	EventDispatcher<TESInitScriptEvent>					initScriptDispatcher;	//  688 - sink offset 0A0
-	EventDispatcher<void>								unk6E0;					//  6E0 - sink offset 0A8
-	EventDispatcher<void>								unk738;					//  738 - sink offset 0B0
-	EventDispatcher<void>								unk790;					//  790 - sink offset 0B8
-	EventDispatcher<void>								unk7E8;					//  7E8 - sink offset 0C0
-	EventDispatcher<void>								unk840;					//  840 - sink offset 0C8
-	EventDispatcher<TESObjectLoadedEvent>				objectLoadedDispatcher;	//  898 - sink offset 0D0
-	EventDispatcher<void>								unk8F0;					//  8F0 - sink offset 0D8
-	EventDispatcher<void>								unk948;					//  948 - sink offset 0E0
-	EventDispatcher<void>								unk9A0;					//  9A0 - sink offset 0E8
-	EventDispatcher<void>								unk9F8;					//  9F8 - sink offset 0F0
-	EventDispatcher<void>								unkA50;					//  A50 - sink offset 0F8
-	EventDispatcher<void>								unkAA8;					//  AA8 - sink offset 100
-	EventDispatcher<void>								unkB00;					//  B00 - sink offset 108
-	EventDispatcher<void>								unkB58;					//  B58 - sink offset 110
-	EventDispatcher<void>								unkBB0;					//  BB0 - sink offset 118
-	EventDispatcher<void>								unkC08;					//  C08 - sink offset 120
-	EventDispatcher<void>								unkC60;					//  C60 - sink offset 128
-	EventDispatcher<void>								unkCB8;					//  CB8 - sink offset 130
-	EventDispatcher<void>								unkD10;					//  D10 - sink offset 138
-	EventDispatcher<void>								unkD68;					//  D68 - sink offset 140
-	EventDispatcher<void>								unkDC0;					//  DC0 - sink offset 148
-	EventDispatcher<void>								unkE18;					//  E18 - sink offset 150
-	EventDispatcher<void>								unkE70;					//  E70 - sink offset 158
-	EventDispatcher<void>								unkEC8;					//  EC8 - sink offset 160
-	EventDispatcher<void>								unkF20;					//  F20 - sink offset 168
-	EventDispatcher<void>								unkF78;					//  F78 - sink offset 170
-	EventDispatcher<void>								unkFD0;					//  FD0 - sink offset 178
-	EventDispatcher<void>								unk1028;				// 1028 - sink offset 180
-	EventDispatcher<void>								unk1080;				// 1080 - sink offset 188
-	EventDispatcher<void>								unk10D8;				// 10D8 - sink offset 190
-	EventDispatcher<void>								unk1130;				// 1130 - sink offset 198
-	EventDispatcher<void>								unk1188;				// 1188 - sink offset 200
-	EventDispatcher<void>								unk11E0;				// 11E0 - sink offset 208
-	EventDispatcher<void>								unk1238;				// 1238 - sink offset 210
-	EventDispatcher<TESUniqueIDChangeEvent>				uniqueIdChangeDispatcher;	// 1290 - sink offset 218
+	EventDispatcher<void> unk_0000; // 0000
+	EventDispatcher<void> unk_0058; // 0058
+	EventDispatcher<TESActiveEffectApplyRemoveEvent> unk_00B0; // 00B0
+	EventDispatcher<void> unk_0108; // 0108
+	EventDispatcher<void> unk_0160; // 0160
+	EventDispatcher<TESCellAttachDetachEvent> unk_01B8; // 01B8
+	EventDispatcher<TESCellFullyLoadedEvent> unk_0210; // 0210
+	EventDispatcher<void> unk_0268; // 0268
+	EventDispatcher<TESCombatEvent> combatDispatcher; // 02C0
+	EventDispatcher<TESContainerChangedEvent> unk_0318; // 0318
+	EventDispatcher<TESDeathEvent> deathDispatcher; // 0370
+	EventDispatcher<void> unk_03C8; // 03C8
+	EventDispatcher<void> unk_0420; // 0420
+	EventDispatcher<void> unk_0478; // 0478
+	EventDispatcher<void> unk_04D0; // 04D0
+	EventDispatcher<void> unk_0528; // 0528
+	EventDispatcher<void> unk_0580; // 0580
+	EventDispatcher<void> unk_05D8; // 05D8
+	EventDispatcher<TESInitScriptEvent> initScriptDispatcher; // 0630
+	EventDispatcher<void> unk_0688; // 0688
+	EventDispatcher<void> unk_06E0; // 06E0
+	EventDispatcher<void> unk_0738; // 0738
+	EventDispatcher<void> unk_0790; // 0790
+	EventDispatcher<TESMoveAttachDetachEvent> unk_07E8; // 07E8
+	EventDispatcher<TESObjectLoadedEvent> objectLoadedDispatcher; // 0840
+	EventDispatcher<void> unk_0898; // 0898
+	EventDispatcher<void> unk_08F0; // 08F0
+	EventDispatcher<void> unk_0948; // 0948
+	EventDispatcher<void> unk_09A0; // 09A0
+	EventDispatcher<void> unk_09F8; // 09F8
+	EventDispatcher<void> unk_0A50; // 0A50
+	EventDispatcher<void> unk_0AA8; // 0AA8
+	EventDispatcher<void> unk_0B00; // 0B00
+	EventDispatcher<void> unk_0B58; // 0B58
+	EventDispatcher<void> unk_0BB0; // 0BB0
+	EventDispatcher<void> unk_0C08; // 0C08
+	EventDispatcher<void> unk_0C60; // 0C60
+	EventDispatcher<void> unk_0CB8; // 0CB8
+	EventDispatcher<void> unk_0D10; // 0D10
+	EventDispatcher<void> unk_0D68; // 0D68
+	EventDispatcher<void> unk_0DC0; // 0DC0
+	EventDispatcher<void> unk_0E18; // 0E18
+	EventDispatcher<void> unk_0E70; // 0E70
+	EventDispatcher<void> unk_0EC8; // 0EC8
+	EventDispatcher<void> unk_0F20; // 0F20
+	EventDispatcher<void> unk_0F78; // 0F78
+	EventDispatcher<void> unk_0FD0; // 0FD0
+	EventDispatcher<void> unk_1028; // 1028
+	EventDispatcher<void> unk_1080; // 1080
+	EventDispatcher<TESUniqueIDChangeEvent> unk_10D8; // 10D8
+	EventDispatcher<void> unk_1130; // 1130 
+	EventDispatcher<void> unk_1188; // 1188
+	EventDispatcher<void> unk_11E0; // 11E0
+	EventDispatcher<TESFastTravelEndEvent> fastTravelEndEventDispatcher; // 1238
 };
 
 typedef EventDispatcherList*(*_GetEventDispatcherList)();
-extern RelocAddr<_GetEventDispatcherList> GetEventDispatcherList;
+extern _GetEventDispatcherList GetEventDispatcherList;
 
 // For testing
 //extern EventDispatcher<TESSleepStartEvent> * g_sleepStartEventDispatcher;
diff --git a/skse64/skse64/GameExtraData.cpp b/skse64/skse64/GameExtraData.cpp
index 2f8d14d..fb1208a 100644
--- a/skse64/skse64/GameExtraData.cpp
+++ b/skse64/skse64/GameExtraData.cpp
@@ -6,51 +6,51 @@
 #include "HashUtil.h"
 
 // ??_7ExtraHealth@@6B@
-const RelocPtr<uintptr_t> s_ExtraHealthVtbl(0x0152C060);
+const uintptr_t s_ExtraHealthVtbl = IAL::Addr<uintptr_t>(229541);
 // ??_7ExtraCharge@@6B@
-const RelocPtr<uintptr_t> s_ExtraChargeVtbl(0x0152C0C0);
+const uintptr_t s_ExtraChargeVtbl = IAL::Addr<uintptr_t>(229544);
 // ??_7ExtraCount@@6B@
-const RelocPtr<uintptr_t> s_ExtraCountVtbl(0x0152BFE0);
+const uintptr_t s_ExtraCountVtbl = IAL::Addr<uintptr_t>(229537);
 // ??_7ExtraTextDisplayData@@6B@
-const RelocPtr<uintptr_t> s_ExtraTextDisplayVtbl(0x0152CAE0);
+const uintptr_t s_ExtraTextDisplayVtbl = IAL::Addr<uintptr_t>(229625);
 // ??_7ExtraSoul@@6B@
-const RelocPtr<uintptr_t> s_ExtraSoulVtbl(0x0152F2E0);
+const uintptr_t s_ExtraSoulVtbl = IAL::Addr<uintptr_t>(229890); 
 // ??_7ExtraOwnership@@6B@
-const RelocPtr<uintptr_t> s_ExtraOwnershipVtbl(0x0152BF80);
+const uintptr_t s_ExtraOwnershipVtbl = IAL::Addr<uintptr_t>(229534); 
 // ??_7ExtraAliasInstanceArray@@6B@
-const RelocPtr<uintptr_t> s_ExtraAliasInstanceArrayVtbl(0x0152C9A0);
+const uintptr_t s_ExtraAliasInstanceArrayVtbl = IAL::Addr<uintptr_t>(229615);
 // ??_7ExtraCannotWear@@6B@
-const RelocPtr<uintptr_t> s_ExtraCannotWearVtbl(0x0152C040);
+const uintptr_t s_ExtraCannotWearVtbl = IAL::Addr<uintptr_t>(229540);
 // ??_7ExtraHotkey@@6B@
-const RelocPtr<uintptr_t> s_ExtraHotkeyVtbl(0x0152C120);
+const uintptr_t s_ExtraHotkeyVtbl = IAL::Addr<uintptr_t>(229547);
 // ??_7ExtraForcedTarget@@6B@
-const RelocPtr<uintptr_t> s_ExtraForcedTargetVtbl(0x0152CB60);
+const uintptr_t s_ExtraForcedTargetVtbl = IAL::Addr<uintptr_t>(229629);
 // ??_7ExtraReferenceHandle@@6B@
-const RelocPtr<uintptr_t> s_ExtraReferenceHandleVtbl(0x0152C160);
+const uintptr_t s_ExtraReferenceHandleVtbl = IAL::Addr<uintptr_t>(229549);
 // ??_7ExtraEnchantment@@6B@
-const RelocPtr<uintptr_t> s_ExtraEnchantmentVtbl(0x0152C480);
+const uintptr_t s_ExtraEnchantmentVtbl = IAL::Addr<uintptr_t>(229574);
 // ??_7ExtraRank@@6B@
-const RelocPtr<uintptr_t> s_ExtraRankVtbl(0x0152BFC0);
+const uintptr_t s_ExtraRankVtbl = IAL::Addr<uintptr_t>(229536);
 // ??_7ExtraUniqueID@@6B@
-const RelocPtr<uintptr_t> s_ExtraUniqueIdVtbl(0x0152CBA0);
+const uintptr_t s_ExtraUniqueIdVtbl = IAL::Addr<uintptr_t>(229631);
 
 ExtraHealth* ExtraHealth::Create() 
 {
-	ExtraHealth* xHealth = (ExtraHealth*)BSExtraData::Create(sizeof(ExtraHealth), s_ExtraHealthVtbl.GetUIntPtr());
+	ExtraHealth* xHealth = (ExtraHealth*)BSExtraData::Create(sizeof(ExtraHealth), s_ExtraHealthVtbl);
 	xHealth->health = 1;
 	return xHealth;
 }
 
 ExtraCharge* ExtraCharge::Create()
 {
-	ExtraCharge* xCharge = (ExtraCharge*)BSExtraData::Create(sizeof(ExtraCharge), s_ExtraChargeVtbl.GetUIntPtr());
+	ExtraCharge* xCharge = (ExtraCharge*)BSExtraData::Create(sizeof(ExtraCharge), s_ExtraChargeVtbl);
 	xCharge->charge = 0;
 	return xCharge;
 }
 
 ExtraEnchantment* ExtraEnchantment::Create()
 {
-	ExtraEnchantment* xEnchantment = (ExtraEnchantment*)BSExtraData::Create(sizeof(ExtraEnchantment), s_ExtraEnchantmentVtbl.GetUIntPtr());
+	ExtraEnchantment* xEnchantment = (ExtraEnchantment*)BSExtraData::Create(sizeof(ExtraEnchantment), s_ExtraEnchantmentVtbl);
 	xEnchantment->enchant = NULL;
 	xEnchantment->maxCharge = 0;
 	xEnchantment->unk0E = 0;
@@ -59,39 +59,39 @@ ExtraEnchantment* ExtraEnchantment::Create()
 
 ExtraCannotWear* ExtraCannotWear::Create() 
 {
-	ExtraCannotWear* xCannotWear = (ExtraCannotWear*)BSExtraData::Create(sizeof(ExtraCannotWear), s_ExtraCannotWearVtbl.GetUIntPtr());
+	ExtraCannotWear* xCannotWear = (ExtraCannotWear*)BSExtraData::Create(sizeof(ExtraCannotWear), s_ExtraCannotWearVtbl);
 	return xCannotWear;
 }
 
 ExtraHotkey* ExtraHotkey::Create()
 {
-	ExtraHotkey* xHotkey = (ExtraHotkey*)BSExtraData::Create(sizeof(ExtraHotkey), s_ExtraHotkeyVtbl.GetUIntPtr());
+	ExtraHotkey* xHotkey = (ExtraHotkey*)BSExtraData::Create(sizeof(ExtraHotkey), s_ExtraHotkeyVtbl);
 	xHotkey->hotkey = -1;
 	return xHotkey;
 }
 
 ExtraCount* ExtraCount::Create()
 {
-	ExtraCount* xCount = (ExtraCount*)BSExtraData::Create(sizeof(ExtraCount), s_ExtraCountVtbl.GetUIntPtr());
+	ExtraCount* xCount = (ExtraCount*)BSExtraData::Create(sizeof(ExtraCount), s_ExtraCountVtbl);
 	return xCount;
 }
 
 ExtraSoul* ExtraSoul::Create()
 {
-	ExtraSoul* xSoul = (ExtraSoul*)BSExtraData::Create(sizeof(ExtraSoul), s_ExtraSoulVtbl.GetUIntPtr());
+	ExtraSoul* xSoul = (ExtraSoul*)BSExtraData::Create(sizeof(ExtraSoul), s_ExtraSoulVtbl);
 	return xSoul;
 }
 
 ExtraForcedTarget* ExtraForcedTarget::Create()
 {
-	ExtraForcedTarget* xForcedTarget = (ExtraForcedTarget*)BSExtraData::Create(sizeof(ExtraForcedTarget), s_ExtraForcedTargetVtbl.GetUIntPtr());
+	ExtraForcedTarget* xForcedTarget = (ExtraForcedTarget*)BSExtraData::Create(sizeof(ExtraForcedTarget), s_ExtraForcedTargetVtbl);
 	xForcedTarget->handle = (*g_invalidRefHandle);
 	return xForcedTarget;
 }
 
 ExtraTextDisplayData* ExtraTextDisplayData::Create()
 {
-	ExtraTextDisplayData* xText = (ExtraTextDisplayData*)BSExtraData::Create(sizeof(ExtraTextDisplayData), s_ExtraTextDisplayVtbl.GetUIntPtr());
+	ExtraTextDisplayData* xText = (ExtraTextDisplayData*)BSExtraData::Create(sizeof(ExtraTextDisplayData), s_ExtraTextDisplayVtbl);
 	xText->unk14 = -1;
 	xText->extraHealthValue = 1.0;
 	return xText;
@@ -99,20 +99,20 @@ ExtraTextDisplayData* ExtraTextDisplayData::Create()
 
 ExtraReferenceHandle* ExtraReferenceHandle::Create()
 {
-	ExtraReferenceHandle* xReference = (ExtraReferenceHandle*)BSExtraData::Create(sizeof(ExtraReferenceHandle), s_ExtraReferenceHandleVtbl.GetUIntPtr());
+	ExtraReferenceHandle* xReference = (ExtraReferenceHandle*)BSExtraData::Create(sizeof(ExtraReferenceHandle), s_ExtraReferenceHandleVtbl);
 	return xReference;
 }
 
 ExtraRank* ExtraRank::Create() 
 {
-	ExtraRank* xRank = (ExtraRank*)BSExtraData::Create(sizeof(ExtraRank), s_ExtraRankVtbl.GetUIntPtr());
+	ExtraRank* xRank = (ExtraRank*)BSExtraData::Create(sizeof(ExtraRank), s_ExtraRankVtbl);
 	xRank->rank = 0;
 	return xRank;
 }
 
 ExtraUniqueID* ExtraUniqueID::Create() 
 {
-	ExtraUniqueID* xUniqueId = (ExtraUniqueID*)BSExtraData::Create(sizeof(ExtraUniqueID), s_ExtraUniqueIdVtbl.GetUIntPtr());
+	ExtraUniqueID* xUniqueId = (ExtraUniqueID*)BSExtraData::Create(sizeof(ExtraUniqueID), s_ExtraUniqueIdVtbl);
 	xUniqueId->ownerFormId = 0;
 	xUniqueId->uniqueId = 0;
 	return xUniqueId;
diff --git a/skse64/skse64/GameExtraData.h b/skse64/skse64/GameExtraData.h
index 835c092..fee4e83 100644
--- a/skse64/skse64/GameExtraData.h
+++ b/skse64/skse64/GameExtraData.h
@@ -67,10 +67,15 @@ public:
 	void GetEquipItemData(EquipData& stateOut, SInt32 itemId, SInt32 baseCount) const;
 
 	MEMBER_FN_PREFIX(InventoryEntryData);
-	DEFINE_MEMBER_FN(GenerateName, const char *, 0x001D73C0);
-	DEFINE_MEMBER_FN(GetValue, SInt32, 0x001D66E0);
-	DEFINE_MEMBER_FN(IsOwnedBy, bool, 0x001D7510, TESForm * actor, bool unk1);
-	DEFINE_MEMBER_FN(GetSoulLevel, UInt32, 0x001D6860);
+	DEFINE_MEMBER_FN(GenerateName, const char *, offset1);
+	DEFINE_MEMBER_FN(GetValue, SInt32, offset2);
+	DEFINE_MEMBER_FN(IsOwnedBy, bool, offset3, TESForm * actor, bool unk1);
+	DEFINE_MEMBER_FN(GetSoulLevel, UInt32, offset4);
+private:
+	inline static auto offset1 = IAL::Offset(15780);
+	inline static auto offset2 = IAL::Offset(15757);
+	inline static auto offset3 = IAL::Offset(15781);
+	inline static auto offset4 = IAL::Offset(15758);
 };
 
 typedef tList<InventoryEntryData> EntryDataList;
@@ -98,8 +103,8 @@ public:
 		void GetEquipItemData(InventoryEntryData::EquipData& stateOut, TESForm * item, SInt32 itemId) const;
 
 		MEMBER_FN_PREFIX(Data);
-		DEFINE_MEMBER_FN(SetUniqueID, void, 0x001ECC60, BaseExtraList* itemList, TESForm * oldForm, TESForm * newForm);
-		DEFINE_MEMBER_FN(TransferItemUID, void, 0x001ECE20, BaseExtraList * extraList, TESForm * oldForm, TESForm * newForm, UInt32 unk1);
+		DEFINE_MEMBER_FN(SetUniqueID, void, offset1, BaseExtraList* itemList, TESForm * oldForm, TESForm * newForm);
+		DEFINE_MEMBER_FN(TransferItemUID, void, offset2, BaseExtraList * extraList, TESForm * oldForm, TESForm * newForm, UInt32 unk1);
 	};
 
 	Data * data;
@@ -117,6 +122,9 @@ public:
 	FoundEquipData	FindEquipped(FormMatcher& matcher, bool isWorn = true, bool isWornLeft = true) const;
 	FoundHotkeyData	FindHotkey(SInt32 hotkey) const;
 	FoundHotkeyData	FindHotkey(TESForm * form) const;
+private:
+	inline static auto offset1 = IAL::Offset(15907);
+	inline static auto offset2 = IAL::Offset(15909);
 };
 typedef ExtraContainerChanges::FoundEquipData EquipData;
 typedef ExtraContainerChanges::FoundHotkeyData HotkeyData;
@@ -552,8 +560,11 @@ public:
 	static ExtraTextDisplayData* Create();
 
 	MEMBER_FN_PREFIX(ExtraTextDisplayData);
-	DEFINE_MEMBER_FN(SetName_Internal, void, 0x0013C870, const char * name);
-	DEFINE_MEMBER_FN(GenerateName_Internal, const char*, 0x0013C740, TESForm * form, float extraHealthValue);
+	DEFINE_MEMBER_FN(SetName_Internal, void, offset1, const char * name);
+	DEFINE_MEMBER_FN(GenerateName_Internal, const char*, offset2, TESForm * form, float extraHealthValue);
+private:
+	inline static auto offset1 = IAL::Offset(12628);
+	inline static auto offset2 = IAL::Offset(12626);
 };
  //	ExtraAlphaCutoff
 
@@ -640,17 +651,17 @@ class ExtraFlags : public BSExtraData
  //	ExtraMissingRefIDs
 
 
-extern const RelocPtr<uintptr_t> s_ExtraHealthVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraChargeVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraCountVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraTextDisplayVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraSoulVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraOwnershipVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraAliasInstanceArrayVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraCannotWearVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraHotkeyVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraForcedTargetVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraReferenceHandleVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraEnchantmentVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraRankVtbl;
-extern const RelocPtr<uintptr_t> s_ExtraUniqueIdVtbl;
+extern const uintptr_t s_ExtraHealthVtbl;
+extern const uintptr_t s_ExtraChargeVtbl;
+extern const uintptr_t s_ExtraCountVtbl;
+extern const uintptr_t s_ExtraTextDisplayVtbl;
+extern const uintptr_t s_ExtraSoulVtbl;
+extern const uintptr_t s_ExtraOwnershipVtbl;
+extern const uintptr_t s_ExtraAliasInstanceArrayVtbl;
+extern const uintptr_t s_ExtraCannotWearVtbl;
+extern const uintptr_t s_ExtraHotkeyVtbl;
+extern const uintptr_t s_ExtraForcedTargetVtbl;
+extern const uintptr_t s_ExtraReferenceHandleVtbl;
+extern const uintptr_t s_ExtraEnchantmentVtbl;
+extern const uintptr_t s_ExtraRankVtbl;
+extern const uintptr_t s_ExtraUniqueIdVtbl;
diff --git a/skse64/skse64/GameFormComponents.cpp b/skse64/skse64/GameFormComponents.cpp
index daf5c8b..d019e11 100644
--- a/skse64/skse64/GameFormComponents.cpp
+++ b/skse64/skse64/GameFormComponents.cpp
@@ -1,5 +1,5 @@
-#include "skse64/GameFormComponents.h"
-#include "skse64/GameData.h"
+#include "GameFormComponents.h"
+#include "GameData.h"
 
 UInt32 BGSBipedObjectForm::AddSlotToMask(UInt32 slot)
 {
diff --git a/skse64/skse64/GameFormComponents.h b/skse64/skse64/GameFormComponents.h
index 0ba0b1c..10eb66f 100644
--- a/skse64/skse64/GameFormComponents.h
+++ b/skse64/skse64/GameFormComponents.h
@@ -2,7 +2,7 @@
 
 // everything deriving from BaseFormComponent but not TESForm goes here
 
-#include "skse64/GameTypes.h"
+#include "GameTypes.h"
 
 class TESObjectSTAT;
 class BGSSoundDescriptorForm;
@@ -471,7 +471,9 @@ public:
 	UInt32	unk0C;	// 0C - init'd to FFFFFFFF
 
 	MEMBER_FN_PREFIX(TESDescription);
-	DEFINE_MEMBER_FN(Get, void, 0x00190480, BSString * out, TESForm * parent, UInt32 fieldType);
+	DEFINE_MEMBER_FN(Get, void, offset1, BSString * out, TESForm * parent, UInt32 fieldType);
+private:
+	inline static auto offset1 = IAL::Offset(14399);
 };
 
 // 18 
@@ -1051,8 +1053,11 @@ public:
 	void	* unk10;	// 10
 
 	MEMBER_FN_PREFIX(ActorWeightData);
-	DEFINE_MEMBER_FN(UpdateWeightData, void, 0x001C61A0);
-	DEFINE_MEMBER_FN(DeleteThis, void, 0x001C60A0);
+	DEFINE_MEMBER_FN(UpdateWeightData, void, offset1);
+	DEFINE_MEMBER_FN(DeleteThis, void, offset2);
+private:
+	inline static auto offset1 = IAL::Offset(15494);
+	inline static auto offset2 = IAL::Offset(15491);
 };
 
 // ??
@@ -1280,12 +1285,16 @@ public:
 	UInt32	pad13C;						// 13C
 
 	MEMBER_FN_PREFIX(ActorProcessManager);
-	DEFINE_MEMBER_FN(SetEquipFlag, void, 0x0067E3B0, UInt8 flags);
-	DEFINE_MEMBER_FN(UpdateEquipment, void, 0x00650DF0, Actor * actor);
+	DEFINE_MEMBER_FN(SetEquipFlag, void, offset1, UInt8 flags);
+	DEFINE_MEMBER_FN(UpdateEquipment, void, offset2, Actor * actor);
 	// FBB0A4AE04B0C1C63470C26B004079D7D9B20D0B+8B
-	DEFINE_MEMBER_FN(SetDataFlag, void, 0x0065C880, float flag); // Sets a number on the 0x10 object. SE: The parameter flag was actually a float (xmm1)
+	DEFINE_MEMBER_FN(SetDataFlag, void, offset3, float flag); // Sets a number on the 0x10 object. SE: The parameter flag was actually a float (xmm1)
 
 	void UpdateEquipment_Hooked(Actor * actor);
+private:
+	inline static auto offset1 = IAL::Offset(38867);
+	inline static auto offset2 = IAL::Offset(38404);
+	inline static auto offset3 = IAL::Offset(38568);
 };
 
 STATIC_ASSERT(offsetof(ActorProcessManager, equippedObject) == 0xF0);
@@ -1367,9 +1376,13 @@ public:
 	void SetSkillLegendaryLevel(BSFixedString actorValue, UInt32 level);
 
 	MEMBER_FN_PREFIX(PlayerSkills);
-	DEFINE_MEMBER_FN(GetSkillData, UInt32, 0x006E6130, UInt32 actorValue, float * level, float * points, float * pointsMax, UInt32 * unk6);
-	DEFINE_MEMBER_FN(IncrementLegendary, UInt32, 0x006E6620, UInt32 actorValue);
-	DEFINE_MEMBER_FN(SetLevel, void, 0x006E65C0, UInt32 level);
+	DEFINE_MEMBER_FN(GetSkillData, UInt32, offset1, UInt32 actorValue, float * level, float * points, float * pointsMax, UInt32 * unk6);
+	DEFINE_MEMBER_FN(IncrementLegendary, UInt32, offset2, UInt32 actorValue);
+	DEFINE_MEMBER_FN(SetLevel, void, offset3, UInt32 level);
+private:
+	inline static auto offset1 = IAL::Offset(40552);
+	inline static auto offset2 = IAL::Offset(40557);
+	inline static auto offset3 = IAL::Offset(40556);
 };
 
 // 10
diff --git a/skse64/skse64/GameForms.cpp b/skse64/skse64/GameForms.cpp
index 073ba32..3cc399f 100644
--- a/skse64/skse64/GameForms.cpp
+++ b/skse64/skse64/GameForms.cpp
@@ -1,12 +1,13 @@
 #include "GameForms.h"
 #include "GameObjects.h"
 
-RelocAddr <_LookupFormByID> LookupFormByID(0x00194230);
+// 81542B44FD6902A56B6B1464C37C41C529E9FD2A+31CB
+static auto g_BGSDefaultObjectManager = IAL::Addr<BGSDefaultObjectManager*>(514113);
+
+_LookupFormByID LookupFormByID = IAL::Addr<_LookupFormByID>(14461);
 
 BGSDefaultObjectManager *BGSDefaultObjectManager::GetSingleton(void)
 {
-	// 81542B44FD6902A56B6B1464C37C41C529E9FD2A+31CB
-	static RelocPtr<BGSDefaultObjectManager> g_BGSDefaultObjectManager(0x01EBD710);
 	return g_BGSDefaultObjectManager;
 }
 
@@ -66,9 +67,9 @@ void TESForm::CopyFromEx(TESForm * rhsForm)
 float GetFormWeight(TESForm *form)
 {
 	// 27090A4B7BDF5406F9A6871190673EC666A22195+38
-	static RelocAddr<uintptr_t> GetFormWeight_Address(0x001A1730);
+	static auto GetFormWeight_Address = IAL::Addr<_GetFormWeight>(14809);;
 
-	return ((_GetFormWeight)(GetFormWeight_Address.GetUIntPtr())) (form);
+	return GetFormWeight_Address(form);
 }
 
 UInt32 BGSListForm::GetSize()
diff --git a/skse64/skse64/GameForms.h b/skse64/skse64/GameForms.h
index 52c2237..00dd53d 100644
--- a/skse64/skse64/GameForms.h
+++ b/skse64/skse64/GameForms.h
@@ -1,10 +1,10 @@
 #pragma once
 
-#include "skse64/GameTypes.h"
-#include "skse64/GameFormComponents.h"
+#include "GameTypes.h"
+#include "GameFormComponents.h"
 //#include "skse/GamePathing.h"
 //#include "skse/NiInterpolators.h"
-#include "skse64/NiTypes.h"
+#include "NiTypes.h"
 
 class TESForm;
 class TESObjectSTAT;
@@ -29,7 +29,7 @@ class BSExtraData;
 struct ModInfo;
 
 typedef TESForm* (*_LookupFormByID)(UInt32 id);
-extern RelocAddr <_LookupFormByID> LookupFormByID;
+extern _LookupFormByID LookupFormByID;
 
 class FormMatcher
 {
@@ -966,9 +966,9 @@ public:
 	UInt32	unk40;	// 40
 
 	MEMBER_FN_PREFIX(BGSListForm);
-	DEFINE_MEMBER_FN(AddFormToList, void, 0x002C53D0, TESForm * form);
-	DEFINE_MEMBER_FN(RemoveFormFromList, void, 0x002C5570, TESForm * form);
-	DEFINE_MEMBER_FN(RevertList, void, 0x002C5300);
+	DEFINE_MEMBER_FN(AddFormToList, void, offset1, TESForm * form);
+	DEFINE_MEMBER_FN(RemoveFormFromList, void, offset2, TESForm * form);
+	DEFINE_MEMBER_FN(RevertList, void, offset3);
 
 	class Visitor
 	{
@@ -978,6 +978,10 @@ public:
 
 	bool Visit(BGSListForm::Visitor & visitor);
 	UInt32 GetSize();
+private:
+	inline static auto offset1 = IAL::Offset(20470);
+	inline static auto offset2 = IAL::Offset(20471);
+	inline static auto offset3 = IAL::Offset(20469);
 };
 
 // F0 
@@ -1618,10 +1622,13 @@ public:
 	UnkArray	unk250;		// 250
 
 	MEMBER_FN_PREFIX(TESQuest);
-	DEFINE_MEMBER_FN(ForceRefTo, UInt32, 0x00375050, UInt32 aliasId, TESObjectREFR * reference);
-	DEFINE_MEMBER_FN(NewGame_Internal, UInt8, 0x00370910, UInt8 * unk1, UInt8 unk2);
+	DEFINE_MEMBER_FN(ForceRefTo, UInt32, offset1, UInt32 aliasId, TESObjectREFR * reference);
+	DEFINE_MEMBER_FN(NewGame_Internal, UInt8, offset2, UInt8 * unk1, UInt8 unk2);
 
 	UInt8 NewGame_Hook(UInt8 * unk1, UInt8 unk2);
+private:
+	inline static auto offset1 = IAL::Offset(24523);
+	inline static auto offset2 = IAL::Offset(24481);
 };
 STATIC_ASSERT(sizeof(TESQuest) == 0x268);
 
@@ -2388,6 +2395,25 @@ class TESObjectCELL : public TESForm
 public:
 	enum { kTypeID = kFormType_Cell };
 
+	enum Flag : UInt16
+	{
+		kNone = 0,
+		kIsInteriorCell = 0x1,
+		kHasWater = 0x2,
+		kCanTravelFromHere = 0x4,
+		kNoLODWater = 0x8,
+		kHasTempData = 0x10,
+		kPublicArea = 0x20,
+		kHandChanged = 0x40,
+		kShowSky = 0x80,
+		kUseSkyLighting = 0x100
+	};
+
+	enum CellState : UInt8
+	{
+		kAttached = 7
+	};
+
 	// parents
 	TESFullName					fullName;	// 020
 
@@ -2454,9 +2480,9 @@ public:
 
 	Data						unk030;		// 030
 	Data						unk038;		// 038
-	UInt16						unk040;		// 040  1 - no 060
-	UInt16						unk042;		// 042
-	UInt8						unk044;		// 044
+	Flag						cellFlags;	// 040
+	UInt16						cellGameFlags; // 042
+	CellState					cellState;	// 044
 	UInt8						unk045;		// 045
 	UInt8						unk046;		// 046
 	UInt8						pad047;		// 047
@@ -2484,13 +2510,15 @@ public:
 	UnkArray					unk0F8;			// 0F8
 	UnkArray					unk100;			// 100
 	Data						unk118;			// 118
-	TESWorldSpace				* unk120;		// 120
+	TESWorldSpace				*worldSpace;	// 120
 	UInt64						unk128;		// 128
 	BGSLightingTemplate			* lightingTemplate;	// 130
 	UInt64						unk138;		// 138
 
 	MEMBER_FN_PREFIX(TESObjectCELL);
-	DEFINE_MEMBER_FN(GetNorthRotation, double, 0x0026D510);
+	DEFINE_MEMBER_FN(GetNorthRotation, double, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(18662);
 };
 STATIC_ASSERT(offsetof(TESObjectCELL, refData) == 0x88);
 STATIC_ASSERT(offsetof(TESObjectCELL, objectList) == 0xB8);
@@ -3235,6 +3263,18 @@ class TESWorldSpace : public TESForm
 public:
 	enum { kTypeID = kFormType_WorldSpace };
 
+	enum Flag : UInt8
+	{
+		kNone = 0,
+		kSmallWorld = 0x1,
+		kCantFastTravel = 0x2,
+		kNoLODWater = 0x4,
+		kNoLandscape = 0x8,
+		kNoSky = 0x10,
+		kFixedDimensions = 0x20,
+		kNoGrass = 0x40,
+	};
+
 	// parents
 	TESFullName		fullName;	// 14-20
 	
@@ -3275,7 +3315,7 @@ public:
 	void*		unk090;			// 090 
 	UInt64		unk098;			// 098
 
-	UInt8		unk0A0;	// 0A0
+	Flag		flags;	// 0A0
 	UInt8		pad0A1;	// 0A1
 	UInt16		unk0A2;	// 0A2
 	UInt16		unkA04;	// 0A4
@@ -3307,7 +3347,7 @@ public:
 	UInt64		unk140;	// 140
 	UInt64		unk148;	// 148
 	UInt64		unk150;	// 150
-	void*		unk158;	// 158
+	TESWorldSpace*		parentWorld;	// 158
 
 	BGSLightingTemplate*	interiorLighting;	// 160
 	TESWaterForm*			water; // 168
@@ -3383,7 +3423,7 @@ public:
 			return NULL;
 
 		// B8146167FE300AED18E0DCE1DA9C86E4C4D08513+11
-		static RelocPtr<IFormFactory *> kFactoryList(0x01EC3CE0);
+		static IFormFactory** kFactoryList = IAL::Addr<IFormFactory**>(514355);
 
 		return kFactoryList[type];
 	}
diff --git a/skse64/skse64/GameHandlers.h b/skse64/skse64/GameHandlers.h
index f704469..037fddb 100644
--- a/skse64/skse64/GameHandlers.h
+++ b/skse64/skse64/GameHandlers.h
@@ -32,7 +32,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(WeaponRightSwingHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x007209A0, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41729);
 };
 
 class WeaponLeftSwingHandler : public IHandlerFunctor<Actor, UInt32>
@@ -42,7 +44,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(WeaponLeftSwingHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720A30, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41730);
 };
 
 class RightHandSpellFireHandler : public IHandlerFunctor<Actor, UInt32>
@@ -52,7 +56,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(RightHandSpellFireHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720BF0, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41736);
 };
 
 class LeftHandSpellFireHandler : public IHandlerFunctor<Actor, UInt32>
@@ -62,7 +68,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(LeftHandSpellFireHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720BA0, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41735);
 };
 
 class RightHandSpellCastHandler : public IHandlerFunctor<Actor, UInt32>
@@ -72,7 +80,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(RightHandSpellCastHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720DB0, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41739);
 };
 
 class LeftHandSpellCastHandler : public IHandlerFunctor<Actor, UInt32>
@@ -82,7 +92,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(LeftHandSpellCastHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720D60, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41738);
 };
 
 class VoiceSpellCastHandler : public IHandlerFunctor<Actor, UInt32>
@@ -92,7 +104,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(VoiceSpellCastHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720E00, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41740);
 };
 
 class VoiceSpellFireHandler : public IHandlerFunctor<Actor, UInt32>
@@ -102,7 +116,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(VoiceSpellFireHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720C40, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41737);
 };
 
 class BowDrawnHandler : public IHandlerFunctor<Actor, UInt32>
@@ -112,7 +128,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(BowDrawnHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00721EF0, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41774);
 };
 
 class BowReleaseHandler : public IHandlerFunctor<Actor, UInt32>
@@ -122,7 +140,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(BowReleaseHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00721F10, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41775);
 };
 
 class WeaponBeginDrawRightHandler : public IHandlerFunctor<Actor, UInt32>
@@ -132,7 +152,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(WeaponBeginDrawRightHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720E90, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41741);
 };
 
 class WeaponBeginSheatheRightHandler : public IHandlerFunctor<Actor, UInt32>
@@ -142,7 +164,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(WeaponBeginSheatheRightHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720F40, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41742);
 };
 
 class RightHandWeaponDrawHandler : public IHandlerFunctor<Actor, UInt32>
@@ -152,7 +176,9 @@ public:
 	virtual	UInt8	Process(Actor * form, UInt32 unk04);
 
 	MEMBER_FN_PREFIX(RightHandWeaponDrawHandler);
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00720FB0, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41743);
 };
 
 class RightHandWeaponSheatheHandler : public IHandlerFunctor<Actor, UInt32>
@@ -163,5 +189,7 @@ public:
 
 	MEMBER_FN_PREFIX(RightHandWeaponSheatheHandler);
 	// ??_7RightHandWeaponSheatheHandler@@6B@ + 8
-	DEFINE_MEMBER_FN(Process_Origin, UInt8, 0x00721110, Actor * form, UInt32 unk04);
+	DEFINE_MEMBER_FN(Process_Origin, UInt8, offset1, Actor * form, UInt32 unk04);
+private:
+	inline static auto offset1 = IAL::Offset(41744);
 };
diff --git a/skse64/skse64/GameInput.cpp b/skse64/skse64/GameInput.cpp
index 8f429ac..ecabdb0 100644
--- a/skse64/skse64/GameInput.cpp
+++ b/skse64/skse64/GameInput.cpp
@@ -1,5 +1,11 @@
 #include "GameInput.h"
 
+// 61FAE6E8975F0FA7B3DD4D5A410A240E86A58F7B+E
+static auto g_inputManager = IAL::Addr<InputManager**>(514705);
+
+// 5202C5E930BB4CD8F477F91C9434AB37DBDB10B3+7A
+static auto g_inputEventDispatcher = IAL::Addr<InputEventDispatcher**>(516574);
+
 bool InputEventDispatcher::IsGamepadEnabled(void)
 {
 	return (gamepad != NULL) && gamepad->IsEnabled();
@@ -7,15 +13,11 @@ bool InputEventDispatcher::IsGamepadEnabled(void)
 
 InputEventDispatcher* InputEventDispatcher::GetSingleton()
 {
-	// 5202C5E930BB4CD8F477F91C9434AB37DBDB10B3+7A
-	static RelocPtr<InputEventDispatcher*> g_inputEventDispatcher(0x02F257A8);
 	return *g_inputEventDispatcher;
 }
 
 InputManager * InputManager::GetSingleton(void)
 {
-	// 61FAE6E8975F0FA7B3DD4D5A410A240E86A58F7B+E
-	static RelocPtr<InputManager*> g_inputManager(0x02EC5BD0);
 	return *g_inputManager;
 }
 
@@ -95,16 +97,18 @@ BSFixedString InputManager::GetMappedControl(UInt32 buttonID, UInt32 deviceType,
 	return BSFixedString();
 }
 
+// F1E82AFF2615653A5A14A2E7C229B4B0466688EF+19
+static auto g_playerControls = IAL::Addr<PlayerControls**>(514706);
+
 PlayerControls * PlayerControls::GetSingleton(void)
 {
-	// F1E82AFF2615653A5A14A2E7C229B4B0466688EF+19
-	static RelocPtr<PlayerControls*> g_playerControls(0x02EC5BD8);
 	return *g_playerControls;
 }
 
+// DC378767BEB0312EBDE098BC7E0CE53FCC296377+D9
+static auto g_menuControls = IAL::Addr<MenuControls**>(515124);
+
 MenuControls * MenuControls::GetSingleton(void)
 {
-	// DC378767BEB0312EBDE098BC7E0CE53FCC296377+D9
-	static RelocPtr<MenuControls*> g_menuControls(0x02F003F8);
 	return *g_menuControls;
 }
diff --git a/skse64/skse64/GameInput.h b/skse64/skse64/GameInput.h
index 8e7c845..b7beaf8 100644
--- a/skse64/skse64/GameInput.h
+++ b/skse64/skse64/GameInput.h
@@ -287,7 +287,9 @@ public:
 	// used by Hooks_Event
 	PlayerControls * ctor_Hook(void);
 	MEMBER_FN_PREFIX(PlayerControls);
-	DEFINE_MEMBER_FN(ctor, PlayerControls *, 0x00704970);
+	DEFINE_MEMBER_FN(ctor, PlayerControls *, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(41257);
 };
 STATIC_ASSERT(offsetof(PlayerControls, runMode) == 0x049);
 STATIC_ASSERT(offsetof(PlayerControls, remapMode) == 0x050);
@@ -435,7 +437,7 @@ public:
 	static InputStringHolder *	GetSingleton(void)
 	{
 		// 38C98DE3888C4A78379B4BC9F21B33FA74FB6E4C+32
-		static RelocPtr<InputStringHolder*> g_inputStringHolder(0x02F25250);
+		static auto g_inputStringHolder = IAL::Addr<InputStringHolder**>(516458);
 		return *g_inputStringHolder;
 	}
 };
diff --git a/skse64/skse64/GameMenus.cpp b/skse64/skse64/GameMenus.cpp
index 43f2785..78d20be 100644
--- a/skse64/skse64/GameMenus.cpp
+++ b/skse64/skse64/GameMenus.cpp
@@ -1,6 +1,30 @@
 #include "GameMenus.h"
 
-RelocAddr <_CreateUIMessageData> CreateUIMessageData(0x00325F00);
+// 502FDB8FEA80C3705F9E228F79D4EA7A399CC7FD+32
+static auto g_menuManager = IAL::Addr< MenuManager**>(514178);
+
+MenuManager* MenuManager::GetSingleton(void)
+{
+	return *g_menuManager;
+}
+
+// 81B349AB8ABC9944E48046819F0345AB0526CDB5+9
+static auto g_UIStringHolder = IAL::Addr<UIStringHolder**>(514286);
+
+UIStringHolder* UIStringHolder::GetSingleton(void)
+{
+	return *g_UIStringHolder;
+}
+
+// CB598A8812CFF3959F94DC8F8371BA876F68AE34+67
+static auto g_UIManager = IAL::Addr<UIManager**>(514285);
+
+UIManager* UIManager::GetSingleton(void)
+{
+	return *g_UIManager;
+}
+
+_CreateUIMessageData CreateUIMessageData = IAL::Addr<_CreateUIMessageData>(22825);
 
 IMenu::IMenu() :
 	view(NULL),
diff --git a/skse64/skse64/GameMenus.h b/skse64/skse64/GameMenus.h
index e9764e4..a3b07f2 100644
--- a/skse64/skse64/GameMenus.h
+++ b/skse64/skse64/GameMenus.h
@@ -1,16 +1,16 @@
 #pragma once
 
-#include "skse64/GameTypes.h"
-#include "skse64/GameEvents.h"
-#include "skse64/GameCamera.h"
-#include "skse64/GameReferences.h"
+#include "GameTypes.h"
+#include "GameEvents.h"
+#include "GameCamera.h"
+#include "GameReferences.h"
 
-#include "skse64/ScaleformCallbacks.h"
-#include "skse64/ScaleformMovie.h"
+#include "ScaleformCallbacks.h"
+#include "ScaleformMovie.h"
 
 #include "skse64_common/Utilities.h"
-#include "skse64/GameUtilities.h"
-//#include "skse64/NiNodes.h"
+#include "GameUtilities.h"
+//#include "NiNodes.h"
 
 class TESObjectREFR;
 class TESFullName;
@@ -36,6 +36,7 @@ class IMenu : public FxDelegateHandler
 		void*				unk08; // 08
 	};
 
+protected:
 	struct UnkData1
 	{
 		BSFixedString		name;	// 00
@@ -70,10 +71,15 @@ public:
 	GRefCountBase	* unk18;	// 28 - holds a reference
 
 	MEMBER_FN_PREFIX(IMenu);
-	DEFINE_MEMBER_FN(InitMovie_internal, void, 0x00ECD970, GFxMovieView* view);
-	DEFINE_MEMBER_FN(NextFrame_internal, void, 0x00ECD8A0, UInt32 arg0, UInt32 arg1);
-	DEFINE_MEMBER_FN(ProcessMessage_internal, UInt32, 0x00ECD850, UIMessage* message);
-	DEFINE_MEMBER_FN(dtor, void, 0x00ECD7F0);
+	DEFINE_MEMBER_FN(InitMovie_internal, void, offset1, GFxMovieView* view);
+	DEFINE_MEMBER_FN(NextFrame_internal, void, offset2, UInt32 arg0, UInt32 arg1);
+	DEFINE_MEMBER_FN(ProcessMessage_internal, UInt32, offset3, UIMessage* message);
+	DEFINE_MEMBER_FN(dtor, void, offset4);
+private:
+	inline static auto offset1 = IAL::Offset(80287);
+	inline static auto offset2 = IAL::Offset(80284);
+	inline static auto offset3 = IAL::Offset(80283);
+	inline static auto offset4 = IAL::Offset(80282);
 };
 STATIC_ASSERT(offsetof(IMenu, view) == 0x10);
 
@@ -225,7 +231,9 @@ public:
 
 	MEMBER_FN_PREFIX(RaceSexMenu);
 	// FCFD4B12540A068252C0A71C5480E518DDF6EF60+58
-	DEFINE_MEMBER_FN(LoadSliders, void *, 0x008B5E20, UInt64 unk1, UInt8 unk2);
+	DEFINE_MEMBER_FN(LoadSliders, void *, offset1, UInt64 unk1, UInt8 unk2);
+private:
+	inline static auto offset1 = IAL::Offset(51534);
 };
 STATIC_ASSERT(offsetof(RaceSexMenu, sliderData) == 0x140);
 STATIC_ASSERT(offsetof(RaceSexMenu, raceIndex) == 0x188);
@@ -338,10 +346,13 @@ public:
 	GFxValue		object;		// 10
 
 	MEMBER_FN_PREFIX(HUDObject);
-	DEFINE_MEMBER_FN_0(dtor, void, 0x00885C40);
-	DEFINE_MEMBER_FN_1(Impl_Fn03, void *, 0x00880140, void * unk1);
+	DEFINE_MEMBER_FN_0(dtor, void, offset1);
+	DEFINE_MEMBER_FN_1(Impl_Fn03, void *, offset2, void * unk1);
 
 	DEFINE_STATIC_HEAP(Heap_Allocate, Heap_Free);
+private:
+	inline static auto offset1 = IAL::Offset(50839);
+	inline static auto offset2 = IAL::Offset(50750);
 };
 STATIC_ASSERT(sizeof(HUDObject) == 0x28);
 
@@ -382,7 +393,9 @@ public:
 	TESWordOfPower*	word;	// 50
 	UInt32			time;	// 58 - g_gameTime + iObjectivesWaitTime
 
-	DEFINE_MEMBER_FN_0(dtor, void, 0x00885400);
+	DEFINE_MEMBER_FN_0(dtor, void, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(50823);
 };
 
 // 78
@@ -536,7 +549,7 @@ public:
 		UInt8		pad12[6];	// 12
 
 		MEMBER_FN_PREFIX(CategoryListEntry);
-		DEFINE_MEMBER_FN(SetData, void, 0x0086F130, GFxValue* target);
+		DEFINE_MEMBER_FN(SetData, void, offset1, GFxValue* target);
 
 		void SetData_Extended(EnchantConstructMenu*	subMenu, GFxValue* target);
 	};
@@ -558,6 +571,8 @@ public:
 	};
 
 	// ...
+private:
+	inline static auto offset1 = IAL::Offset(50489);
 };
 
 // 168
@@ -715,7 +730,7 @@ public:
 };
 
 typedef void * (*_CreateUIMessageData)(BSFixedString * name);
-extern RelocAddr<_CreateUIMessageData> CreateUIMessageData;
+extern _CreateUIMessageData CreateUIMessageData;
 
 // 20
 // ### pool added in 1.3 (or maybe 1.2)
@@ -812,22 +827,21 @@ public:
 	// this takes ownership of the message ptr
 //	DEFINE_MEMBER_FN(AddMessage, void, 0x004503E0, UIMessage * msg);	// old 1.1 implementation
 	// 1.3 uses a little non-thread-safe pool of UIMessages to wrap around the nicely thread-safe BSTMessageQueue it gets added to
-	DEFINE_MEMBER_FN(AddMessage, void, 0x001652D0, StringCache::Ref * strData, UInt32 msgID, void * objData);
-	DEFINE_MEMBER_FN(CreateUIMessageData, IUIMessageData *, 0x00EC31D0, const BSFixedString &type);
+	DEFINE_MEMBER_FN(AddMessage, void, offset1, StringCache::Ref * strData, UInt32 msgID, void * objData);
+	DEFINE_MEMBER_FN(CreateUIMessageData, IUIMessageData *, offset2, const BSFixedString &type);
 
-	static UIManager *	GetSingleton(void)
-	{
-		// CB598A8812CFF3959F94DC8F8371BA876F68AE34+67
-		static RelocPtr<UIManager*> g_UIManager(0x01EC0A70);
-		return *g_UIManager;
-	}
+	static UIManager* GetSingleton(void);
 
 	// Used by Hooks_UI
 	void ProcessCommands(void);
 	void QueueCommand(UIDelegate* cmd);
 	void QueueCommand(UIDelegate_v1* cmd);
 
-	DEFINE_MEMBER_FN(ProcessEventQueue_HookTarget, void, 0x00EC30F0);
+	DEFINE_MEMBER_FN(ProcessEventQueue_HookTarget, void, offset3);
+private:
+	inline static auto offset1 = IAL::Offset(13530);
+	inline static auto offset2 = IAL::Offset(80061);
+	inline static auto offset3 = IAL::Offset(80059);
 };
 STATIC_ASSERT(offsetof(UIManager, pad348) == 0x348);
 STATIC_ASSERT(sizeof(UIManager) == 0xB80);
@@ -912,12 +926,7 @@ public:
 	BSFixedString	menuTextureDegradeEvent;	// 248 "Menu Texture Degrade Event"
 	BSFixedString	diamondMarker;				// 250 "<img src='DiamondMarker' width='10' height='15' align='baseline' vspace='5'>"
 
-	static UIStringHolder *	GetSingleton(void)
-	{
-		// 81B349AB8ABC9944E48046819F0345AB0526CDB5+9
-		static RelocPtr<UIStringHolder *> g_UIStringHolder(0x01EC0A78);
-		return *g_UIStringHolder;
-	}
+	static UIStringHolder* GetSingleton(void);
 };
 
 // 160
@@ -929,7 +938,7 @@ public:
 	static Inventory3DManager * GetSingleton(void)
 	{
 		// 6BC34CC398831C8B8BE5BE20EC213B5BE7C47A7A+2E
-		static RelocPtr<Inventory3DManager*> g_inventory3DManager(0x02F27180);
+		static auto g_inventory3DManager = IAL::Addr<Inventory3DManager**>(517051);
 		return *g_inventory3DManager;
 	}
 
@@ -968,10 +977,10 @@ public:
 	UInt8			pad15B[5];
 
 	MEMBER_FN_PREFIX(Inventory3DManager);
-	DEFINE_MEMBER_FN(UpdateItem3D, void, 0x00887970, InventoryEntryData * objDesc);
-	DEFINE_MEMBER_FN(UpdateMagic3D, void, 0x008879A0, TESForm * form, UInt32 unk1);
-	DEFINE_MEMBER_FN(Clear3D, void, 0x00887D10);
-	DEFINE_MEMBER_FN(Render, UInt32, 0x00887750);
+	DEFINE_MEMBER_FN(UpdateItem3D, void, offset1, InventoryEntryData * objDesc);
+	DEFINE_MEMBER_FN(UpdateMagic3D, void, offset2, TESForm * form, UInt32 unk1);
+	DEFINE_MEMBER_FN(Clear3D, void, offset3);
+	DEFINE_MEMBER_FN(Render, UInt32, offset4);
 
 	//DEFINE_MEMBER_FN(Unk1, void, 0x008667E0, UInt32 unk1);
 	//DEFINE_MEMBER_FN(Unk2, void, 0x00867110);
@@ -979,6 +988,11 @@ public:
 	//DEFINE_MEMBER_FN(Unk4, double, 0x008663E0);
 	//DEFINE_MEMBER_FN(Unk5, bool, 0x008418D0);
 	//DEFINE_MEMBER_FN(Unk6, int, 0x00867730);
+private:
+	inline static auto offset1 = IAL::Offset(50884);
+	inline static auto offset2 = IAL::Offset(50885);
+	inline static auto offset3 = IAL::Offset(50886);
+	inline static auto offset4 = IAL::Offset(50882);
 };
 
 STATIC_ASSERT(offsetof(Inventory3DManager, unk14) == 0x14);
@@ -1040,7 +1054,7 @@ class MenuManager
 	};
 	STATIC_ASSERT(sizeof(Unknown3) == 0x40);
 
-private:
+protected:
 	UInt64					unk_000;	// 000
 
 	EventDispatcher<MenuOpenCloseEvent>		menuOpenCloseEventDispatcher;	// 008
@@ -1069,18 +1083,12 @@ public:
 
 private:
 	MEMBER_FN_PREFIX(MenuManager);
-	DEFINE_MEMBER_FN(IsMenuOpen, bool, 0x00EBE150, BSFixedString * menuName);
-	DEFINE_MEMBER_FN(Register_internal, void, 0x00EBF9C0, const char * name, CreatorFunc creator);
+	DEFINE_MEMBER_FN(IsMenuOpen, bool, offset1, BSFixedString * menuName);
+	DEFINE_MEMBER_FN(Register_internal, void, offset2, const char * name, CreatorFunc creator);
 
 public:
 
-	static MenuManager * GetSingleton(void)
-	{
-		// 502FDB8FEA80C3705F9E228F79D4EA7A399CC7FD+32
-		static RelocPtr<MenuManager *> g_menuManager(0x01EBEB20);
-		return *g_menuManager;
-	}
-
+	static MenuManager* GetSingleton(void);
 	EventDispatcher<MenuOpenCloseEvent> * MenuOpenCloseEventDispatcher()
 	{
 		return &menuOpenCloseEventDispatcher;
@@ -1098,5 +1106,13 @@ public:
 	{
 		CALL_MEMBER_FN(this, Register_internal)(name, creator);
 	}
+
+	bool InPausedMenu() 
+	{
+		return numPauseGame > 0;
+	};
+private:
+	inline static auto offset1 = IAL::Offset(79937);
+	inline static auto offset2 = IAL::Offset(79949);
 };
 STATIC_ASSERT(sizeof(MenuManager) == 0x1C8);
diff --git a/skse64/skse64/GameObjects.cpp b/skse64/skse64/GameObjects.cpp
index b4d7c60..26444cf 100644
--- a/skse64/skse64/GameObjects.cpp
+++ b/skse64/skse64/GameObjects.cpp
@@ -1,3 +1,4 @@
+
 #include "GameObjects.h"
 #include "GameData.h"
 #include "GameRTTI.h"
diff --git a/skse64/skse64/GameObjects.h b/skse64/skse64/GameObjects.h
index eaa88b6..1d5094f 100644
--- a/skse64/skse64/GameObjects.h
+++ b/skse64/skse64/GameObjects.h
@@ -1,8 +1,8 @@
 #pragma once
 
-#include "skse64/GameForms.h"
-#include "skse64/NiObjects.h"
-#include "skse64/GameEvents.h"
+#include "GameForms.h"
+#include "NiObjects.h"
+#include "GameEvents.h"
 
 class Character;
 
@@ -336,7 +336,9 @@ public:
 	static BSShaderTextureSet * Create();
 
 	MEMBER_FN_PREFIX(BSShaderTextureSet);
-	DEFINE_MEMBER_FN(ctor, BSShaderTextureSet *, 0x012C9320);
+	DEFINE_MEMBER_FN(ctor, BSShaderTextureSet *, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(99886);
 };
 
 STATIC_ASSERT(sizeof(BSShaderTextureSet) == 0x58);
@@ -457,8 +459,11 @@ public:
 	UInt64				unk88;	// 88
 
 	MEMBER_FN_PREFIX(MagicItem);
-	DEFINE_MEMBER_FN(GetCostliestEffectItem, EffectItem *, 0x00101CC0, int arg1, bool arg2);
-	DEFINE_MEMBER_FN(GetEffectiveMagickaCost, float, 0x00101A30, Character* caster);
+	DEFINE_MEMBER_FN(GetCostliestEffectItem, EffectItem *, offset1, int arg1, bool arg2);
+	DEFINE_MEMBER_FN(GetEffectiveMagickaCost, float, offset2, Character* caster);
+private:
+	inline static auto offset1 = IAL::Offset(11216);
+	inline static auto offset2 = IAL::Offset(11213);
 };
 
 STATIC_ASSERT(sizeof(MagicItem) == 0x90);
@@ -793,11 +798,11 @@ public:
 	UInt64			unk260;			// 260
 
 	MEMBER_FN_PREFIX(TESNPC);
-	DEFINE_MEMBER_FN(GetSex, char, 0x003512A0);
-	DEFINE_MEMBER_FN(HasOverlays, bool, 0x00368A20);
+	DEFINE_MEMBER_FN(GetSex, char, offset1);
+	DEFINE_MEMBER_FN(HasOverlays, bool, offset2);
 
 	// Swaps a headPart of the same type as target with target
-	DEFINE_MEMBER_FN(ChangeHeadPart, void, 0x00365BF0, BGSHeadPart * target);
+	DEFINE_MEMBER_FN(ChangeHeadPart, void, offset3, BGSHeadPart * target);
 
 	struct MorphAction {
 		BSFaceGenNiNode * faceNode;
@@ -807,10 +812,10 @@ public:
 	};
 	
 	// Updates the neck seam when weight changed
-	DEFINE_MEMBER_FN(UpdateNeck, void, 0x003606D0, BSFaceGenNiNode * faceNode);
+	DEFINE_MEMBER_FN(UpdateNeck, void, offset4, BSFaceGenNiNode * faceNode);
 
 	// Computes RGB SkinTone from RGBA TintMask
-	DEFINE_MEMBER_FN(SetSkinFromTint, void, 0x00360480, NiColorA * result, TintMask * tintMask, bool fromTint);
+	DEFINE_MEMBER_FN(SetSkinFromTint, void, offset5, NiColorA * result, TintMask * tintMask, bool fromTint);
 
 	void SetFaceTexture(BGSTextureSet * textureSet);
 	void SetHairColor(BGSColorForm * hairColor);
@@ -819,6 +824,12 @@ public:
 	BGSHeadPart * GetHeadPartOverlayByType(UInt32 type);
 	BGSHeadPart * GetCurrentHeadPartByType(UInt32 type);
 	TESNPC * GetRootTemplate();
+private:
+	inline static auto offset1 = IAL::Offset(23922);
+	inline static auto offset2 = IAL::Offset(24274);
+	inline static auto offset3 = IAL::Offset(24246);
+	inline static auto offset4 = IAL::Offset(24207);
+	inline static auto offset5 = IAL::Offset(24206);
 };
 STATIC_ASSERT(offsetof(TESNPC, nextTemplate) == 0x1F0);
 STATIC_ASSERT(sizeof(TESNPC) == 0x268);
diff --git a/skse64/skse64/GamePathing.h b/skse64/skse64/GamePathing.h
index 9c70e09..29c909c 100644
--- a/skse64/skse64/GamePathing.h
+++ b/skse64/skse64/GamePathing.h
@@ -1,7 +1,7 @@
 #pragma once
 
-#include "skse64/GameTypes.h"
-#include "skse64/GameFormComponents.h"
+#include "GameTypes.h"
+#include "GameFormComponents.h"
 
 // 9C
 class BSNavmesh
diff --git a/skse64/skse64/GameRTTI.cpp b/skse64/skse64/GameRTTI.cpp
index 81329f1..e69de29 100644
--- a/skse64/skse64/GameRTTI.cpp
+++ b/skse64/skse64/GameRTTI.cpp
@@ -1,15 +0,0 @@
-#include "GameRTTI.h"
-#include "skse64_common/Relocation.h"
-
-typedef void * (* _Runtime_DynamicCast_Internal)(void * srcObj, UInt32 arg1, const void * fromType, const void * toType, UInt32 arg4);
-RelocAddr <_Runtime_DynamicCast_Internal> Runtime_DynamicCast_Internal(0x0134BDB0);	// __RTDynamicCast
-
-void * Runtime_DynamicCast(void * srcObj, const void * fromType, const void * toType)
-{
-	uintptr_t fromTypeAddr = uintptr_t(fromType) + RelocationManager::s_baseAddr;
-	uintptr_t toTypeAddr = uintptr_t(toType) + RelocationManager::s_baseAddr;
-
-	return Runtime_DynamicCast_Internal(srcObj, 0, (void *)fromTypeAddr, (void *)toTypeAddr, 0);
-}
-
-#include "GameRTTI.inl"
diff --git a/skse64/skse64/GameRTTI.h b/skse64/skse64/GameRTTI.h
index 7a35e7f..994b2f7 100644
--- a/skse64/skse64/GameRTTI.h
+++ b/skse64/skse64/GameRTTI.h
@@ -1,3325 +1,3 @@
 #pragma once
 
-void * Runtime_DynamicCast(void * srcObj, const void * fromType, const void * toType);
-
-#define DYNAMIC_CAST(obj, from, to) ( ## to *) Runtime_DynamicCast((void*)(obj), RTTI_ ## from, RTTI_ ## to)
-
-extern const void * RTTI_BaseFormComponent;
-extern const void * RTTI_IFormFactory;
-extern const void * RTTI_AlchemyItem;
-extern const void * RTTI_BGSDualCastData;
-extern const void * RTTI_Setting;
-extern const void * RTTI_GameSettingCollection;
-extern const void * RTTI_BSTArrayBase__IAllocatorFunctor;
-extern const void * RTTI_TESFullName;
-extern const void * RTTI_EffectSetting;
-extern const void * RTTI_EnchantmentItem;
-extern const void * RTTI_IngredientItem;
-extern const void * RTTI_BSModelDB__QueuedHandles;
-extern const void * RTTI_TESModelDB__TESQueuedHandles;
-extern const void * RTTI_MagicItem;
-extern const void * RTTI_MagicItem__PreloadableVisitor;
-extern const void * RTTI_MagicItemTraversalFunctor;
-extern const void * RTTI_MagicItemFindFunctor;
-extern const void * RTTI_MagicItemFindKeywordFunctor;
-extern const void * RTTI_AnimationSystemUtils__TESModelAndAnimationHandles;
-extern const void * RTTI_FindNonExcludedDeliveryFunctor;
-extern const void * RTTI_FindEqualsFunctor;
-extern const void * RTTI_GetCostliestEffectFunctor;
-extern const void * RTTI_LongestDurationFunctor;
-extern const void * RTTI_LargestAreaFunctor;
-extern const void * RTTI_GetMagicItemDescriptionFunctor;
-extern const void * RTTI_ScrollItem;
-extern const void * RTTI_SpellItem;
-extern const void * RTTI_ExtraSeenData;
-extern const void * RTTI_BSExtraData;
-extern const void * RTTI_ExtraHavok;
-extern const void * RTTI_ExtraEditorID;
-extern const void * RTTI_MagicTarget;
-extern const void * RTTI_ExtraTimeLeft;
-extern const void * RTTI_ExtraLock;
-extern const void * RTTI_ExtraTeleport;
-extern const void * RTTI_ExtraStartingPosition;
-extern const void * RTTI_ExtraOwnership;
-extern const void * RTTI_ExtraGlobal;
-extern const void * RTTI_ExtraRank;
-extern const void * RTTI_ExtraCount;
-extern const void * RTTI_ExtraWorn;
-extern const void * RTTI_ExtraWornLeft;
-extern const void * RTTI_ExtraLeveledItem;
-extern const void * RTTI_ExtraOutfitItem;
-extern const void * RTTI_ExtraHealth;
-extern const void * RTTI_ExtraHealthPerc;
-extern const void * RTTI_ExtraCharge;
-extern const void * RTTI_ExtraScale;
-extern const void * RTTI_ExtraReferenceHandle;
-extern const void * RTTI_ExtraFollower;
-extern const void * RTTI_ExtraOriginalReference;
-extern const void * RTTI_ExtraEnableStateParent;
-extern const void * RTTI_ExtraEnableStateChildren;
-extern const void * RTTI_ExtraLinkedRef;
-extern const void * RTTI_ExtraLinkedRefChildren;
-extern const void * RTTI_ExtraActivateRef;
-extern const void * RTTI_ExtraActivateRefChildren;
-extern const void * RTTI_ExtraRandomTeleportMarker;
-extern const void * RTTI_ExtraCannotWear;
-extern const void * RTTI_ExtraPoison;
-extern const void * RTTI_ExtraLastFinishedSequence;
-extern const void * RTTI_ExtraItemDropper;
-extern const void * RTTI_ExtraDroppedItemList;
-extern const void * RTTI_ExtraSavedAnimation;
-extern const void * RTTI_ExtraSavedHavokData;
-extern const void * RTTI_ExtraHeadingTarget;
-extern const void * RTTI_ExtraRefractionProperty;
-extern const void * RTTI_ExtraSound;
-extern const void * RTTI_ExtraCreatureAwakeSound;
-extern const void * RTTI_ExtraCreatureMovementSound;
-extern const void * RTTI_ExtraWeaponIdleSound;
-extern const void * RTTI_ExtraWeaponAttackSound;
-extern const void * RTTI_ExtraActivateLoopSound;
-extern const void * RTTI_ExtraObjectHealth;
-extern const void * RTTI_ExtraFactionChanges;
-extern const void * RTTI_ExtraActorCause;
-extern const void * RTTI_ExtraPatrolRefData;
-extern const void * RTTI_ExtraEncounterZone;
-extern const void * RTTI_ExtraNavMeshPortal;
-extern const void * RTTI_ExtraOcclusionPlaneRefData;
-extern const void * RTTI_ExtraPortalRefData;
-extern const void * RTTI_ExtraRoomRefData;
-extern const void * RTTI_ExtraAliasInstanceArray;
-extern const void * RTTI_ExtraSceneData;
-extern const void * RTTI_ExtraBadPosition;
-extern const void * RTTI_ExtraHeadTrackingWeight;
-extern const void * RTTI_ExtraFavorCost;
-extern const void * RTTI_ExtraTextDisplayData;
-extern const void * RTTI_ExtraHorse;
-extern const void * RTTI_ExtraEnchantment;
-extern const void * RTTI_ExtraForcedTarget;
-extern const void * RTTI_ExtraUniqueID;
-extern const void * RTTI_ExtraFlags;
-extern const void * RTTI_ExtraDecalGroup;
-extern const void * RTTI_ExtraWaterCurrentZoneData;
-extern const void * RTTI_ExtraMissingRefIDs;
-extern const void * RTTI_ExtraCell3D;
-extern const void * RTTI_ExtraRegionList;
-extern const void * RTTI_ExtraCellSkyRegion;
-extern const void * RTTI_ExtraCellImageSpace;
-extern const void * RTTI_ExtraNorthRotation;
-extern const void * RTTI_ExtraDetachTime;
-extern const void * RTTI_ExtraCanTalkToPlayer;
-extern const void * RTTI_ExtraPrimitive;
-extern const void * RTTI_ExtraAmmo;
-extern const void * RTTI_ExtraMagicLight;
-extern const void * RTTI_ExtraFromAlias;
-extern const void * RTTI_ExtraOpenCloseActivateRef;
-extern const void * RTTI_ExtraTeleportName;
-extern const void * RTTI_ExtraCachedScale;
-extern const void * RTTI_ExtraHotkey;
-extern const void * RTTI_ExtraPackageStartLocation;
-extern const void * RTTI_ExtraLocation;
-extern const void * RTTI_ExtraTresPassPackage;
-extern const void * RTTI_ExtraRagDollData;
-extern const void * RTTI_ExtraAttachRef;
-extern const void * RTTI_ExtraAttachRefChildren;
-extern const void * RTTI_ExtraAshPileRef;
-extern const void * RTTI_ExtraLocationRefType;
-extern const void * RTTI_ExtraLeveledItemBase;
-extern const void * RTTI_ExtraReflectedRefs;
-extern const void * RTTI_ExtraReflectorRefs;
-extern const void * RTTI_ExtraWaterLightRefs;
-extern const void * RTTI_ExtraLitWaterRefs;
-extern const void * RTTI_ExtraLevCreaModifier;
-extern const void * RTTI_ExtraSpawnContainer;
-extern const void * RTTI_ExtraEmittanceSource;
-extern const void * RTTI_ExtraMultiBoundRef;
-extern const void * RTTI_ExtraMultiBound;
-extern const void * RTTI_ExtraRoom;
-extern const void * RTTI_ExtraFriendHits;
-extern const void * RTTI_ExtraStartingWorldOrCell;
-extern const void * RTTI_ExtraHasNoRumors;
-extern const void * RTTI_ExtraTerminalState;
-extern const void * RTTI_ExtraModelSwap;
-extern const void * RTTI_ExtraRadius;
-extern const void * RTTI_ExtraCombatStyle;
-extern const void * RTTI_ExtraPackageData;
-extern const void * RTTI_ExtraCollisionData;
-extern const void * RTTI_ExtraGuardedRefData;
-extern const void * RTTI_ExtraIgnoredBySandbox;
-extern const void * RTTI_ExtraPromotedRef;
-extern const void * RTTI_ExtraLargeRefOwnerCells;
-extern const void * RTTI_ExtraLightData;
-extern const void * RTTI_ExtraAttachedArrows3D;
-extern const void * RTTI_ExtraAlphaCutoff;
-extern const void * RTTI_ExtraForcedLandingMarker;
-extern const void * RTTI_ExtraRefrPath;
-extern const void * RTTI_ExtraCellWaterEnvMap;
-extern const void * RTTI_ExtraWaterData;
-extern const void * RTTI_ExtraScriptedAnimDependence;
-extern const void * RTTI_ExtraCellMusicType;
-extern const void * RTTI_ExtraCellAcousticSpace;
-extern const void * RTTI_ExtraCellWaterType;
-extern const void * RTTI_ExtraGIDBuffer;
-extern const void * RTTI_ExtraMissingLinkedRefIDs;
-extern const void * RTTI_NonActorMagicTarget;
-extern const void * RTTI_ExtraMapMarker;
-extern const void * RTTI_ExtraDistantData;
-extern const void * RTTI_ExtraAnimNoteReceiver;
-extern const void * RTTI_ExtraLockList;
-extern const void * RTTI_ExtraPersistentCell;
-extern const void * RTTI_ExtraRaceData;
-extern const void * RTTI_ExtraAnimGraphManager;
-extern const void * RTTI_ExtraDismemberedLimbs;
-extern const void * RTTI_ExtraBiped;
-extern const void * RTTI_ExtraLight;
-extern const void * RTTI_ExtraLeveledCreature;
-extern const void * RTTI_ExtraAction;
-extern const void * RTTI_ExtraShouldWear;
-extern const void * RTTI_ExtraContainerChanges;
-extern const void * RTTI_ExtraPackage;
-extern const void * RTTI_ExtraPlayerCrimeList;
-extern const void * RTTI_ExtraRunOncePacks;
-extern const void * RTTI_ExtraGhost;
-extern const void * RTTI_ExtraSayTopicInfoOnceADay;
-extern const void * RTTI_ExtraPatrolRefInUseData;
-extern const void * RTTI_ExtraFollowerSwimBreadcrumbs;
-extern const void * RTTI_ExtraInfoGeneralTopic;
-extern const void * RTTI_ExtraSayToTopicInfo;
-extern const void * RTTI_ExtraSoul;
-extern const void * RTTI_ExtraResourcesPreload;
-extern const void * RTTI_ExtraPortal;
-extern const void * RTTI_ExtraOcclusionShape;
-extern const void * RTTI_ExtraEditorRef3DData;
-extern const void * RTTI_ExtraEditorRefMoveData;
-extern const void * RTTI_ExtraAnimationSequencer;
-extern const void * RTTI_ExtraCellGrassData;
-extern const void * RTTI_ExtraInteraction;
-extern const void * RTTI_ExtraGroupConstraint;
-extern const void * RTTI_MultiBoundMarkerData;
-extern const void * RTTI_BSStream;
-extern const void * RTTI_INISettingCollection;
-extern const void * RTTI_InterfacedClass;
-extern const void * RTTI_BSTask;
-extern const void * RTTI_IOTask;
-extern const void * RTTI_QueuedActor;
-extern const void * RTTI_QueuedCharacter;
-extern const void * RTTI_QueuedHead;
-extern const void * RTTI_QueuedHelmet;
-extern const void * RTTI_AttachDistant3DTask;
-extern const void * RTTI_QueuedModel;
-extern const void * RTTI_QueuedReference;
-extern const void * RTTI_QueuedAnimationObject;
-extern const void * RTTI_QueuedTempEffect;
-extern const void * RTTI_BackgroundProcessThread;
-extern const void * RTTI_QueuedTree;
-extern const void * RTTI_QueuedPlayer;
-extern const void * RTTI_INIPrefSettingCollection;
-extern const void * RTTI_AddCellGrassTask;
-extern const void * RTTI_ICellAttachDetachEventSource;
-extern const void * RTTI_TES;
-extern const void * RTTI_TES__SystemEventAdapter;
-extern const void * RTTI_BSTempNodeManager;
-extern const void * RTTI_BGSLoadFormBuffer;
-extern const void * RTTI_BGSStoryManagerBranchNode;
-extern const void * RTTI_BGSStoryManagerTreeForm;
-extern const void * RTTI_BGSStoryManagerNodeBase;
-extern const void * RTTI_Projectile__LaunchData;
-extern const void * RTTI_BSModelDB__BSModelProcessor;
-extern const void * RTTI_BGSAttackDataForm;
-extern const void * RTTI_BGSBipedModelList;
-extern const void * RTTI_BGSBipedObjectForm;
-extern const void * RTTI_BGSBlockBashData;
-extern const void * RTTI_BGSDestructibleObjectForm;
-extern const void * RTTI_BGSEquipType;
-extern const void * RTTI_BGSIdleCollection;
-extern const void * RTTI_BGSKeywordForm;
-extern const void * RTTI_BGSMenuDisplayObject;
-extern const void * RTTI_BGSMessageIcon;
-extern const void * RTTI_BGSOverridePackCollection;
-extern const void * RTTI_PerkRankVisitor;
-extern const void * RTTI_BGSPerkRankArray;
-extern const void * RTTI_BGSPickupPutdownSounds;
-extern const void * RTTI_BGSSkinForm;
-extern const void * RTTI_TESActorBaseData;
-extern const void * RTTI_TESAIForm;
-extern const void * RTTI_TESAttackDamageForm;
-extern const void * RTTI_TESModelRDT;
-extern const void * RTTI_TESBipedModelForm;
-extern const void * RTTI_TESContainer;
-extern const void * RTTI_TESDescription;
-extern const void * RTTI_TESEnchantableForm;
-extern const void * RTTI_IFormFactory__IFactoryVisitor;
-extern const void * RTTI_TESForm;
-extern const void * RTTI_BSStorage;
-extern const void * RTTI_BSMemStorage;
-extern const void * RTTI_BSScript__IHandleReaderWriter;
-extern const void * RTTI_SkyrimScript__BaseHandleReaderWriter;
-extern const void * RTTI_SkyrimScript__DataFileHandleReaderWriter;
-extern const void * RTTI_BSVMLoadTask;
-extern const void * RTTI_TESHealthForm;
-extern const void * RTTI_TESIcon;
-extern const void * RTTI_TESImageSpaceModifiableForm;
-extern const void * RTTI_TESLeveledList;
-extern const void * RTTI_TESModel;
-extern const void * RTTI_TESModelLODList;
-extern const void * RTTI_TESModelTextureSwap;
-extern const void * RTTI_TESProduceForm;
-extern const void * RTTI_TESQualityForm;
-extern const void * RTTI_TESRaceForm;
-extern const void * RTTI_TESReactionForm;
-extern const void * RTTI_TESSpellList;
-extern const void * RTTI_TESTexture;
-extern const void * RTTI_TESValueForm;
-extern const void * RTTI_TESWeightForm;
-extern const void * RTTI_ActionInput;
-extern const void * RTTI_BGSAnimSoundStateManager;
-extern const void * RTTI_BSAttachTechniques__BSAttachTechnique;
-extern const void * RTTI_BGSAttachTechniquesUtil__ProcessTechniquesFunctor;
-extern const void * RTTI_BGSAttachTechniquesUtil__AttachTechniquesFunctor;
-extern const void * RTTI_BGSAttachTechniquesUtil__DetachTechniquesFunctor;
-extern const void * RTTI_BGSParticleArrayAttach;
-extern const void * RTTI_BGSParticleArrayAttach__EmitterPolicy;
-extern const void * RTTI_BGSParticleArrayAttach__CollectEmitterPolicy;
-extern const void * RTTI_BGSParticleArrayAttach__ClearEmitterPolicy;
-extern const void * RTTI_BGSHavokGeometryAttach;
-extern const void * RTTI_BGSHavokGeometryAttach__ActionPolicy;
-extern const void * RTTI_BGSHavokGeometryAttach__AttachPolicy;
-extern const void * RTTI_BGSHavokGeometryAttach__DetachPolicy;
-extern const void * RTTI_BGSNamedNodeAttach;
-extern const void * RTTI_BGSNamedNodeAttach__ActionPolicy;
-extern const void * RTTI_BGSNamedNodeAttach__AttachPolicy;
-extern const void * RTTI_BGSNamedNodeAttach__DetachPolicy;
-extern const void * RTTI_BGSMultiTechniqueAttach;
-extern const void * RTTI_BGSMultiTechniqueAttach__ActionPolicy;
-extern const void * RTTI_BGSMultiTechniqueAttach__AttachPolicy;
-extern const void * RTTI_BGSMultiTechniqueAttach__DetachPolicy;
-extern const void * RTTI_hkpRayHitCollector;
-extern const void * RTTI_hkpAllRayHitTempCollector;
-extern const void * RTTI_BGSDecalNode;
-extern const void * RTTI_QueuedPromoteReferencesTask;
-extern const void * RTTI_NiProperty;
-extern const void * RTTI_NiAlphaProperty;
-extern const void * RTTI_BSResource__Location;
-extern const void * RTTI_BSResource__LooseFileLocation;
-extern const void * RTTI_BGSQueuedGrassModelHandles;
-extern const void * RTTI_NiRefObject;
-extern const void * RTTI_BGSPrimitive;
-extern const void * RTTI_BSPortal;
-extern const void * RTTI_BGSPrimitiveLine;
-extern const void * RTTI_BGSPrimitivePlane;
-extern const void * RTTI_BGSPrimitiveBox;
-extern const void * RTTI_BGSPrimitiveSphere;
-extern const void * RTTI_BSMultiBoundAABB;
-extern const void * RTTI_BSMultiBoundOBB;
-extern const void * RTTI_BSMultiBoundSphere;
-extern const void * RTTI_BSShaderProperty__ForEachVisitor;
-extern const void * RTTI_BGSSceneInfo;
-extern const void * RTTI_BGSSceneInfo__TextureUse;
-extern const void * RTTI_BGSTextureUseMap__TextureUse;
-extern const void * RTTI_BSAnimationGraphChannel;
-extern const void * RTTI_BSAnimGroupSequence;
-extern const void * RTTI_BSAnimNoteReceiver;
-extern const void * RTTI_IBSAnimNoteReceiver;
-extern const void * RTTI_GridArray;
-extern const void * RTTI_GridCellArray;
-extern const void * RTTI_TESActionData;
-extern const void * RTTI_InventoryUtils__ItemFilter;
-extern const void * RTTI_InventoryChanges__IItemChangeVisitor;
-extern const void * RTTI_BGSActionData;
-extern const void * RTTI_Inventory__StatInventoryVisitor;
-extern const void * RTTI_FindByEffectSettingFunctor;
-extern const void * RTTI_BSExternalAudioIO__ExternalIOInterface;
-extern const void * RTTI_LipSynchAnimDB__LipAudioInterface;
-extern const void * RTTI_TESCameraState;
-extern const void * RTTI_LocalMapCamera;
-extern const void * RTTI_LocalMapCamera__DefaultState;
-extern const void * RTTI_BSSplatterExtraData;
-extern const void * RTTI_TESRegion;
-extern const void * RTTI_TESRegionData;
-extern const void * RTTI_TESRegionDataGrass;
-extern const void * RTTI_TESRegionDataLandscape;
-extern const void * RTTI_TESRegionDataManager;
-extern const void * RTTI_TESRegionDataMap;
-extern const void * RTTI_TESRegionDataObjects;
-extern const void * RTTI_TESRegionDataSound;
-extern const void * RTTI_TESRegionDataWeather;
-extern const void * RTTI_TESRegionObjectBase;
-extern const void * RTTI_TESRegionGrassObject;
-extern const void * RTTI_TESRegionGrassObjectList;
-extern const void * RTTI_TESRegionList;
-extern const void * RTTI_TESRegionNoiseFunction;
-extern const void * RTTI_TESRegionObject;
-extern const void * RTTI_TESRegionObjectList;
-extern const void * RTTI_BGSAddonNode;
-extern const void * RTTI_BGSAddonNodeSoundHandleExtra;
-extern const void * RTTI_BGSApparatus;
-extern const void * RTTI_BGSArtObject;
-extern const void * RTTI_BGSArtObjectCloneTask;
-extern const void * RTTI_BGSConstructibleObject;
-extern const void * RTTI_InventoryUtils__QuestItemFilter;
-extern const void * RTTI_BGSDebris;
-extern const void * RTTI_BGSPreloadable;
-extern const void * RTTI_BGSExplosion;
-extern const void * RTTI_BGSHazard;
-extern const void * RTTI_BGSLensFlare;
-extern const void * RTTI_BSLensFlareSpriteRenderData;
-extern const void * RTTI_BGSLensFlareSprite;
-extern const void * RTTI_BGSVolumetricLighting;
-extern const void * RTTI_BGSMovableStatic;
-extern const void * RTTI_BGSOutfit;
-extern const void * RTTI_BGSProjectile;
-extern const void * RTTI_BGSStaticCollection;
-extern const void * RTTI_BGSTalkingActivator;
-extern const void * RTTI_TESAmmo;
-extern const void * RTTI_TESCombatStyle;
-extern const void * RTTI_TESEffectShader;
-extern const void * RTTI_BSParticleShaderGeometry;
-extern const void * RTTI_TESFlora;
-extern const void * RTTI_TESFurniture;
-extern const void * RTTI_TESGrass;
-extern const void * RTTI_TESKey;
-extern const void * RTTI_TESLevCharacter;
-extern const void * RTTI_TESLevItem;
-extern const void * RTTI_TESLevSpell;
-extern const void * RTTI_TESObjectLIGH;
-extern const void * RTTI_TESBoundObject;
-extern const void * RTTI_TESObject;
-extern const void * RTTI_TESBoundAnimObject;
-extern const void * RTTI_TESObjectACTI;
-extern const void * RTTI_BGSOpenCloseForm;
-extern const void * RTTI_TESObjectANIO;
-extern const void * RTTI_TESObjectARMA;
-extern const void * RTTI_TESObjectARMO;
-extern const void * RTTI_TESObjectBOOK;
-extern const void * RTTI_TESObjectCONT;
-extern const void * RTTI_TESObjectDOOR;
-extern const void * RTTI_IFadeDoneCallback;
-extern const void * RTTI_TESObjectMISC;
-extern const void * RTTI_TESObjectSTAT;
-extern const void * RTTI_TESObjectTREE;
-extern const void * RTTI_TESObjectWEAP;
-extern const void * RTTI_TESSoulGem;
-extern const void * RTTI_BGSEncounterZone;
-extern const void * RTTI_QueuedPromoteLargeReferencesTask;
-extern const void * RTTI_BGSLightingTemplate;
-extern const void * RTTI_BGSLocation;
-extern const void * RTTI_QueuedPromoteLocationReferencesTask;
-extern const void * RTTI_BGSLocationRefType;
-extern const void * RTTI_BGSReferenceEffect;
-extern const void * RTTI_BGSShaderParticleGeometryData;
-extern const void * RTTI_BSParticleShaderEmitter;
-extern const void * RTTI_BSParticleShaderCubeEmitter;
-extern const void * RTTI_BSParticleShaderSnowEmitter;
-extern const void * RTTI_BSParticleShaderRainEmitter;
-extern const void * RTTI_CellLoaderTask;
-extern const void * RTTI_ImageSpaceModifierInstanceForm;
-extern const void * RTTI_ImageSpaceModifierInstance;
-extern const void * RTTI_ImageSpaceModifierInstanceTemp;
-extern const void * RTTI_ImageSpaceModifierInstanceDOF;
-extern const void * RTTI_ImageSpaceModifierInstanceRB;
-extern const void * RTTI_TESClimate;
-extern const void * RTTI_TESImageSpace;
-extern const void * RTTI_NiFloatData;
-extern const void * RTTI_TESImageSpaceModifier;
-extern const void * RTTI_NiColorData;
-extern const void * RTTI_hkBaseObject;
-extern const void * RTTI_hkReferencedObject;
-extern const void * RTTI_TESChildCell;
-extern const void * RTTI_TESObjectLAND;
-extern const void * RTTI_hkpMoppCode;
-extern const void * RTTI_TESLandTexture;
-extern const void * RTTI_hkpWorldCinfo;
-extern const void * RTTI_hkpEntityListener;
-extern const void * RTTI_CheckWithinMultiBoundTask;
-extern const void * RTTI_ExtraProcessMiddleLow;
-extern const void * RTTI_TESObjectCELL;
-extern const void * RTTI_TESObjectCELL__IDecalRefFunctor;
-extern const void * RTTI_TESWindListener;
-extern const void * RTTI_bhkSerializable;
-extern const void * RTTI_hkpShape;
-extern const void * RTTI_bhkShape;
-extern const void * RTTI_BSHandleRefObject;
-extern const void * RTTI_TESObjectREFRDef__ILinkedReferenceFunctor;
-extern const void * RTTI_BGSWaterCollisionManager__bhkPlaceableWater;
-extern const void * RTTI_BGSWaterCollisionManager__bhkWaterfall;
-extern const void * RTTI_hkpPhantomCallbackShape;
-extern const void * RTTI_bhkEntity;
-extern const void * RTTI_bhkPhantom;
-extern const void * RTTI_bhkAabbPhantom;
-extern const void * RTTI_BGSWaterCollisionManager__BGSWaterUpdateI;
-extern const void * RTTI_bhkRigidBody;
-extern const void * RTTI_TESObjectREFR;
-extern const void * RTTI_bhkSimpleShapePhantom;
-extern const void * RTTI_bhkCollisionObject;
-extern const void * RTTI_bhkAcousticSpacePhantomCallbackShape;
-extern const void * RTTI_bhkSphereRepShape;
-extern const void * RTTI_bhkConvexShape;
-extern const void * RTTI_bhkPCollisionObject;
-extern const void * RTTI_bhkShapePhantom;
-extern const void * RTTI_bhkSphereShape;
-extern const void * RTTI_ReferenceEffectController;
-extern const void * RTTI_OwnedController;
-extern const void * RTTI_OwnedCameraEffectController;
-extern const void * RTTI_bhkBoxShape;
-extern const void * RTTI_IAnimationStreamWrite;
-extern const void * RTTI_IAnimationStreamRead;
-extern const void * RTTI_AnimationStreamLoadGame;
-extern const void * RTTI_AnimationStreamSaveGame;
-extern const void * RTTI_REFREventCallbacks__IEventCallback;
-extern const void * RTTI_REFREventCallbacks__IEventCallbackFactory;
-extern const void * RTTI_ExtraUsedMarkers;
-extern const void * RTTI_ExtraReservedMarkers;
-extern const void * RTTI_TESObjectREFRSync__REFRSyncController;
-extern const void * RTTI_TESWaterForm;
-extern const void * RTTI_TESWeather;
-extern const void * RTTI_TESTexture1024;
-extern const void * RTTI_TESWorldSpace;
-extern const void * RTTI_BGSAcousticSpace;
-extern const void * RTTI_NiFormArray;
-extern const void * RTTI_BGSCameraPath;
-extern const void * RTTI_BGSCameraShot;
-extern const void * RTTI_BGSCollisionLayer;
-extern const void * RTTI_BGSColorForm;
-extern const void * RTTI_BGSDefaultObjectManager;
-extern const void * RTTI_BGSFootstep;
-extern const void * RTTI_BGSFootstepSet;
-extern const void * RTTI_BGSImpactData;
-extern const void * RTTI_BGSImpactDataSet;
-extern const void * RTTI_BGSListForm;
-extern const void * RTTI_BSMaterialObject;
-extern const void * RTTI_BGSMaterialObject;
-extern const void * RTTI_BGSMaterialType;
-extern const void * RTTI_BGSMenuIcon;
-extern const void * RTTI_BGSMessage;
-extern const void * RTTI_BGSMusicPaletteTrack;
-extern const void * RTTI_BGSMusicSilenceTrack;
-extern const void * RTTI_BGSMusicSingleTrack;
-extern const void * RTTI_BSIMusicTrack;
-extern const void * RTTI_BGSMusicTrack;
-extern const void * RTTI_BGSMusicTrackFormWrapper;
-extern const void * RTTI_BGSMusicType;
-extern const void * RTTI_BSIMusicType;
-extern const void * RTTI_BSIReverbType;
-extern const void * RTTI_BGSReverbParameters;
-extern const void * RTTI_BSISoundCategory;
-extern const void * RTTI_BGSSoundCategory;
-extern const void * RTTI_BGSSoundDescriptorForm;
-extern const void * RTTI_BSISoundDescriptor;
-extern const void * RTTI_BSISoundOutputModel;
-extern const void * RTTI_BGSSoundOutput;
-extern const void * RTTI_BSISoundOutputModel__BSIAttenuationCharacteristics;
-extern const void * RTTI_BGSSoundOutput__DynamicAttenuationCharacteristics;
-extern const void * RTTI_BSISoundDescriptor__BSIPlaybackCharacteristics;
-extern const void * RTTI_BGSSoundDescriptor;
-extern const void * RTTI_BGSStandardSoundDef;
-extern const void * RTTI_BGSStandardSoundDef__SoundPlaybackCharacteristics;
-extern const void * RTTI_BGSTextureSet;
-extern const void * RTTI_BSTextureSet;
-extern const void * RTTI_BSShaderTextureSet;
-extern const void * RTTI_IVisitProcedures;
-extern const void * RTTI_MiscStatManager__IMiscStatVisitor;
-extern const void * RTTI_MiscStatManager__FindStatByCRC;
-extern const void * RTTI_BSScript__IForEachScriptObjectFunctor;
-extern const void * RTTI_TESGlobal;
-extern const void * RTTI_TESLoadScreen;
-extern const void * RTTI_Script;
-extern const void * RTTI_BSAnimGraphVisit__BShkbVisitor;
-extern const void * RTTI_MagicTarget__ForEachActiveEffectVisitor;
-extern const void * RTTI_TESObjectREFRDef__IAliasFunctor;
-extern const void * RTTI_BSScript__IFunctionArguments;
-extern const void * RTTI_BSScript__ZeroFunctionArguments;
-extern const void * RTTI_MobIterOperator;
-extern const void * RTTI_TESShout;
-extern const void * RTTI_TESSound;
-extern const void * RTTI_TESWordOfPower;
-extern const void * RTTI_BGSAction;
-extern const void * RTTI_BGSAssociationType;
-extern const void * RTTI_TESModelPSA;
-extern const void * RTTI_BGSBodyPartData;
-extern const void * RTTI_BGSDialogueBranch;
-extern const void * RTTI_PerkEntryVisitor;
-extern const void * RTTI_BGSEntryPointFunctionData;
-extern const void * RTTI_BGSEntryPointFunctionDataOneValue;
-extern const void * RTTI_BGSEntryPointFunctionDataTwoValue;
-extern const void * RTTI_BGSEntryPointFunctionDataLeveledList;
-extern const void * RTTI_BGSEntryPointFunctionDataSpellItem;
-extern const void * RTTI_BGSEntryPointFunctionDataBooleanGraphVariable;
-extern const void * RTTI_BGSEntryPointFunctionDataText;
-extern const void * RTTI_BGSEntryPointFunctionDataActivateChoice;
-extern const void * RTTI_BGSEquipSlot;
-extern const void * RTTI_BGSHeadPart;
-extern const void * RTTI_TESModelTri;
-extern const void * RTTI_BGSIdleMarker;
-extern const void * RTTI_BGSKeyword;
-extern const void * RTTI_BGSBaseAlias;
-extern const void * RTTI_BGSLocAlias;
-extern const void * RTTI_BGSMovementType;
-extern const void * RTTI_BGSNote;
-extern const void * RTTI_BGSPerk;
-extern const void * RTTI_BGSPerkEntry;
-extern const void * RTTI_BGSQuestPerkEntry;
-extern const void * RTTI_BGSAbilityPerkEntry;
-extern const void * RTTI_BGSEntryPointPerkEntry;
-extern const void * RTTI_BGSRagdoll;
-extern const void * RTTI_BGSRefAlias;
-extern const void * RTTI_BGSRelationship;
-extern const void * RTTI_BGSScene;
-extern const void * RTTI_BGSSceneAction;
-extern const void * RTTI_BGSSceneActionDialogue;
-extern const void * RTTI_BGSSceneActionPackage;
-extern const void * RTTI_BGSSceneActionTimer;
-extern const void * RTTI_BGSVoiceType;
-extern const void * RTTI_Reset3DMobIterator;
-extern const void * RTTI_TESAnimGroup;
-extern const void * RTTI_TESClass;
-extern const void * RTTI_TESEyes;
-extern const void * RTTI_TESFaction;
-extern const void * RTTI_TESIdleForm;
-extern const void * RTTI_ActorValueOwner;
-extern const void * RTTI_TESActorBase;
-extern const void * RTTI_TESNPC;
-extern const void * RTTI_BSFaceGenModelExtraData;
-extern const void * RTTI_TESQuest;
-extern const void * RTTI_QueuedPromoteQuestTask;
-extern const void * RTTI_TESRace;
-extern const void * RTTI_BGSTextureModel;
-extern const void * RTTI_BGSBehaviorGraphModel;
-extern const void * RTTI_AttackAnimationArrayMap;
-extern const void * RTTI_TESTopic;
-extern const void * RTTI_TESTopicInfo;
-extern const void * RTTI_bhkEntityListener;
-extern const void * RTTI_BGSAcousticSpaceListener;
-extern const void * RTTI_TargetEntry;
-extern const void * RTTI_ZoneEntry;
-extern const void * RTTI_BGSZoneTargetListener;
-extern const void * RTTI_TrapTargetEntry;
-extern const void * RTTI_bhkAction;
-extern const void * RTTI_bhkCartTether;
-extern const void * RTTI_hkConstraintCinfo;
-extern const void * RTTI_bhkConstraint;
-extern const void * RTTI_hkPrismaticConstraintCinfo;
-extern const void * RTTI_bhkPrismaticConstraint;
-extern const void * RTTI_bhkUnaryAction;
-extern const void * RTTI_CellMopp;
-extern const void * RTTI_BSTasklet;
-extern const void * RTTI_BSTaskletData;
-extern const void * RTTI_BSWin32TaskletData;
-extern const void * RTTI_bhkBvTreeShape;
-extern const void * RTTI_bhkTriSampledHeightFieldBvTreeShape;
-extern const void * RTTI_CellMopp__HeightFieldWeldingTasklet;
-extern const void * RTTI_hkpContactListener;
-extern const void * RTTI_bhkContactListener;
-extern const void * RTTI_bhkBackfaceContactListener;
-extern const void * RTTI_FOCollisionListener;
-extern const void * RTTI_hkpIslandActivationListener;
-extern const void * RTTI_FOIslandActivationListener;
-extern const void * RTTI_hkStreamWriter;
-extern const void * RTTI_hkError;
-extern const void * RTTI_hkStreamReader;
-extern const void * RTTI_hkFileSystem;
-extern const void * RTTI_HavokStreambufReader;
-extern const void * RTTI_HavokStreambufWriter;
-extern const void * RTTI_HavokFileStreambufReader;
-extern const void * RTTI_HavokFileStreambufWriter;
-extern const void * RTTI_hkNativeFileSystem;
-extern const void * RTTI_HavokStreambufFactory;
-extern const void * RTTI_HavokError;
-extern const void * RTTI_hkpCdPointCollector;
-extern const void * RTTI_hkpAllCdPointCollector;
-extern const void * RTTI_LoadedAreaBound;
-extern const void * RTTI_RagdollFurnitureListener;
-extern const void * RTTI_hkpClosestRayHitCollector;
-extern const void * RTTI_SpecificItemCollector;
-extern const void * RTTI_hkpPhantomListener;
-extern const void * RTTI_hkpCdBodyPairCollector;
-extern const void * RTTI_bhkTrapListener;
-extern const void * RTTI_TrapEntry;
-extern const void * RTTI_TriggerEntry;
-extern const void * RTTI_TESTrapListener;
-extern const void * RTTI_hkpAllCdBodyPairTempCollector;
-extern const void * RTTI_hkpAllCdPointTempCollector;
-extern const void * RTTI_FindTriangleForLocationFilter;
-extern const void * RTTI_FindTriangleForLocationFilterCheckDeltaZ;
-extern const void * RTTI_Atmosphere;
-extern const void * RTTI_Clouds;
-extern const void * RTTI_Moon;
-extern const void * RTTI_BSGeometryListCullingProcess;
-extern const void * RTTI_Precipitation;
-extern const void * RTTI_Sky;
-extern const void * RTTI_TESWeather__SkyStaticFunctor;
-extern const void * RTTI_SkyEffectController;
-extern const void * RTTI_SkyStaticFindFunctor;
-extern const void * RTTI_TempLoadGameBuffer;
-extern const void * RTTI_SkyObject;
-extern const void * RTTI_Stars;
-extern const void * RTTI_NiBillboardNode;
-extern const void * RTTI_Sun;
-extern const void * RTTI_BShkNonTransformController;
-extern const void * RTTI_BShkFloatController;
-extern const void * RTTI_BGShkPhonemeController;
-extern const void * RTTI_BSFaceGenAnimationData;
-extern const void * RTTI_FutBinaryFileC;
-extern const void * RTTI_BSResourceFaceGenBinaryFile;
-extern const void * RTTI_BSFaceGenKeyframe;
-extern const void * RTTI_BSFaceGenKeyframeExclusive;
-extern const void * RTTI_BSFaceGenKeyframeMultiple;
-extern const void * RTTI_BSFaceGenDB__TRI__QueuedHandles;
-extern const void * RTTI_BSFaceGenModel;
-extern const void * RTTI_BSFaceGenModelMap__Entry;
-extern const void * RTTI_BSFaceGenMorphData;
-extern const void * RTTI_BSFaceGenMorphDataHead;
-extern const void * RTTI_BSFaceGenMorphDataHair;
-extern const void * RTTI_BSFaceGenBaseMorphExtraData;
-extern const void * RTTI_BSFaceGenNiNode;
-extern const void * RTTI_BSFadeNodeCuller;
-extern const void * RTTI_ActorValueInfo;
-extern const void * RTTI_BGSSkillPerkTreeNode;
-extern const void * RTTI_IAIWorldLocation;
-extern const void * RTTI_BGSAIWorldLocation;
-extern const void * RTTI_BGSAIWorldLocationRefRadius;
-extern const void * RTTI_BGSAIWorldLocationPointRadius;
-extern const void * RTTI_BGSAIWorldLocationInteriorCell;
-extern const void * RTTI_BGSAttackDataMap;
-extern const void * RTTI_BGSAttackData;
-extern const void * RTTI_IPackageDataAIWorldLocationHandle;
-extern const void * RTTI_IAITarget;
-extern const void * RTTI_IPackageData;
-extern const void * RTTI_IAIWorldLocationHandle;
-extern const void * RTTI_BGSPackageDataBool;
-extern const void * RTTI_BGSPackageDataFloat;
-extern const void * RTTI_BGSPackageDataInt;
-extern const void * RTTI_BGSPackageDataRefOLD;
-extern const void * RTTI_BGSPackageDataLocation;
-extern const void * RTTI_BGSPackageDataLocationWrapper;
-extern const void * RTTI_BGSPackageDataTargetSelector;
-extern const void * RTTI_BGSPackageDataObjectList;
-extern const void * RTTI_ObjectListItem;
-extern const void * RTTI_BGSPackageDataRef;
-extern const void * RTTI_BGSPackageDataTopic;
-extern const void * RTTI_IProcedureTreeExecState;
-extern const void * RTTI_IProcedureTreeItem;
-extern const void * RTTI_BGSProcedureDoneExecState;
-extern const void * RTTI_BGSProcedureTreeConditionalItem;
-extern const void * RTTI_BGSProcedureTreeBranch;
-extern const void * RTTI_BGSProcedureTreeOneChildExecState;
-extern const void * RTTI_BGSProcedureTreeSequence;
-extern const void * RTTI_BGSProcedureTreeSequenceExecState;
-extern const void * RTTI_BGSProcedureTreeStacked;
-extern const void * RTTI_BGSProcedureTreeStackedExecState;
-extern const void * RTTI_BGSProcedureTreeSimultaneous;
-extern const void * RTTI_BGSProcedureTreeSimultaneousExecState;
-extern const void * RTTI_BGSProcedureTreeRandom;
-extern const void * RTTI_BGSProcedureTreeRandomExecState;
-extern const void * RTTI_BGSProcedureGuardExecState;
-extern const void * RTTI_BGSProcedureDialogueExecState;
-extern const void * RTTI_BGSProcedureEatExecState;
-extern const void * RTTI_BGSProcedureFindExecState;
-extern const void * RTTI_BGSProcedureHoldPositionExecState;
-extern const void * RTTI_BGSProcedureKeepAnEyeOnExecState;
-extern const void * RTTI_BGSProcedureSayExecState;
-extern const void * RTTI_BGSProcedureWaitExecState;
-extern const void * RTTI_IProcedure;
-extern const void * RTTI_BGSProcedureBase;
-extern const void * RTTI_BGSProcedureDone;
-extern const void * RTTI_IPackageDataTypeCheck;
-extern const void * RTTI_BGSProcedureAcquire;
-extern const void * RTTI_BGSProcedureAcquireExecState;
-extern const void * RTTI_BGSProcedureActivate;
-extern const void * RTTI_BGSProcedureActivateExecState;
-extern const void * RTTI_BGSProcedureDialogue;
-extern const void * RTTI_BGSProcedureDialogueActivate;
-extern const void * RTTI_BGSProcedureDialogueActivateExecState;
-extern const void * RTTI_BGSProcedureEat;
-extern const void * RTTI_BGSProcedureEscort;
-extern const void * RTTI_BGSProcedureEscortExecState;
-extern const void * RTTI_BGSProcedureFind;
-extern const void * RTTI_BGSProcedureFlee;
-extern const void * RTTI_BGSProcedureFleeExecState;
-extern const void * RTTI_BGSProcedureFlightGrab;
-extern const void * RTTI_BGSProcedureFlightGrabExecState;
-extern const void * RTTI_IMovementParameters;
-extern const void * RTTI_BGSProcedureFollow;
-extern const void * RTTI_BGSProcedureFollowTo;
-extern const void * RTTI_BGSProcedureFollowExecState;
-extern const void * RTTI_MovementParameters;
-extern const void * RTTI_BGSProcedureForceGreet;
-extern const void * RTTI_BGSProcedureGuard;
-extern const void * RTTI_BGSProcedureHoldPosition;
-extern const void * RTTI_BGSProcedureHover;
-extern const void * RTTI_BGSProcedureHoverExecState;
-extern const void * RTTI_BGSProcedureKeepAnEyeOn;
-extern const void * RTTI_BGSProcedureLock;
-extern const void * RTTI_BGSProcedureUnlock;
-extern const void * RTTI_BGSProcedureLockUnlockExecState;
-extern const void * RTTI_BGSProcedureOrbit;
-extern const void * RTTI_BGSProcedureOrbitExecState;
-extern const void * RTTI_BGSProcedurePatrol;
-extern const void * RTTI_BGSProcedurePatrolExecState;
-extern const void * RTTI_BGSProcedurePursue;
-extern const void * RTTI_BGSProcedureSandboxExecState;
-extern const void * RTTI_BGSProcedureSandbox;
-extern const void * RTTI_BGSProcedureSay;
-extern const void * RTTI_BGSProcedureShout;
-extern const void * RTTI_BGSProcedureShoutExecState;
-extern const void * RTTI_BGSProcedureSit;
-extern const void * RTTI_BGSProcedureSleep;
-extern const void * RTTI_BGSProcedureSitSleepExecState;
-extern const void * RTTI_BGSProcedureTravel;
-extern const void * RTTI_BGSProcedureTravelExecState;
-extern const void * RTTI_BGSProcedureTreeProcedure;
-extern const void * RTTI_BGSProcedureUseIdleMarker;
-extern const void * RTTI_BGSProcedureUseIdleMarkerExecState;
-extern const void * RTTI_BGSProcedureUseMagic;
-extern const void * RTTI_BGSProcedureUseMagicExecState;
-extern const void * RTTI_BGSProcedureUseWeapon;
-extern const void * RTTI_BGSProcedureUseWeaponExecState;
-extern const void * RTTI_BGSProcedureWait;
-extern const void * RTTI_BGSProcedureWander;
-extern const void * RTTI_BGSProcedureWanderExecState;
-extern const void * RTTI_BGSVisitProceduresInitActorLocation;
-extern const void * RTTI_BGSVisitProceduresCheckGuardWarnTarget;
-extern const void * RTTI_TESPackage;
-extern const void * RTTI_PackageCreator;
-extern const void * RTTI_DialoguePackage;
-extern const void * RTTI_TESPackageData;
-extern const void * RTTI_TESAmbushPackageData;
-extern const void * RTTI_TESCustomPackageData;
-extern const void * RTTI_IProcedureTreeVisitor;
-extern const void * RTTI_CustomUtils__HasForceGreetVisitor;
-extern const void * RTTI_TESDialoguePackageData;
-extern const void * RTTI_TESEatPackageData;
-extern const void * RTTI_TESEscortPackageData;
-extern const void * RTTI_TESFollowPackageData;
-extern const void * RTTI_TESPatrolPackageData;
-extern const void * RTTI_TESUseItemPackageData;
-extern const void * RTTI_ActorPackageData;
-extern const void * RTTI_TESUseWeaponPackageData;
-extern const void * RTTI_UseWeaponActorPackageData;
-extern const void * RTTI_PackageLocation;
-extern const void * RTTI_BSTempEffect;
-extern const void * RTTI_ITempEffectFactory;
-extern const void * RTTI_BSTempEffectDebris;
-extern const void * RTTI_BSTempEffectGeometryDecal;
-extern const void * RTTI_BGSParticleObjectCloneTask;
-extern const void * RTTI_BSTempEffectParticle;
-extern const void * RTTI_BSTempEffectSimpleDecal;
-extern const void * RTTI_BSLightingShaderMaterial;
-extern const void * RTTI_BSTempEffectSPG;
-extern const void * RTTI_BSTempEffectWeaponBlood;
-extern const void * RTTI_BSTerrainEffect;
-extern const void * RTTI_BSPSysHavokUpdateModifier__ICollisionObjectHandler;
-extern const void * RTTI_NavMesh;
-extern const void * RTTI_BSPathingStreamRead;
-extern const void * RTTI_PathingStreamMasterFileRead;
-extern const void * RTTI_BSNavmeshInfoMap__IVisitor;
-extern const void * RTTI_NavMeshInfoMap;
-extern const void * RTTI_hkpEntityActivationListener;
-extern const void * RTTI_NavMeshObstacleManager;
-extern const void * RTTI_bhkObstacleDeactivationListener;
-extern const void * RTTI_bhkObstacleRemovalListener;
-extern const void * RTTI_BSNavmeshReferenceObstacleArray;
-extern const void * RTTI_ObstacleTaskData;
-extern const void * RTTI_PathingCoverLocation;
-extern const void * RTTI_BSPathingCellManager;
-extern const void * RTTI_Pathing;
-extern const void * RTTI_BSPathingCell;
-extern const void * RTTI_PathingCell;
-extern const void * RTTI_BSPathingDoor;
-extern const void * RTTI_PathingDoor;
-extern const void * RTTI_BSPathingLockData;
-extern const void * RTTI_PathingLockData;
-extern const void * RTTI_BSPathingNumericIDVisitor;
-extern const void * RTTI_PathingNumericIDVisitor;
-extern const void * RTTI_PathingRequest;
-extern const void * RTTI_BSPathingSpace;
-extern const void * RTTI_PathingSpace;
-extern const void * RTTI_TeleportDoorSearch;
-extern const void * RTTI_NavMeshSearchClosePoint;
-extern const void * RTTI_NavMeshSearchFitSphere;
-extern const void * RTTI_NavMeshSearchFlee;
-extern const void * RTTI_NavMeshSearchHide;
-extern const void * RTTI_BSNavmeshSearchHideFilter;
-extern const void * RTTI_NavMeshSearchLOS;
-extern const void * RTTI_NavMeshSearchMaxCost;
-extern const void * RTTI_BSNavmeshSearchMaxCostFilters;
-extern const void * RTTI_NavMeshSearchMultipleGoals;
-extern const void * RTTI_NavMeshSearchSLPoint;
-extern const void * RTTI_PathingRequestClosePoint;
-extern const void * RTTI_PathingRequestClosestGoal;
-extern const void * RTTI_IPathBuilderFactoryBase;
-extern const void * RTTI_PathingRequestCover;
-extern const void * RTTI_PathingRequestFlee;
-extern const void * RTTI_PathingRequestFly;
-extern const void * RTTI_PathingRequestFlyAction;
-extern const void * RTTI_PathingRequestFlyHover;
-extern const void * RTTI_PathingRequestFlyLand;
-extern const void * RTTI_PathingRequestFlyOrbit;
-extern const void * RTTI_PathingRequestFlyTakeOff;
-extern const void * RTTI_PathingRequestHide;
-extern const void * RTTI_PathingRequestLOS;
-extern const void * RTTI_PathingRequestOptimalLocation;
-extern const void * RTTI_PathingRequestRotate;
-extern const void * RTTI_PathingRequestSafeStraightLine;
-extern const void * RTTI_PathingRequestStopMoving;
-extern const void * RTTI_BGSQueuedTerrainUpdate;
-extern const void * RTTI_BGSQueuedTerrainUpgrade;
-extern const void * RTTI_BGSQueuedTerrainDowngrade;
-extern const void * RTTI_BGSQueuedTerrainInitialLoad;
-extern const void * RTTI_BGSQueuedObjectUpgrade;
-extern const void * RTTI_BGSQueuedObjectDowngrade;
-extern const void * RTTI_BGSQueuedObjectInitialLoad;
-extern const void * RTTI_BGSWaterCollisionManager__bhkAutoWater;
-extern const void * RTTI_BGSWaterCollisionManager__bshkAutoWater;
-extern const void * RTTI_TESWaterObject;
-extern const void * RTTI_TESWaterReflections;
-extern const void * RTTI_TESWaterDisplacement;
-extern const void * RTTI_TESWaterNormals;
-extern const void * RTTI_BGSStoryManagerTreeVisitor;
-extern const void * RTTI_BGSStoryManagerQuestFinder;
-extern const void * RTTI_BGSStoryManager;
-extern const void * RTTI_BGSStoryManagerEventNode;
-extern const void * RTTI_BGSStoryManagerQuestNode;
-extern const void * RTTI_BGSStoryTeller;
-extern const void * RTTI_BGSLOSData;
-extern const void * RTTI_AnimationClipDataSingleton;
-extern const void * RTTI_AnimationSystemUtils__QueuedReferenceAnimationTask;
-extern const void * RTTI_hkaRaycastInterface;
-extern const void * RTTI_BSIFootIkRaycastInterfaceDB;
-extern const void * RTTI_CachedRaycastData;
-extern const void * RTTI_BGSFootIkRaycastInterfaceDB;
-extern const void * RTTI_IGamebryoSequenceGeneratorHolderSingleton;
-extern const void * RTTI_BGSGamebryoSequenceGeneratorHolderSingleton;
-extern const void * RTTI_BSSynchronizedClipGenerator__hkbSynchronizedAnimationScene;
-extern const void * RTTI_BGSSynchronizedAnimationInstance;
-extern const void * RTTI_BSLimbIKModifierUtilityCastInfo;
-extern const void * RTTI_BSLimbIKModifierUtility;
-extern const void * RTTI_IAnimationGraphManagerHolder;
-extern const void * RTTI_IAnimationGraphManagerLoadingTask;
-extern const void * RTTI_SimpleAnimationGraphManagerLoadingTask;
-extern const void * RTTI_SimpleAnimationGraphManagerHolder;
-extern const void * RTTI_WeaponAnimationGraphManagerHolder;
-extern const void * RTTI_TailAnimationGraphManagerHolder;
-extern const void * RTTI_TESCamera;
-extern const void * RTTI_PlayerInputHandler;
-extern const void * RTTI_ThirdPersonState;
-extern const void * RTTI_DragonCameraState;
-extern const void * RTTI_CombatBehaviorTreeRanged;
-extern const void * RTTI_GRefCountImpl;
-extern const void * RTTI_GRefCountImplCore;
-extern const void * RTTI_GFxFunctionHandler;
-extern const void * RTTI_MenuEventHandler;
-extern const void * RTTI_CreationClubMenu;
-extern const void * RTTI_MessageBoxData;
-extern const void * RTTI_IMessageBoxCallback;
-extern const void * RTTI_IUIMessageData;
-extern const void * RTTI_CreationClub__AsyncModRequest;
-extern const void * RTTI_CreationClub__CreationListRequest;
-extern const void * RTTI_CreationClub__BundleChildrenRequest;
-extern const void * RTTI_CreationClub__CategorySearchRequest;
-extern const void * RTTI_CreationClub__GetCreationRequest;
-extern const void * RTTI_CreationClub__GetIntRequest;
-extern const void * RTTI_CreationClub__DownloadImageRequest;
-extern const void * RTTI_CreationClub__StringStringRequest;
-extern const void * RTTI_CreationClub__SavedGFxValueRequest;
-extern const void * RTTI_CreationClub__DownloadCreationRequest;
-extern const void * RTTI_CreationClub__CreationChanged_ConfirmResetCallback;
-extern const void * RTTI_ModManagerMenu;
-extern const void * RTTI_ModManager__AsyncModRequest;
-extern const void * RTTI_ModManager__DownloadModRequest;
-extern const void * RTTI_ModManager__CategorySearchRequest;
-extern const void * RTTI_ModManager__GetDetailsRequest;
-extern const void * RTTI_ModManager__GetDependencyRequest;
-extern const void * RTTI_ModManager__DownloadImageRequest;
-extern const void * RTTI_ModManager__SavedGFxValueRequest;
-extern const void * RTTI_ModManager__GetIntRequest;
-extern const void * RTTI_ModManager__StringStringRequest;
-extern const void * RTTI_ModManager__ReportMod_CategoryCallback;
-extern const void * RTTI_ModManager__ReportMod_ConfirmCallback;
-extern const void * RTTI_ModManager__DeleteMod_ConfirmCallback;
-extern const void * RTTI_ModManager__DeleteLibraryModConfirmCallback;
-extern const void * RTTI_ModManager__DeleteAllModsConfirmCallback;
-extern const void * RTTI_ModManager__CloseModManager_ConfirmCallback;
-extern const void * RTTI_ModManager__ModsChanged_ConfirmResetCallback;
-extern const void * RTTI_KinectMenu;
-extern const void * RTTI_LoadWaitSpinner;
-extern const void * RTTI_AbsorbEffect;
-extern const void * RTTI_AccumulatingValueModifierEffect;
-extern const void * RTTI_FindMaxMagnitudeVisitor;
-extern const void * RTTI_FinishActiveEffectVisitor;
-extern const void * RTTI_ActiveEffect;
-extern const void * RTTI_ActiveEffectReferenceEffectController;
-extern const void * RTTI_ActiveEffect__ForEachHitEffectVisitor;
-extern const void * RTTI_ActorMagicCaster;
-extern const void * RTTI_BSAttachTechniques__AttachTechniqueInput;
-extern const void * RTTI_RefAttachTechniqueInput;
-extern const void * RTTI_MagicItemDataCollector;
-extern const void * RTTI_BoundItemEffect;
-extern const void * RTTI_MagicTarget__IPostCreationModification;
-extern const void * RTTI_CloakEffect;
-extern const void * RTTI_CommandEffect;
-extern const void * RTTI_CommandSummonedEffect;
-extern const void * RTTI_CureEffect;
-extern const void * RTTI_DarknessEffect;
-extern const void * RTTI_DetectLifeEffect;
-extern const void * RTTI_DisarmEffect;
-extern const void * RTTI_DisguiseEffect;
-extern const void * RTTI_DisguiseEffect__DetectionChecker;
-extern const void * RTTI_DispelEffect;
-extern const void * RTTI_DualValueModifierEffect;
-extern const void * RTTI_EtherealizationEffect;
-extern const void * RTTI_GrabActorEffect;
-extern const void * RTTI_VampireLordEffect;
-extern const void * RTTI_ConcussionEffect;
-extern const void * RTTI_GuideEffect;
-extern const void * RTTI_InvisibilityEffect;
-extern const void * RTTI_LightEffect;
-extern const void * RTTI_LightEffect__AttachBestLightVisitor;
-extern const void * RTTI_LockEffect;
-extern const void * RTTI_MagicCaster;
-extern const void * RTTI_MagicCaster__PostCreationCallback;
-extern const void * RTTI_ProcessLists__GetActorsFilter;
-extern const void * RTTI_ActorTargetCheck;
-extern const void * RTTI_MagicTarget__DispelFromBoundObject;
-extern const void * RTTI_KeywordDispelFunctor;
-extern const void * RTTI_IsSpellTargetFunctor;
-extern const void * RTTI_IsSpellTypeTargetFunctor;
-extern const void * RTTI_FindEffectKeywordOnTargetFunctor;
-extern const void * RTTI_StartSpellHelpers__EffectGatherFunctor;
-extern const void * RTTI_StartSpellHelpers__SpellEffectGatherFunctor;
-extern const void * RTTI_StartSpellHelpers__DoneEffectGatherFunctor;
-extern const void * RTTI_FindActiveEffectByIDFunctor;
-extern const void * RTTI_EffectsCausingDamageFunctor;
-extern const void * RTTI_ModelReferenceEffect;
-extern const void * RTTI_NightEyeEffect;
-extern const void * RTTI_ExtraMagicCaster;
-extern const void * RTTI_NonActorMagicCaster;
-extern const void * RTTI_OpenEffect;
-extern const void * RTTI_ParalysisEffect;
-extern const void * RTTI_PeakValueModifierEffect;
-extern const void * RTTI_ReanimateEffect;
-extern const void * RTTI_ReferenceEffect;
-extern const void * RTTI_WeaponEnchantmentController;
-extern const void * RTTI_ScriptEffect;
-extern const void * RTTI_ScriptedRefEffect;
-extern const void * RTTI_BSParticleShaderObjectEmitter;
-extern const void * RTTI_BSParticleShaderRayEmitter;
-extern const void * RTTI_BSParticleShaderCollisionEmitter;
-extern const void * RTTI_BSParticleShaderGeometryEmitter;
-extern const void * RTTI_ShaderReferenceEffect;
-extern const void * RTTI_SlowTimeEffect;
-extern const void * RTTI_SoulTrapEffect;
-extern const void * RTTI_StaggerEffect;
-extern const void * RTTI_BSPathing__CheckLineOfSightFilter;
-extern const void * RTTI_CheckLineOfSightFilterMisc;
-extern const void * RTTI_SummonPlacementEffect;
-extern const void * RTTI_SummonCreatureEffect;
-extern const void * RTTI_TargetValueModifierEffect;
-extern const void * RTTI_RallyEffect;
-extern const void * RTTI_DemoralizeEffect;
-extern const void * RTTI_TurnUndeadEffect;
-extern const void * RTTI_BanishEffect;
-extern const void * RTTI_CalmEffect;
-extern const void * RTTI_FrenzyEffect;
-extern const void * RTTI_TelekinesisEffect;
-extern const void * RTTI_ValueAndConditionsEffect;
-extern const void * RTTI_ValueModifierEffect;
-extern const void * RTTI_WerewolfEffect;
-extern const void * RTTI_WerewolfFeedEffect;
-extern const void * RTTI_TESAudio__ScriptedMusicState;
-extern const void * RTTI_BGSPlayerMusicChanger;
-extern const void * RTTI_MenuTopicManager;
-extern const void * RTTI_JobListManager__ServingThread;
-extern const void * RTTI_BGSSaveLoadManager;
-extern const void * RTTI_bgs__saveload__SaveOperationRequest;
-extern const void * RTTI_bgs__saveload__LoadRequest;
-extern const void * RTTI_bgs__saveload__LoadEntryRequest;
-extern const void * RTTI_BGSSaveLoadManager__Thread;
-extern const void * RTTI_bgs__saveload__Request;
-extern const void * RTTI_BGSSaveLoadStatsMap;
-extern const void * RTTI_BGSLoadGameBuffer;
-extern const void * RTTI_BGSSaveFormBuffer;
-extern const void * RTTI_BGSSaveGameBuffer;
-extern const void * RTTI_SaveStorageWrapper;
-extern const void * RTTI_LoadStorageWrapper;
-extern const void * RTTI_BSResource__CacheDrive__Op;
-extern const void * RTTI_BGSMoviePlayer;
-extern const void * RTTI_IExplosionFactory;
-extern const void * RTTI_ChainExplosion;
-extern const void * RTTI_EnhanceWeaponEffect;
-extern const void * RTTI_GarbageCollector;
-extern const void * RTTI_Main;
-extern const void * RTTI_IMovementControllerNPCFunctor;
-extern const void * RTTI_bhkTelekinesisListener;
-extern const void * RTTI_MagicFavorites;
-extern const void * RTTI_BSTreeManager__IQueryCullingCamera;
-extern const void * RTTI_RegSettingCollection;
-extern const void * RTTI_BGSImpactManager;
-extern const void * RTTI_MovementAvoidBoxEventAdapter;
-extern const void * RTTI_PathManagerPositionPlayerAdapter;
-extern const void * RTTI_CharacterCollisionMessagePlayerAdapter;
-extern const void * RTTI_PlayerSleepWaitMovementControllerAdapter;
-extern const void * RTTI_PlayerSleepWaitMovementControllerAdapter__SwitchToLoadedSetControllerFunctor;
-extern const void * RTTI_PlayerSleepWaitMovementControllerAdapter__SwitchToUnloadedSetControllerFunctor;
-extern const void * RTTI_DoorObstacleAdapter;
-extern const void * RTTI_SystemEventAdapter;
-extern const void * RTTI_InitTESThread;
-extern const void * RTTI_DetectSignOut;
-extern const void * RTTI_IMemoryManagerFile;
-extern const void * RTTI_IMemoryManagerFileFactory;
-extern const void * RTTI_MemoryManagerFile;
-extern const void * RTTI_SceneGraph;
-extern const void * RTTI_SeenData;
-extern const void * RTTI_IntSeenData;
-extern const void * RTTI_SpawnHazardEffect;
-extern const void * RTTI_BSUIMessageData;
-extern const void * RTTI_IMovementState;
-extern const void * RTTI_IPostAnimationChannelUpdateFunctor;
-extern const void * RTTI_IAnimationSetCallbackFunctor;
-extern const void * RTTI_Actor;
-extern const void * RTTI_PackageList__IPackageVisitor;
-extern const void * RTTI_hkpWorldPostSimulationListener;
-extern const void * RTTI_ProcessCallbackAdapter;
-extern const void * RTTI_SaveLoadMagicCasterVisitor;
-extern const void * RTTI_SaveGameMagicCasterVisitor;
-extern const void * RTTI_LoadGameMagicCasterVisitor;
-extern const void * RTTI_RevertSelectedSpellFunctor;
-extern const void * RTTI_HoldWardSpellsActiveEffectVisitor;
-extern const void * RTTI_hkpAllCdBodyPairCollector;
-extern const void * RTTI_bhkFilteredCdBodyCollector;
-extern const void * RTTI_Actor__ForEachSpellVisitor;
-extern const void * RTTI_InventoryChanges__FindBestSoulGemVisitor;
-extern const void * RTTI_HasSpellVisitor;
-extern const void * RTTI_SumHostileEffectsFunctor;
-extern const void * RTTI_ActorMediator;
-extern const void * RTTI_IMovementInterface;
-extern const void * RTTI_ActorState;
-extern const void * RTTI_BGSVisitProceduresProcess;
-extern const void * RTTI_BGSVisitProceduresInitActorAnimPose;
-extern const void * RTTI_DetectionListener;
-extern const void * RTTI_InstantInteractionCallback;
-extern const void * RTTI_RunActionAnimationLoadedCallback;
-extern const void * RTTI_BGSPerk__FindPerkInRanksVisitor;
-extern const void * RTTI_BGSPerk__ApplyPerksVisitor;
-extern const void * RTTI_WeaponAnimationLoadedCallback;
-extern const void * RTTI_BSDoorHavokController;
-extern const void * RTTI_BSPlayerDistanceCheckController;
-extern const void * RTTI_BSSimpleScaleController;
-extern const void * RTTI_Character;
-extern const void * RTTI_HighActorCuller;
-extern const void * RTTI_MountInteraction;
-extern const void * RTTI_BGSPerk__AddPerkVisitor;
-extern const void * RTTI_bhkMouseSpringAction;
-extern const void * RTTI_PlayerCharacter;
-extern const void * RTTI_IAllowEGMCacheClear;
-extern const void * RTTI_hkpFirstCdBodyPairCollector;
-extern const void * RTTI_TargetLock__SetTargetLockFilter;
-extern const void * RTTI_PlayerRegionState;
-extern const void * RTTI_IMovementFormIDManager;
-extern const void * RTTI_ProcessListMovementInterface;
-extern const void * RTTI_RefrInteraction;
-extern const void * RTTI_SyncQueueObj;
-extern const void * RTTI_ActorMover;
-extern const void * RTTI_MovementParametersFixed;
-extern const void * RTTI_bhkCharacterCollisionHandler;
-extern const void * RTTI_CharacterCollisionHandler;
-extern const void * RTTI_IMovementAvoidanceManager;
-extern const void * RTTI_MovementAvoidanceManager;
-extern const void * RTTI_MovementControllerNPC;
-extern const void * RTTI_IMovementMessageInterface;
-extern const void * RTTI_IMovementDirectControl;
-extern const void * RTTI_IMovementPlannerDirectControl;
-extern const void * RTTI_IMovementSelectIdle;
-extern const void * RTTI_IMovementMotionDrivenControl;
-extern const void * RTTI_BSPathingStreamWrite;
-extern const void * RTTI_BSPathingStreamSimpleBufferWrite;
-extern const void * RTTI_MovementHandlerAgentDirectControl;
-extern const void * RTTI_IMovementSetPlayerControls;
-extern const void * RTTI_MovementHandlerAgentPlayerControls;
-extern const void * RTTI_MovementHandlerAgentPlayerControlsActionTrigger;
-extern const void * RTTI_IMovementSetSprinting;
-extern const void * RTTI_MovementHandlerAgentSprintActionTrigger;
-extern const void * RTTI_MovementHandlerAgentStairsHelper;
-extern const void * RTTI_MovementMessage;
-extern const void * RTTI_MovementMessageActorCollision;
-extern const void * RTTI_MovementMessageMovementTypeChange;
-extern const void * RTTI_MovementPlannerAgentDirectControl;
-extern const void * RTTI_MovementPlannerAgentHorseControls;
-extern const void * RTTI_IMovementSetKeepOffsetFromActor;
-extern const void * RTTI_MovementPlannerAgentKeepOffset;
-extern const void * RTTI_IMovementSetWarp;
-extern const void * RTTI_MovementPlannerAgentWarp;
-extern const void * RTTI_MovementTweenerAgentAnimationDriven;
-extern const void * RTTI_ITweenerNodeFollowerSetup;
-extern const void * RTTI_MovementTweenerAgentNodeFollower;
-extern const void * RTTI_PathingStreamLoadGame;
-extern const void * RTTI_PathingStreamSaveGame;
-extern const void * RTTI_InputEvent;
-extern const void * RTTI_ButtonEvent;
-extern const void * RTTI_HeldStateHandler;
-extern const void * RTTI_PlayerControls;
-extern const void * RTTI_MovementHandler;
-extern const void * RTTI_LookHandler;
-extern const void * RTTI_SprintHandler;
-extern const void * RTTI_ReadyWeaponHandler;
-extern const void * RTTI_AutoMoveHandler;
-extern const void * RTTI_ToggleRunHandler;
-extern const void * RTTI_ActivateHandler;
-extern const void * RTTI_JumpHandler;
-extern const void * RTTI_ShoutHandler;
-extern const void * RTTI_AttackBlockHandler;
-extern const void * RTTI_RunHandler;
-extern const void * RTTI_SneakHandler;
-extern const void * RTTI_TogglePOVHandler;
-extern const void * RTTI_IDEvent;
-extern const void * RTTI_IStaticAvoidNodeManager;
-extern const void * RTTI_StaticAvoidNodeManager;
-extern const void * RTTI_AlarmPackage;
-extern const void * RTTI_CustomActorPackageData;
-extern const void * RTTI_EscortActorPackageData;
-extern const void * RTTI_FleePackage;
-extern const void * RTTI_GuardActorPackageData;
-extern const void * RTTI_GuardPackageData;
-extern const void * RTTI_PatrolActorPackageData;
-extern const void * RTTI_SandBoxActorPackageData;
-extern const void * RTTI_SpectatorPackage;
-extern const void * RTTI_TrespassPackage;
-extern const void * RTTI_ActorKnowledge;
-extern const void * RTTI_DetectionCollector;
-extern const void * RTTI_DetectionState;
-extern const void * RTTI_WeaponRightSwingHandler;
-extern const void * RTTI_WeaponLeftSwingHandler;
-extern const void * RTTI_AttackWinStartHandler;
-extern const void * RTTI_AttackWinEndHandler;
-extern const void * RTTI_AttackStopHandler;
-extern const void * RTTI_RecoilStopHandler;
-extern const void * RTTI_LeftHandSpellFireHandler;
-extern const void * RTTI_RightHandSpellFireHandler;
-extern const void * RTTI_VoiceSpellFireHandler;
-extern const void * RTTI_LeftHandSpellCastHandler;
-extern const void * RTTI_RightHandSpellCastHandler;
-extern const void * RTTI_VoiceSpellCastHandler;
-extern const void * RTTI_WeaponBeginDrawRightHandler;
-extern const void * RTTI_WeaponBeginSheatheRightHandler;
-extern const void * RTTI_RightHandWeaponDrawHandler;
-extern const void * RTTI_RightHandWeaponSheatheHandler;
-extern const void * RTTI_CameraOverrideStartHandler;
-extern const void * RTTI_CameraOverrideStopHandler;
-extern const void * RTTI_HitFrameHandler;
-extern const void * RTTI_AnticipateAttackHandler;
-extern const void * RTTI_StaggeredStopHandler;
-extern const void * RTTI_ChairEnterHandler;
-extern const void * RTTI_PlayerChairEnterHandler;
-extern const void * RTTI_BedEnterHandler;
-extern const void * RTTI_PlayerBedEnterHandler;
-extern const void * RTTI_ChairFurnitureExitHandler;
-extern const void * RTTI_BedFurnitureExitHandler;
-extern const void * RTTI_PlayerFurnitureExitHandler;
-extern const void * RTTI_KillActorHandler;
-extern const void * RTTI_DecapitateHandler;
-extern const void * RTTI_HeadTrackingOnHandler;
-extern const void * RTTI_HeadTrackingOffHandler;
-extern const void * RTTI_FlightTakeOffHandler;
-extern const void * RTTI_FlightCruisingHandler;
-extern const void * RTTI_FlightHoveringHandler;
-extern const void * RTTI_FlightLandingHandler;
-extern const void * RTTI_FlightPerchingHandler;
-extern const void * RTTI_FlightLandHandler;
-extern const void * RTTI_FlightLandEndHandler;
-extern const void * RTTI_FlightActionHandler;
-extern const void * RTTI_FlightActionEntryEndHandler;
-extern const void * RTTI_FlightActionEndHandler;
-extern const void * RTTI_FlightActionGrabHandler;
-extern const void * RTTI_FlightActionReleaseHandler;
-extern const void * RTTI_FlightCrashLandStartHandler;
-extern const void * RTTI_BowDrawnHandler;
-extern const void * RTTI_BowReleaseHandler;
-extern const void * RTTI_ArrowAttachHandler;
-extern const void * RTTI_ArrowDetachHandler;
-extern const void * RTTI_ArrowReleaseHandler;
-extern const void * RTTI_BowZoomStartHandler;
-extern const void * RTTI_BowZoomStopHandler;
-extern const void * RTTI_InterruptCastHandler;
-extern const void * RTTI_EndSummonAnimationHandler;
-extern const void * RTTI_PickNewIdleHandler;
-extern const void * RTTI_DeathStopHandler;
-extern const void * RTTI_ActionActivateDoneHandler;
-extern const void * RTTI_StopMountCameraHandler;
-extern const void * RTTI_PairedStopHandler;
-extern const void * RTTI_CameraShakeHandler;
-extern const void * RTTI_KillMoveStartHandler;
-extern const void * RTTI_KillMoveEndHandler;
-extern const void * RTTI_DeathEmoteHandler;
-extern const void * RTTI_AddRagdollHandler;
-extern const void * RTTI_MotionDrivenHandler;
-extern const void * RTTI_AnimationDrivenHandler;
-extern const void * RTTI_AllowRotationHandler;
-extern const void * RTTI_RemoveRagdollHandler;
-extern const void * RTTI_RagdollStartHandler;
-extern const void * RTTI_GetUpStartHandler;
-extern const void * RTTI_GetUpEndHandler;
-extern const void * RTTI_MountDismountEndHandler;
-extern const void * RTTI_ExitCartBeginHandler;
-extern const void * RTTI_ExitCartEndHandler;
-extern const void * RTTI_NPCAttachHandler;
-extern const void * RTTI_NPCDetachHandler;
-extern const void * RTTI_EnableCharacterBumperHandler;
-extern const void * RTTI_DisableCharacterBumperHandler;
-extern const void * RTTI_AnimationObjectLoadHandler;
-extern const void * RTTI_AnimationObjectDrawHandler;
-extern const void * RTTI_EnableCharacterPitchHandler;
-extern const void * RTTI_DisableCharacterPitchHandler;
-extern const void * RTTI_JumpAnimEventHandler;
-extern const void * RTTI_IdleDialogueEnterHandler;
-extern const void * RTTI_IdleDialogueExitHandler;
-extern const void * RTTI_AnimatedCameraStartHandler;
-extern const void * RTTI_AnimatedCameraDeltaStartHandler;
-extern const void * RTTI_AnimatedCameraEndHandler;
-extern const void * RTTI_PitchOverrideStartHandler;
-extern const void * RTTI_PitchOverrideEndHandler;
-extern const void * RTTI_MTStateHandler;
-extern const void * RTTI_ZeroPitchHandler;
-extern const void * RTTI_VampireFeedEndHandler;
-extern const void * RTTI_BGShkMatFadeController;
-extern const void * RTTI_BSDirectAtModifierInterface;
-extern const void * RTTI_BSPassByTargetTriggerModifierInterface;
-extern const void * RTTI_BSRagdollContactListenerModifierInterface;
-extern const void * RTTI_ArrowProjectile;
-extern const void * RTTI_BarrierPhantomCallbackShape;
-extern const void * RTTI_BarrierProjectile;
-extern const void * RTTI_bhkSPCollisionObject;
-extern const void * RTTI_BeamProjectile;
-extern const void * RTTI_ConeProjectile;
-extern const void * RTTI_Explosion;
-extern const void * RTTI_hkpFixedBufferCdPointCollector;
-extern const void * RTTI_FlameProjectile;
-extern const void * RTTI_GrenadeProjectile;
-extern const void * RTTI_Hazard;
-extern const void * RTTI_MissileProjectile;
-extern const void * RTTI_hkHingeConstraintCinfo;
-extern const void * RTTI_bhkHingeConstraint;
-extern const void * RTTI_Projectile;
-extern const void * RTTI_ProjectilePickCache;
-extern const void * RTTI_HealthDamageFunctor;
-extern const void * RTTI_VATS__ICommandListVisitor;
-extern const void * RTTI_CombatAimController;
-extern const void * RTTI_CombatObject;
-extern const void * RTTI_CombatAimControllerBase;
-extern const void * RTTI_CombatTrackTargetAimController;
-extern const void * RTTI_CombatMeleeAimController;
-extern const void * RTTI_CombatProjectileAimController;
-extern const void * RTTI_CombatDisableAimController;
-extern const void * RTTI_CombatArea;
-extern const void * RTTI_CombatAreaRadius;
-extern const void * RTTI_CombatAreaReference;
-extern const void * RTTI_CombatAreaStandard;
-extern const void * RTTI_CombatAreaHoldPosition;
-extern const void * RTTI_CombatBlackboardKeyBase;
-extern const void * RTTI_CombatCoverSearchResult;
-extern const void * RTTI_CombatCoverLocation;
-extern const void * RTTI_CombatCoverSearchDebugData;
-extern const void * RTTI_CombatCoverSearch;
-extern const void * RTTI_CombatGroupDetectionListener;
-extern const void * RTTI_GatherSpellsFunctor;
-extern const void * RTTI_CombatInventoryItem;
-extern const void * RTTI_CombatInventoryItemComposite;
-extern const void * RTTI_CombatInventoryItemMelee;
-extern const void * RTTI_CombatInventoryItemRanged;
-extern const void * RTTI_CombatInventoryItemShield;
-extern const void * RTTI_CombatInventoryItemOneHandedBlock;
-extern const void * RTTI_CombatInventoryItemTorch;
-extern const void * RTTI_CombatInventoryItemMagic;
-extern const void * RTTI_CombatMagicCaster;
-extern const void * RTTI_CombatInventoryItemShout;
-extern const void * RTTI_CombatInventoryItemStaff;
-extern const void * RTTI_CombatInventoryItemPotion;
-extern const void * RTTI_CombatInventoryItemScroll;
-extern const void * RTTI_CombatMagicItemData;
-extern const void * RTTI_CombatMagicItemSkillChecker;
-extern const void * RTTI_CombatMagicCasterOffensive;
-extern const void * RTTI_CombatMagicCasterWard;
-extern const void * RTTI_CombatMagicCasterRestore;
-extern const void * RTTI_CombatMagicCasterSummon;
-extern const void * RTTI_CombatMagicCasterStagger;
-extern const void * RTTI_CombatMagicCasterDisarm;
-extern const void * RTTI_CombatMagicCasterCloak;
-extern const void * RTTI_CombatMagicCasterLight;
-extern const void * RTTI_CombatMagicCasterInvisibility;
-extern const void * RTTI_CombatMagicCasterBoundItem;
-extern const void * RTTI_CombatMagicCasterArmor;
-extern const void * RTTI_CombatMagicCasterTargetEffect;
-extern const void * RTTI_CombatMagicCasterReanimate;
-extern const void * RTTI_CombatMagicCasterParalyze;
-extern const void * RTTI_CombatMagicCasterScript;
-extern const void * RTTI_CombatPathingRequest;
-extern const void * RTTI_CombatTargetLocationSearchResult;
-extern const void * RTTI_CombatTargetLocation;
-extern const void * RTTI_CombatTargetLocationSearch;
-extern const void * RTTI_CombatPath;
-extern const void * RTTI_CombatTargetSelector;
-extern const void * RTTI_CombatTargetSelectorStandard;
-extern const void * RTTI_CombatTargetSelectorFixed;
-extern const void * RTTI_CombatThreat;
-extern const void * RTTI_hkpClosestCdPointCollector;
-extern const void * RTTI_CombatBehaviorResource;
-extern const void * RTTI_CombatBehaviorTreeRootNode;
-extern const void * RTTI_CombatBehaviorTreeLinkNode;
-extern const void * RTTI_CombatBehaviorTree;
-extern const void * RTTI_CombatBehaviorTreeCombat;
-extern const void * RTTI_CombatBehaviorTreeNode;
-extern const void * RTTI_CombatBehaviorTreeAcquireWeapon;
-extern const void * RTTI_CombatBehaviorTreeWrapperNode;
-extern const void * RTTI_CombatBehaviorTreeAction;
-extern const void * RTTI_CombatBehaviorTreeActionEquipmentSelector;
-extern const void * RTTI_CombatBehaviorTreeDodgeThreat;
-extern const void * RTTI_CombatBehaviorTreeBlock;
-extern const void * RTTI_CombatPathSpeedController;
-extern const void * RTTI_CombatApproachTargetSpeedController;
-extern const void * RTTI_CombatBehaviorTreeCloseMovement;
-extern const void * RTTI_CombatBehaviorTreeFindAttackLocation;
-extern const void * RTTI_CombatBehaviorTreeFlankingMovement;
-extern const void * RTTI_CombatFlankingSearchData;
-extern const void * RTTI_CombatBehaviorTreeFlee;
-extern const void * RTTI_CombatBehaviorTreeHide;
-extern const void * RTTI_CombatBehaviorTreeFlight;
-extern const void * RTTI_DiveBombSpeedController;
-extern const void * RTTI_CombatBehaviorTreeLowCombat;
-extern const void * RTTI_CombatBehaviorTreeMagic;
-extern const void * RTTI_CombatBehaviorTreeMelee;
-extern const void * RTTI_CombatDisableActionController;
-extern const void * RTTI_CombatBehaviorTreeCheckUnreachableTarget;
-extern const void * RTTI_CombatBehaviorTreeReturnToCombatArea;
-extern const void * RTTI_CombatBehaviorTreeExitWater;
-extern const void * RTTI_CombatBehaviorTreeMovement;
-extern const void * RTTI_CombatBehaviorTreeRangedMovement;
-extern const void * RTTI_CombatBehaviorTreeSearch;
-extern const void * RTTI_CombatSearchLockData;
-extern const void * RTTI_CombatBehaviorTreeShout;
-extern const void * RTTI_CombatBehaviorTreeUseCover;
-extern const void * RTTI_CombatBehaviorTreeUsePotion;
-extern const void * RTTI_IPathBuilder;
-extern const void * RTTI_CombatNavmeshSearch;
-extern const void * RTTI_CombatPathBuilder;
-extern const void * RTTI_CombatPathBuilderStandard;
-extern const void * RTTI_CombatPathBuilderOpen;
-extern const void * RTTI_CombatPathingDebugData;
-extern const void * RTTI_CombatPathingRequestStandard;
-extern const void * RTTI_CombatPathingRequestAdapter;
-extern const void * RTTI_CombatPathingRequestMultiGoal;
-extern const void * RTTI_HorseCameraState;
-extern const void * RTTI_FirstPersonState;
-extern const void * RTTI_PlayerCamera;
-extern const void * RTTI_AutoVanityState;
-extern const void * RTTI_FreeCameraState;
-extern const void * RTTI_IronSightsState;
-extern const void * RTTI_FurnitureCameraState;
-extern const void * RTTI_PlayerCameraTransitionState;
-extern const void * RTTI_BleedoutCameraState;
-extern const void * RTTI_TweenMenuCameraState;
-extern const void * RTTI_VATSCameraState;
-extern const void * RTTI_FxResponseArgsBase;
-extern const void * RTTI_FxResponseArgsList;
-extern const void * RTTI_StandardItemData;
-extern const void * RTTI_BarterMenu;
-extern const void * RTTI_BookMenu;
-extern const void * RTTI_IStringForwarder;
-extern const void * RTTI_Console;
-extern const void * RTTI_ConsoleNativeUIMenu;
-extern const void * RTTI_ContainerMenu;
-extern const void * RTTI_FxDelegateHandler;
-extern const void * RTTI_CraftingSubMenus__CraftingSubMenu;
-extern const void * RTTI_CraftingMenu;
-extern const void * RTTI_CraftingSubMenus__ConstructibleObjectMenu;
-extern const void * RTTI_CraftingSubMenus__ConstructibleObjectMenu__CreationConfirmCallback;
-extern const void * RTTI_CraftingSubMenus__SmithingMenu;
-extern const void * RTTI_CraftingSubMenus__SmithingMenu__SmithingConfirmCallback;
-extern const void * RTTI_CraftingSubMenus__EnchantConstructMenu;
-extern const void * RTTI_CraftingSubMenus__EnchantConstructMenu__EnchantMenuCallback;
-extern const void * RTTI_CraftingSubMenus__EnchantConstructMenu__EnchantMenuExitCallback;
-extern const void * RTTI_CraftingSubMenus__EnchantConstructMenu__EnchantMenuCraftCallback;
-extern const void * RTTI_CraftingSubMenus__EnchantConstructMenu__EnchantMenuDisenchantCallback;
-extern const void * RTTI_CraftingSubMenus__EnchantConstructMenu__CategoryListEntry;
-extern const void * RTTI_CraftingSubMenus__EnchantConstructMenu__ItemChangeEntry;
-extern const void * RTTI_CraftingSubMenus__EnchantConstructMenu__EnchantmentEntry;
-extern const void * RTTI_CraftingSubMenus__EnchantConstructMenu__CreateEffectFunctor;
-extern const void * RTTI_CraftingSubMenus__AlchemyMenu;
-extern const void * RTTI_CraftingSubMenus__AlchemyMenu__CraftItemCallback;
-extern const void * RTTI_CraftingSubMenus__AlchemyMenu__QuitMenuCallback;
-extern const void * RTTI_CraftingSubMenus__AlchemyMenu__ModEffectivenessFunctor;
-extern const void * RTTI_CreditsMenu;
-extern const void * RTTI_CursorMenu;
-extern const void * RTTI_DialogueMenu;
-extern const void * RTTI_FaderMenu;
-extern const void * RTTI_FavoritesMenu;
-extern const void * RTTI_GiftMenu;
-extern const void * RTTI_HUDObject;
-extern const void * RTTI_HUDMeter;
-extern const void * RTTI_HUDMenu;
-extern const void * RTTI_HUDNotifications;
-extern const void * RTTI_ActorValueMeter;
-extern const void * RTTI_ShoutMeter;
-extern const void * RTTI_HUDChargeMeter;
-extern const void * RTTI_Compass;
-extern const void * RTTI_EnemyHealth;
-extern const void * RTTI_FloatingQuestMarker;
-extern const void * RTTI_StealthMeter;
-extern const void * RTTI_HelpMessageManager;
-extern const void * RTTI_NewInventoryMenuItemLoadTask;
-extern const void * RTTI_Inventory3DManager;
-extern const void * RTTI_InventoryMenu;
-extern const void * RTTI_LevelUpMenu;
-extern const void * RTTI_LoadingMenu;
-extern const void * RTTI_LockpickingMenu;
-extern const void * RTTI_MagicItemData;
-extern const void * RTTI_MagicMenu;
-extern const void * RTTI_MainMenu;
-extern const void * RTTI_MenuControls;
-extern const void * RTTI_ClickHandler;
-extern const void * RTTI_DirectionHandler;
-extern const void * RTTI_ConsoleOpenHandler;
-extern const void * RTTI_QuickSaveLoadHandler;
-extern const void * RTTI_MenuOpenHandler;
-extern const void * RTTI_FavoritesHandler;
-extern const void * RTTI_ScreenshotHandler;
-extern const void * RTTI_MessageBoxMenu;
-extern const void * RTTI_MistMenu;
-extern const void * RTTI_ThumbstickEvent;
-extern const void * RTTI_RaceSexCamera;
-extern const void * RTTI_RaceSexMenu;
-extern const void * RTTI_SafeZoneMenu;
-extern const void * RTTI_SleepWaitMenu;
-extern const void * RTTI_StatsNode;
-extern const void * RTTI_StatsMenu;
-extern const void * RTTI_LineNode;
-extern const void * RTTI_StreamingInstallMenu;
-extern const void * RTTI_TitleSequenceMenu;
-extern const void * RTTI_TrainingMenu;
-extern const void * RTTI_TutorialMenu;
-extern const void * RTTI_TweenMenu;
-extern const void * RTTI_UIBlurManager;
-extern const void * RTTI_HUDData;
-extern const void * RTTI_ConsoleData;
-extern const void * RTTI_FaderData;
-extern const void * RTTI_InventoryUpdateData;
-extern const void * RTTI_RefHandleUIData;
-extern const void * RTTI_TESFormUIData;
-extern const void * RTTI_LoadingMenuData;
-extern const void * RTTI_KinectStateChangeData;
-extern const void * RTTI_KinectUserEventData;
-extern const void * RTTI_UISaveLoadManager;
-extern const void * RTTI_bgs__saveload__BuildSaveListRequest;
-extern const void * RTTI_LocalMapMenu__InputHandler;
-extern const void * RTTI_TransitionState;
-extern const void * RTTI_MapCameraStates__Exit;
-extern const void * RTTI_MapCameraStates__Transition;
-extern const void * RTTI_IMapCameraCallbacks;
-extern const void * RTTI_MapCamera;
-extern const void * RTTI_MapCameraStates__World;
-extern const void * RTTI_MapMenu;
-extern const void * RTTI_MapInputHandler;
-extern const void * RTTI_MapLookHandler;
-extern const void * RTTI_MapMoveHandler;
-extern const void * RTTI_MapZoomHandler;
-extern const void * RTTI_JournalTab;
-extern const void * RTTI_Journal_QuestsTab;
-extern const void * RTTI_ModManagerData;
-extern const void * RTTI_Journal_SystemTab;
-extern const void * RTTI_JournalInputMapping__RemapHandler;
-extern const void * RTTI_Journal_StatsTab;
-extern const void * RTTI_JournalMenu;
-extern const void * RTTI_SkyrimScript__Internal__CallbackList;
-extern const void * RTTI_SkyrimScript__Internal__AnimationCallbacks;
-extern const void * RTTI_SkyrimScript__DelayFunctor;
-extern const void * RTTI_SkyrimScript__DelayFunctorFactory;
-extern const void * RTTI_SkyrimScript__Logger;
-extern const void * RTTI_SkyrimScript__PathingCallbackMgr;
-extern const void * RTTI_SkyrimScript__Internal__IProfileCallQuery;
-extern const void * RTTI_SkyrimScript__Profiler;
-extern const void * RTTI_SkyrimScript__QuestCallbackMgr;
-extern const void * RTTI_SkyrimScript__SavePatcher;
-extern const void * RTTI_SkyrimScript__SoundCallbackMgr;
-extern const void * RTTI_BSScript__IStore;
-extern const void * RTTI_SkyrimScript__Store;
-extern const void * RTTI_BSResource__ArchiveFoundStreamCB;
-extern const void * RTTI_BSCounterStorage;
-extern const void * RTTI_BSScript__IObjectHandlePolicy;
-extern const void * RTTI_BSScript__IStackCallbackSaveInterface;
-extern const void * RTTI_BSScript__IStackCallbackFunctor;
-extern const void * RTTI_BSScript__IProfilePolicy;
-extern const void * RTTI_BSScript__ILoader;
-extern const void * RTTI_BSScript__ObjectBindPolicy;
-extern const void * RTTI_BSScript__IFreezeQuery;
-extern const void * RTTI_BSScript__ISavePatcherInterface;
-extern const void * RTTI_SkyrimScript__HandlePolicy;
-extern const void * RTTI_SkyrimScript__SaveFileHandleReaderWriter;
-extern const void * RTTI_SkyrimScript__ObjectBindPolicy;
-extern const void * RTTI_SkyrimVM;
-extern const void * RTTI_SkyrimVM__ISendEventFilter;
-extern const void * RTTI_SkyrimVM__EventRelayFunctor;
-extern const void * RTTI_SkyrimVM__EffectEventRelayFunctor;
-extern const void * RTTI_SkyrimVM__SleepStartEventFunctor;
-extern const void * RTTI_SkyrimVM__SleepStopEventFunctor;
-extern const void * RTTI_SkyrimVM__InventoryEventFilter;
-extern const void * RTTI_IGiftMenuScriptCallback;
-extern const void * RTTI_SkyrimSpeechRecognition;
-extern const void * RTTI_hkaFootPlacementIkSolver;
-extern const void * RTTI_hkReferencedObjectLock;
-extern const void * RTTI_hkMemoryAllocator;
-extern const void * RTTI_hkLifoAllocator;
-extern const void * RTTI_hkContainerTempAllocator__Allocator;
-extern const void * RTTI_hkContainerHeapAllocator__Allocator;
-extern const void * RTTI_hkContainerDebugAllocator__Allocator;
-extern const void * RTTI_hkErrStream;
-extern const void * RTTI_hkLocalFrameGroup;
-extern const void * RTTI_hkLocalFrame;
-extern const void * RTTI_hkSimpleLocalFrame;
-extern const void * RTTI_hkBufferedStreamReader;
-extern const void * RTTI_hkBufferedStreamWriter;
-extern const void * RTTI_hkSeekableStreamReader;
-extern const void * RTTI_hkStdioStreamReader;
-extern const void * RTTI_hkStdioStreamWriter;
-extern const void * RTTI_hkOstream;
-extern const void * RTTI_hkMemoryTrackStreamWriter;
-extern const void * RTTI_hkArrayStreamWriter;
-extern const void * RTTI_hkStatisticsCollector;
-extern const void * RTTI_hkCrc32StreamWriter;
-extern const void * RTTI_hkStackTracer;
-extern const void * RTTI_hkDummySingleton;
-extern const void * RTTI_hkTrackerSerializableScanSnapshot;
-extern const void * RTTI_hkTrackerTypeTreeTextCache;
-extern const void * RTTI_hkMemoryTrackStreamReader;
-extern const void * RTTI_hkOArchive;
-extern const void * RTTI_hkDefaultError;
-extern const void * RTTI_hkSocket;
-extern const void * RTTI_hkSocket__ReaderAdapter;
-extern const void * RTTI_hkSocket__WriterAdapter;
-extern const void * RTTI_hkTrackerScanSnapshot;
-extern const void * RTTI_hkBsdSocket;
-extern const void * RTTI_hkTrackerTypeTreeCache;
-extern const void * RTTI_hkMemoryTracker;
-extern const void * RTTI_hkDefaultMemoryTracker;
-extern const void * RTTI_hkMemorySystem;
-extern const void * RTTI_hkDummyMemoryTrackerImpl;
-extern const void * RTTI_hkTrackerArrayLayoutHandler;
-extern const void * RTTI_hkTrackerStringPtrLayoutHandler;
-extern const void * RTTI_hkTrackerCachedHashMapLayoutHandler;
-extern const void * RTTI_hkTrackerStringMapLayoutHandler;
-extern const void * RTTI_hkTrackerTypeLayout;
-extern const void * RTTI_hkTrackerLayoutCalculator;
-extern const void * RTTI_hkTrackerLayoutHandler;
-extern const void * RTTI_hkTrackerRefPtrLayoutHandler;
-extern const void * RTTI_hkbRagdollDriver;
-extern const void * RTTI_hkbNode;
-extern const void * RTTI_hkbBindable;
-extern const void * RTTI_hkbBehaviorGraph;
-extern const void * RTTI_hkbNodeInternalStateInfo;
-extern const void * RTTI_hkbGenerator;
-extern const void * RTTI_hkbVariableValueSet;
-extern const void * RTTI_hkbBehaviorGraph__GlobalTransitionData;
-extern const void * RTTI_hkbFootIkDriver;
-extern const void * RTTI_hkbAnimationBindingSet;
-extern const void * RTTI_hkbCharacter;
-extern const void * RTTI_hkbWorld;
-extern const void * RTTI_hkbSceneModifier;
-extern const void * RTTI_hkbFootIkSceneModifier;
-extern const void * RTTI_hkbHandIkSceneModifier;
-extern const void * RTTI_hkbHandIkFixupSceneModifier;
-extern const void * RTTI_hkbBindableCollector;
-extern const void * RTTI_hkbBindable__CacheBindablesCollector;
-extern const void * RTTI_hkbNode__BoundVariablesCollector;
-extern const void * RTTI_hkbAttachmentSetup;
-extern const void * RTTI_hkbEventPayload;
-extern const void * RTTI_hkbRealEventPayload;
-extern const void * RTTI_hkbIntEventPayload;
-extern const void * RTTI_hkbStringEventPayload;
-extern const void * RTTI_hkbNamedEventPayload;
-extern const void * RTTI_hkbNamedRealEventPayload;
-extern const void * RTTI_hkbNamedIntEventPayload;
-extern const void * RTTI_hkbNamedStringEventPayload;
-extern const void * RTTI_hkbEventPayloadList;
-extern const void * RTTI_hkbVariableBindingSet;
-extern const void * RTTI_hkbHandle;
-extern const void * RTTI_hkbHandIkDriverInfo;
-extern const void * RTTI_hkbTransitionEffect;
-extern const void * RTTI_hkbProjectStringData;
-extern const void * RTTI_hkbBehaviorGraphInternalState;
-extern const void * RTTI_hkbBehaviorGraphData;
-extern const void * RTTI_hkbStateListener;
-extern const void * RTTI_hkbSequence;
-extern const void * RTTI_hkbBehaviorGraphStringData;
-extern const void * RTTI_hkbBoneIndexArray;
-extern const void * RTTI_hkbBoneWeightArray;
-extern const void * RTTI_hkbCharacterStringData;
-extern const void * RTTI_hkbFootIkDriverInfo;
-extern const void * RTTI_hkbMirroredSkeletonInfo;
-extern const void * RTTI_hkbCondition;
-extern const void * RTTI_hkbCompiledExpressionSet;
-extern const void * RTTI_hkbExpressionCondition;
-extern const void * RTTI_hkbStringCondition;
-extern const void * RTTI_hkbBehaviorReferenceGenerator;
-extern const void * RTTI_hkbBlenderGeneratorChild;
-extern const void * RTTI_hkbBlenderGenerator;
-extern const void * RTTI_hkbBlenderGeneratorInternalState;
-extern const void * RTTI_hkbClipTriggerArray;
-extern const void * RTTI_hkbClipGeneratorInternalState;
-extern const void * RTTI_hkbRegisteredGenerator;
-extern const void * RTTI_hkbManualSelectorGenerator;
-extern const void * RTTI_hkbManualSelectorGeneratorInternalState;
-extern const void * RTTI_hkbModifier;
-extern const void * RTTI_hkbModifierGenerator;
-extern const void * RTTI_hkbPoseMatchingGenerator;
-extern const void * RTTI_hkbPoseMatchingGeneratorInternalState;
-extern const void * RTTI_hkbReferencePoseGenerator;
-extern const void * RTTI_hkbAttachmentModifier;
-extern const void * RTTI_hkbAttributeModifier;
-extern const void * RTTI_hkbCharacterControllerModifier;
-extern const void * RTTI_hkbCharacterControllerModifierInternalState;
-extern const void * RTTI_hkbCombineTransformsModifier;
-extern const void * RTTI_hkbCombineTransformsModifierInternalState;
-extern const void * RTTI_hkbComputeDirectionModifier;
-extern const void * RTTI_hkbComputeDirectionModifierInternalState;
-extern const void * RTTI_hkbComputeRotationFromAxisAngleModifier;
-extern const void * RTTI_hkbComputeRotationFromAxisAngleModifierInternalState;
-extern const void * RTTI_hkbComputeRotationToTargetModifier;
-extern const void * RTTI_hkbComputeRotationToTargetModifierInternalState;
-extern const void * RTTI_hkbDampingModifier;
-extern const void * RTTI_hkbDampingModifierInternalState;
-extern const void * RTTI_hkbModifierWrapper;
-extern const void * RTTI_hkbDelayedModifier;
-extern const void * RTTI_hkbDelayedModifierInternalState;
-extern const void * RTTI_hkbDetectCloseToGroundModifier;
-extern const void * RTTI_hkbDetectCloseToGroundModifierInternalState;
-extern const void * RTTI_hkbExpressionDataArray;
-extern const void * RTTI_hkbEvaluateExpressionModifier;
-extern const void * RTTI_hkbEvaluateExpressionModifierInternalState;
-extern const void * RTTI_hkbEvaluateHandleModifier;
-extern const void * RTTI_hkbEventDrivenModifier;
-extern const void * RTTI_hkbEventDrivenModifierInternalState;
-extern const void * RTTI_hkbEventRangeDataArray;
-extern const void * RTTI_hkbEventsFromRangeModifier;
-extern const void * RTTI_hkbEventsFromRangeModifierInternalState;
-extern const void * RTTI_hkbFootIkControlsModifier;
-extern const void * RTTI_hkbFootIkModifier;
-extern const void * RTTI_hkbGetHandleOnBoneModifier;
-extern const void * RTTI_hkbGetUpModifier;
-extern const void * RTTI_hkbGetUpModifierInternalState;
-extern const void * RTTI_hkbGetWorldFromModelModifier;
-extern const void * RTTI_hkbGetWorldFromModelModifierInternalState;
-extern const void * RTTI_hkbHandIkControlsModifier;
-extern const void * RTTI_hkbHandIkModifier;
-extern const void * RTTI_hkbModifierList;
-extern const void * RTTI_hkbLookAtModifier;
-extern const void * RTTI_hkbLookAtModifierInternalState;
-extern const void * RTTI_hkbMirrorModifier;
-extern const void * RTTI_hkbMoveCharacterModifier;
-extern const void * RTTI_hkbMoveCharacterModifierInternalState;
-extern const void * RTTI_hkbProxyModifier;
-extern const void * RTTI_hkbExtractRagdollPoseModifier;
-extern const void * RTTI_hkbKeyframeBonesModifier;
-extern const void * RTTI_hkbPoweredRagdollControlsModifier;
-extern const void * RTTI_hkbRigidBodyRagdollControlsModifier;
-extern const void * RTTI_hkbRotateCharacterModifier;
-extern const void * RTTI_hkbRotateCharacterModifierInternalState;
-extern const void * RTTI_hkbSenseHandleModifier;
-extern const void * RTTI_hkbSetWorldFromModelModifier;
-extern const void * RTTI_hkbTimerModifier;
-extern const void * RTTI_hkbTimerModifierInternalState;
-extern const void * RTTI_hkbTransformVectorModifier;
-extern const void * RTTI_hkbTransformVectorModifierInternalState;
-extern const void * RTTI_hkbTwistModifier;
-extern const void * RTTI_hkbSequenceStringData;
-extern const void * RTTI_hkbEventSequencedData;
-extern const void * RTTI_hkbRealVariableSequencedData;
-extern const void * RTTI_hkbBoolVariableSequencedData;
-extern const void * RTTI_hkbIntVariableSequencedData;
-extern const void * RTTI_hkbSequenceInternalState;
-extern const void * RTTI_hkbSequencedData;
-extern const void * RTTI_hkbStateMachine__TransitionInfoArray;
-extern const void * RTTI_hkbStateMachine__EventPropertyArray;
-extern const void * RTTI_hkbStateMachine__StateInfo;
-extern const void * RTTI_hkbStateMachineInternalState;
-extern const void * RTTI_hkbBlendingTransitionEffect;
-extern const void * RTTI_hkbBlendingTransitionEffectInternalState;
-extern const void * RTTI_hkbGeneratorTransitionEffect;
-extern const void * RTTI_hkbGeneratorTransitionEffectInternalState;
-extern const void * RTTI_hkbClipGenerator;
-extern const void * RTTI_hkbStateMachine;
-extern const void * RTTI_hkbAnimationBindingWithTriggers;
-extern const void * RTTI_hkbHandIkDriver;
-extern const void * RTTI_hkbAttachmentSceneModifier;
-extern const void * RTTI_hkbAttachmentFixupSceneModifier;
-extern const void * RTTI_hkbRagdollSceneModifier;
-extern const void * RTTI_hkbCharacterControllerSceneModifier;
-extern const void * RTTI_hkbCharacterSetup;
-extern const void * RTTI_hkbProjectData;
-extern const void * RTTI_hkbCharacterData;
-extern const void * RTTI_hkpCharacterControllerCinfo;
-extern const void * RTTI_hkpCharacterProxyCinfo;
-extern const void * RTTI_hkLocalFrameCollector;
-extern const void * RTTI_hkbClosestLocalFrameCollector;
-extern const void * RTTI_hkbDefaultRaycastInterface;
-extern const void * RTTI_hkbSymbolIdMap;
-extern const void * RTTI_hkVtableClassRegistry;
-extern const void * RTTI_hkClassNameRegistry;
-extern const void * RTTI_hkTypeInfoRegistry;
-extern const void * RTTI_hkBuiltinTypeRegistry;
-extern const void * RTTI_hkDynamicClassNameRegistry;
-extern const void * RTTI_hkDefaultClassNameRegistry;
-extern const void * RTTI_hkDefaultBuiltinTypeRegistry;
-extern const void * RTTI_hkObjectCopier;
-extern const void * RTTI_hkStaticClassNameRegistry;
-extern const void * RTTI_hkResourceContainer;
-extern const void * RTTI_hkResourceMap;
-extern const void * RTTI_hkResourceBase;
-extern const void * RTTI_hkResourceHandle;
-extern const void * RTTI_hkMemoryResourceHandle;
-extern const void * RTTI_hkMemoryResourceContainer;
-extern const void * RTTI_hkContainerResourceMap;
-extern const void * RTTI_hkpShapeContainer;
-extern const void * RTTI_hkpSingleShapeContainer;
-extern const void * RTTI_hkpBvShape;
-extern const void * RTTI_hkpConvexShape;
-extern const void * RTTI_hkpSphereRepShape;
-extern const void * RTTI_hkpBoxShape;
-extern const void * RTTI_hkpConvexTransformShapeBase;
-extern const void * RTTI_hkpHeightFieldShape;
-extern const void * RTTI_hkpPlaneShape;
-extern const void * RTTI_hkpSphereShape;
-extern const void * RTTI_hkpCapsuleShape;
-extern const void * RTTI_hkpCollidableCollidableFilter;
-extern const void * RTTI_hkpRayCollidableFilter;
-extern const void * RTTI_hkpShapeCollectionFilter;
-extern const void * RTTI_hkpRayShapeCollectionFilter;
-extern const void * RTTI_hkpGroupFilter;
-extern const void * RTTI_hkpCollisionFilter;
-extern const void * RTTI_hkpConvexListFilter;
-extern const void * RTTI_hkpTriangleShape;
-extern const void * RTTI_hkpDefaultConvexListFilter;
-extern const void * RTTI_hkpBvTreeShape;
-extern const void * RTTI_hkpCollisionFilterList;
-extern const void * RTTI_hkpNullCollisionFilter;
-extern const void * RTTI_hkpMoppModifier;
-extern const void * RTTI_hkpRemoveTerminalsMoppModifier;
-extern const void * RTTI_hkMoppBvTreeShapeBase;
-extern const void * RTTI_hkpMoppBvTreeShape;
-extern const void * RTTI_hkpConvexTransformShape;
-extern const void * RTTI_hkpConvexTranslateShape;
-extern const void * RTTI_hkpConvexVerticesConnectivity;
-extern const void * RTTI_hkpConvexListShape;
-extern const void * RTTI_hkpMultiSphereShape;
-extern const void * RTTI_hkpMultiRayShape;
-extern const void * RTTI_hkpTransformShape;
-extern const void * RTTI_hkpShapeInfo;
-extern const void * RTTI_hkpSampledHeightFieldShape;
-extern const void * RTTI_hkpCompressedSampledHeightFieldShape;
-extern const void * RTTI_hkpStorageSampledHeightFieldShape;
-extern const void * RTTI_hkpShapeCollection;
-extern const void * RTTI_hkpTriSampledHeightFieldCollection;
-extern const void * RTTI_hkpTriSampledHeightFieldBvTreeShape;
-extern const void * RTTI_hkpListShape;
-extern const void * RTTI_hkpRemoveTerminalsMoppModifier2;
-extern const void * RTTI_hkpCylinderShape;
-extern const void * RTTI_hkpWorldObject;
-extern const void * RTTI_hkpMotion;
-extern const void * RTTI_hkpMaxSizeMotion;
-extern const void * RTTI_hkpKeyframedRigidMotion;
-extern const void * RTTI_hkpEntity;
-extern const void * RTTI_hkpFixedRigidMotion;
-extern const void * RTTI_hkpSphereMotion;
-extern const void * RTTI_hkpBoxMotion;
-extern const void * RTTI_hkpThinBoxMotion;
-extern const void * RTTI_hkpCharacterMotion;
-extern const void * RTTI_hkpRigidBody;
-extern const void * RTTI_hkpPhantom;
-extern const void * RTTI_hkpAabbPhantom;
-extern const void * RTTI_hkpConstraintData;
-extern const void * RTTI_hkpPrismaticConstraintData;
-extern const void * RTTI_hkpAction;
-extern const void * RTTI_hkpUnaryAction;
-extern const void * RTTI_hkpConstraintInstance;
-extern const void * RTTI_hkpConstraintMotor;
-extern const void * RTTI_hkpConstraintListener;
-extern const void * RTTI_hkWorldMemoryAvailableWatchDog;
-extern const void * RTTI_hkpPhysicsSystem;
-extern const void * RTTI_hkpSimulation;
-extern const void * RTTI_hkpPairCollisionFilter;
-extern const void * RTTI_hkpConstraintCollisionFilter;
-extern const void * RTTI_hkpBallAndSocketConstraintData;
-extern const void * RTTI_hkpCogWheelConstraintData;
-extern const void * RTTI_hkpHingeConstraintData;
-extern const void * RTTI_hkpLimitedHingeConstraintData;
-extern const void * RTTI_hkpParametricCurve;
-extern const void * RTTI_hkpLinearParametricCurve;
-extern const void * RTTI_hkpPointToPathConstraintData;
-extern const void * RTTI_hkpPointToPlaneConstraintData;
-extern const void * RTTI_hkpRackAndPinionConstraintData;
-extern const void * RTTI_hkpRagdollConstraintData;
-extern const void * RTTI_hkpStiffSpringConstraintData;
-extern const void * RTTI_hkpWheelConstraintData;
-extern const void * RTTI_hkpRotationalConstraintData;
-extern const void * RTTI_hkpHingeLimitsData;
-extern const void * RTTI_hkpRagdollLimitsData;
-extern const void * RTTI_hkpConstraintChainInstanceAction;
-extern const void * RTTI_hkpConstraintChainInstance;
-extern const void * RTTI_hkpLimitedForceConstraintMotor;
-extern const void * RTTI_hkpCallbackConstraintMotor;
-extern const void * RTTI_hkpPositionConstraintMotor;
-extern const void * RTTI_hkpSpringDamperConstraintMotor;
-extern const void * RTTI_hkpVelocityConstraintMotor;
-extern const void * RTTI_hkpPulleyConstraintData;
-extern const void * RTTI_hkpShapePhantom;
-extern const void * RTTI_hkpCachingShapePhantom;
-extern const void * RTTI_hkpSimpleShapePhantom;
-extern const void * RTTI_hkpDefaultWorldMemoryWatchDog;
-extern const void * RTTI_hkpWorld;
-extern const void * RTTI_hkpBroadPhaseCastCollector;
-extern const void * RTTI_hkpContactMgr;
-extern const void * RTTI_hkpContactMgrFactory;
-extern const void * RTTI_hkpNullContactMgr;
-extern const void * RTTI_hkpNullContactMgrFactory;
-extern const void * RTTI_hkpBroadPhaseListener;
-extern const void * RTTI_hkpSimpleWorldRayCaster;
-extern const void * RTTI_hkpWorldRayCaster;
-extern const void * RTTI_hkpWorldLinearCaster;
-extern const void * RTTI_hkpPhantomBroadPhaseListener;
-extern const void * RTTI_hkpBroadPhaseBorderListener;
-extern const void * RTTI_hkpCollisionCallbackUtil;
-extern const void * RTTI_hkpConstraintOwner;
-extern const void * RTTI_hkpBreakableConstraintData;
-extern const void * RTTI_hkpConstraintChainData;
-extern const void * RTTI_hkpBallSocketChainData;
-extern const void * RTTI_hkpStiffSpringChainData;
-extern const void * RTTI_hkpGenericConstraintData;
-extern const void * RTTI_hkpMalleableConstraintData;
-extern const void * RTTI_hkpEntityEntityBroadPhaseListener;
-extern const void * RTTI_hkpSimulationIsland;
-extern const void * RTTI_hkpBroadPhaseBorder;
-extern const void * RTTI_hkpPhantomOverlapListener;
-extern const void * RTTI_hkpWorldDeletionListener;
-extern const void * RTTI_hkpSimpleConstraintContactMgr;
-extern const void * RTTI_hkpSimpleContactConstraintData;
-extern const void * RTTI_hkpDynamicsContactMgr;
-extern const void * RTTI_hkpSimpleConstraintContactMgr__Factory;
-extern const void * RTTI_hkpReportContactMgr;
-extern const void * RTTI_hkpReportContactMgr__Factory;
-extern const void * RTTI_hkpWorldMaintenanceMgr;
-extern const void * RTTI_hkpDefaultWorldMaintenanceMgr;
-extern const void * RTTI_hkpWorldExtension;
-extern const void * RTTI_hkpEndOfStepCallbackUtil;
-extern const void * RTTI_hkpConvexPieceStreamData;
-extern const void * RTTI_hkpCharacterContext;
-extern const void * RTTI_hkPackfileWriter__AddObjectListener;
-extern const void * RTTI_hkpHavokSnapshot__ConvertListener;
-extern const void * RTTI_hkpCharacterStateManager;
-extern const void * RTTI_hkpCharacterRigidBody;
-extern const void * RTTI_hkpMouseSpringAction;
-extern const void * RTTI_hkpBinaryAction;
-extern const void * RTTI_hkpAngularDashpotAction;
-extern const void * RTTI_hkpDashpotAction;
-extern const void * RTTI_hkpMotorAction;
-extern const void * RTTI_hkpReorientAction;
-extern const void * RTTI_hkpSpringAction;
-extern const void * RTTI_hkpCharacterRigidBodyCinfo;
-extern const void * RTTI_hkpPoweredChainMapper;
-extern const void * RTTI_hkpConstrainedSystemFilter;
-extern const void * RTTI_hkpDisableEntityCollisionFilter;
-extern const void * RTTI_hkpGroupCollisionFilter;
-extern const void * RTTI_hkpSerializedAgentNnEntry;
-extern const void * RTTI_hkpPhysicsSystemWithContacts;
-extern const void * RTTI_hkpSerializedDisplayMarker;
-extern const void * RTTI_hkpSerializedDisplayMarkerList;
-extern const void * RTTI_hkpSerializedDisplayRbTransforms;
-extern const void * RTTI_hkpDisplayBindingData;
-extern const void * RTTI_hkpDisplayBindingData__RigidBody;
-extern const void * RTTI_hkpDisplayBindingData__PhysicsSystem;
-extern const void * RTTI_hkpPhysicsData;
-extern const void * RTTI_hkpCharacterProxy;
-extern const void * RTTI_hkpTriggerVolume;
-extern const void * RTTI_hkpFirstPersonGun;
-extern const void * RTTI_hkpBallGun;
-extern const void * RTTI_hkpGravityGun;
-extern const void * RTTI_hkpMountedBallGun;
-extern const void * RTTI_hkpProjectileGun;
-extern const void * RTTI_hkpGunProjectile;
-extern const void * RTTI_hkpSaveContactPointsUtil__EntitySelector;
-extern const void * RTTI_BSLimbIKModifierCastInfo;
-extern const void * RTTI_BSILimbIKModifierSingleton;
-extern const void * RTTI_BGSGamebryoSequenceGenerator;
-extern const void * RTTI_BSIStateManagerModifier__BSIStateManagerStateListener;
-extern const void * RTTI_BSSynchronizedClipGenerator;
-extern const void * RTTI_BSSynchronizedClipGenerator__hkbDefaultSynchronizedScene;
-extern const void * RTTI_BSIDirectAtModifierSingleton;
-extern const void * RTTI_BSIPassByTargetTriggerModifierSingleton;
-extern const void * RTTI_BSIRagdollContactListenerModifierSingleton;
-extern const void * RTTI_BSRagdollContactListenerModifier;
-extern const void * RTTI_BSIStateManagerModifier;
-extern const void * RTTI_BSBoneSwitchGenerator;
-extern const void * RTTI_BSBoneSwitchGeneratorBoneData;
-extern const void * RTTI_BSCyclicBlendTransitionGenerator;
-extern const void * RTTI_BSOffsetAnimationGenerator;
-extern const void * RTTI_BSiStateTaggingGenerator;
-extern const void * RTTI_BSComputeAddBoneAnimModifier;
-extern const void * RTTI_BSDecomposeVectorModifier;
-extern const void * RTTI_BSDirectAtModifier;
-extern const void * RTTI_BSDistTriggerModifier;
-extern const void * RTTI_BSEventEveryNEventsModifier;
-extern const void * RTTI_BSEventOnDeactivateModifier;
-extern const void * RTTI_BSEventOnFalseToTrueModifier;
-extern const void * RTTI_BSGetTimeStepModifier;
-extern const void * RTTI_BSInterpValueModifier;
-extern const void * RTTI_BSIsActiveModifier;
-extern const void * RTTI_BSLimbIKModifier;
-extern const void * RTTI_BSLookAtModifier;
-extern const void * RTTI_BSModifyOnceModifier;
-extern const void * RTTI_BSPassByTargetTriggerModifier;
-extern const void * RTTI_BSSpeedSamplerModifier;
-extern const void * RTTI_BSTimerModifier;
-extern const void * RTTI_BSTweenerModifier;
-extern const void * RTTI_hkaAnimationBinding;
-extern const void * RTTI_BSSynchronizedClipGeneratorUtils__FindEventFunctor;
-extern const void * RTTI_BSAnimationGraphManager;
-extern const void * RTTI_hkLoader;
-extern const void * RTTI_BShkbHkxDB__ProjectDBData;
-extern const void * RTTI_BShkbHkxDB__DBData;
-extern const void * RTTI_BShkbHkxDB__QueuedHandles;
-extern const void * RTTI_BShkbHkxDB__StreamAdaptor;
-extern const void * RTTI_hkaSkeleton;
-extern const void * RTTI_BSIRagdollDriver;
-extern const void * RTTI_BSAnimationGraphLoadScrapper;
-extern const void * RTTI_BShkbAnimationGraph;
-extern const void * RTTI_bhkIWorldStepListener;
-extern const void * RTTI_BSISpeedSamplerDB;
-extern const void * RTTI_BSSpeedSamplerDBManager;
-extern const void * RTTI_BShkVisibilityController;
-extern const void * RTTI_BShkbUtils__GraphInspectionFunctor;
-extern const void * RTTI_hkbAssetLoader;
-extern const void * RTTI_BShkbUtils__ProspectiveEventClipAddingFunctor;
-extern const void * RTTI_IAnimationClipLoaderSingleton;
-extern const void * RTTI_AnimationFileManagerSingleton;
-extern const void * RTTI_hkaSkeletonMapper;
-extern const void * RTTI_hkaRagdollInstance;
-extern const void * RTTI_hkaDefaultAnimationControl;
-extern const void * RTTI_hkaDefaultAnimationControlMapperData;
-extern const void * RTTI_hkaAnimatedReferenceFrame;
-extern const void * RTTI_hkaAnimation;
-extern const void * RTTI_hkaInterleavedUncompressedAnimation;
-extern const void * RTTI_hkaQuantizedAnimation;
-extern const void * RTTI_hkaSplineCompressedAnimation;
-extern const void * RTTI_hkaAnimationPreviewColorContainer;
-extern const void * RTTI_hkaDefaultAnimatedReferenceFrame;
-extern const void * RTTI_hkaFootstepAnalysisInfoContainer;
-extern const void * RTTI_hkaBoneAttachment;
-extern const void * RTTI_hkaAnimationContainer;
-extern const void * RTTI_hkaMirroredSkeleton;
-extern const void * RTTI_hkaAnimationControl;
-extern const void * RTTI_hkpCollisionDispatcher;
-extern const void * RTTI_hkpNullBroadPhaseListener;
-extern const void * RTTI_hkpCollisionAgent;
-extern const void * RTTI_hkpNullAgent;
-extern const void * RTTI_hkp3AxisSweep;
-extern const void * RTTI_hkpBroadPhase;
-extern const void * RTTI_hkTraceStream;
-extern const void * RTTI_hkpStorageMeshShape;
-extern const void * RTTI_hkpStorageMeshShape__SubpartStorage;
-extern const void * RTTI_hkpStorageExtendedMeshShape;
-extern const void * RTTI_hkpStorageExtendedMeshShape__MeshSubpartStorage;
-extern const void * RTTI_hkpStorageExtendedMeshShape__ShapeSubpartStorage;
-extern const void * RTTI_hkTagfileWriter;
-extern const void * RTTI_hkTagfileWriter__AddDataObjectListener;
-extern const void * RTTI_hkTagfileReader;
-extern const void * RTTI_hkBinaryTagfileWriter;
-extern const void * RTTI_hkXmlTagfileReader;
-extern const void * RTTI_hkXmlTagfileWriter;
-extern const void * RTTI_hkpFastMeshShape;
-extern const void * RTTI_hkpMapPointsToSubShapeContactMgr;
-extern const void * RTTI_hkpPoweredChainData;
-extern const void * RTTI_hkpConvexVerticesShape;
-extern const void * RTTI_hkResource;
-extern const void * RTTI_BShkbUtils__SaveDataRestoreFunctor;
-extern const void * RTTI_hkpConstraintUtils__CollectConstraintsFilter;
-extern const void * RTTI_hkpEaseConstraintsAction;
-extern const void * RTTI_hkpEaseConstraintsAction__CollectSupportedConstraints;
-extern const void * RTTI_hkpEasePenetrationAction;
-extern const void * RTTI_BSiStateTaggingUtils__BSiStateTaggingStateListener;
-extern const void * RTTI_hkxAnimatedFloat;
-extern const void * RTTI_hkxAnimatedMatrix;
-extern const void * RTTI_hkxAnimatedQuaternion;
-extern const void * RTTI_hkxAnimatedVector;
-extern const void * RTTI_hkxSparselyAnimatedBool;
-extern const void * RTTI_hkxSparselyAnimatedInt;
-extern const void * RTTI_hkxEnum;
-extern const void * RTTI_hkxSparselyAnimatedEnum;
-extern const void * RTTI_hkxSparselyAnimatedString;
-extern const void * RTTI_hkxAttributeHolder;
-extern const void * RTTI_hkxCamera;
-extern const void * RTTI_hkxNode;
-extern const void * RTTI_hkxLight;
-extern const void * RTTI_hkxMaterial;
-extern const void * RTTI_hkxMaterialEffect;
-extern const void * RTTI_hkxMaterialShader;
-extern const void * RTTI_hkxTextureFile;
-extern const void * RTTI_hkxTextureInplace;
-extern const void * RTTI_hkxEdgeSelectionChannel;
-extern const void * RTTI_hkxTriangleSelectionChannel;
-extern const void * RTTI_hkxVertexFloatDataChannel;
-extern const void * RTTI_hkxVertexIntDataChannel;
-extern const void * RTTI_hkxVertexSelectionChannel;
-extern const void * RTTI_hkxVertexVectorDataChannel;
-extern const void * RTTI_hkxIndexBuffer;
-extern const void * RTTI_hkxMeshSection;
-extern const void * RTTI_hkxMesh__UserChannelInfo;
-extern const void * RTTI_hkxNodeSelectionSet;
-extern const void * RTTI_hkxSkinBinding;
-extern const void * RTTI_hkxScene;
-extern const void * RTTI_hkaMeshBinding;
-extern const void * RTTI_hkaFootstepAnalysisInfo;
-extern const void * RTTI_hkpMeshShape;
-extern const void * RTTI_hkpExtendedMeshShape;
-extern const void * RTTI_hkPackfileWriter;
-extern const void * RTTI_hkIstream;
-extern const void * RTTI_hkDataWorld;
-extern const void * RTTI_hkDataObjectImpl;
-extern const void * RTTI_hkDataArrayImpl;
-extern const void * RTTI_hkDataClassImpl;
-extern const void * RTTI_hkDataClassDict;
-extern const void * RTTI_hkDataObjectDict;
-extern const void * RTTI_hkDataWorldDict;
-extern const void * RTTI_hkDataRefCounted;
-extern const void * RTTI_VariableIntArrayImplementation;
-extern const void * RTTI_ByteArrayImplementation;
-extern const void * RTTI_ArrayOfTuplesImplementation;
-extern const void * RTTI_ArrayOfTuplesImplementation__View;
-extern const void * RTTI_RealArrayImplementation;
-extern const void * RTTI_VecArrayImplementation;
-extern const void * RTTI_PointerArrayImplementation;
-extern const void * RTTI_CstringArrayImplementation;
-extern const void * RTTI_StructArrayImplementation;
-extern const void * RTTI_StructArrayImplementation__Object;
-extern const void * RTTI_hkDataClassNative;
-extern const void * RTTI_hkDataWorldNative;
-extern const void * RTTI_hkDataObjectNative;
-extern const void * RTTI_hkDataArrayNative;
-extern const void * RTTI_hkBinaryTagfileReader;
-extern const void * RTTI_hkVersionPatchManager;
-extern const void * RTTI_hkSubStreamWriter;
-extern const void * RTTI_hkBinaryPackfileWriter;
-extern const void * RTTI_hkPooledAllocator;
-extern const void * RTTI_hkTempDetectAllocator;
-extern const void * RTTI_hkSerializeDeprecated;
-extern const void * RTTI_hkpPredGskfAgent;
-extern const void * RTTI_hkpIterativeLinearCastAgent;
-extern const void * RTTI_hkpBoxBoxAgent;
-extern const void * RTTI_hkpSymmetricAgentFlipCollector;
-extern const void * RTTI_hkpSymmetricAgentFlipCastCollector;
-extern const void * RTTI_hkpSymmetricAgentFlipBodyCollector;
-extern const void * RTTI_hkpBvAgent;
-extern const void * RTTI_hkpFlagCdBodyPairCollector;
-extern const void * RTTI_hkpSimpleClosestContactCollector;
-extern const void * RTTI_hkpBvTreeAgent;
-extern const void * RTTI_hkpBvTreeStreamAgent;
-extern const void * RTTI_hkpMoppAgent;
-extern const void * RTTI_hkpPhantomAgent;
-extern const void * RTTI_hkpSphereSphereAgent;
-extern const void * RTTI_hkpSphereCapsuleAgent;
-extern const void * RTTI_hkpSphereTriangleAgent;
-extern const void * RTTI_hkpCapsuleCapsuleAgent;
-extern const void * RTTI_hkpCapsuleTriangleAgent;
-extern const void * RTTI_hkpSphereBoxAgent;
-extern const void * RTTI_hkpMultiSphereTriangleAgent;
-extern const void * RTTI_hkpMultiRayConvexAgent;
-extern const void * RTTI_hkpTransformAgent;
-extern const void * RTTI_hkpListAgent;
-extern const void * RTTI_hkpConvexListAgent;
-extern const void * RTTI_hkpShapeCollectionAgent;
-extern const void * RTTI_hkpMultiSphereAgent;
-extern const void * RTTI_hkpArrayAction;
-extern const void * RTTI_hkAlignSceneToNodeOptions;
-extern const void * RTTI_hkxEnvironment;
-extern const void * RTTI_hkxMaterialShaderSet;
-extern const void * RTTI_hkxVertexBuffer;
-extern const void * RTTI_hkxMesh;
-extern const void * RTTI_hkOffsetOnlyStreamWriter;
-extern const void * RTTI_hkObjectWriter;
-extern const void * RTTI_hkPlatformObjectWriter;
-extern const void * RTTI_hkPlatformObjectWriter__Cache;
-extern const void * RTTI_hkMemoryStreamReader;
-extern const void * RTTI_hkPackfileData;
-extern const void * RTTI_hkObjectResource;
-extern const void * RTTI_hkIArchive;
-extern const void * RTTI_hkParserBuffer;
-extern const void * RTTI_hkXmlStreamParser;
-extern const void * RTTI_hkpGskBaseAgent;
-extern const void * RTTI_hkpGskfAgent;
-extern const void * RTTI_hkXmlLexAnalyzer;
-extern const void * RTTI_BSAudioManagerThread;
-extern const void * RTTI_AudioLoadForPlaybackTask;
-extern const void * RTTI_AudioLoadToCacheTask;
-extern const void * RTTI_BSAudio;
-extern const void * RTTI_BSGameSound;
-extern const void * RTTI_BSNullImplAudio;
-extern const void * RTTI_BSAudioListener;
-extern const void * RTTI_BSNullImplAudioListener;
-extern const void * RTTI_BSNullImplGameSound;
-extern const void * RTTI_BSXAudio2Audio;
-extern const void * RTTI_BSXAudio2AudioListener;
-extern const void * RTTI_BSXAudio2GameSound;
-extern const void * RTTI_BSXAudio2DataSrc;
-extern const void * RTTI_ScrapHeap;
-extern const void * RTTI_BSCoreMessage;
-extern const void * RTTI_BSThread;
-extern const void * RTTI_CompactingStore__Store;
-extern const void * RTTI_CompactingStore__MoveCallback;
-extern const void * RTTI_CompactingStore__NoopMoveCallback;
-extern const void * RTTI_MemoryHeap;
-extern const void * RTTI_UnitTestMemoryHeap;
-extern const void * RTTI_IMemoryHeap;
-extern const void * RTTI_ZeroOverheadHeap;
-extern const void * RTTI_UnitTestZeroOverheadHeap;
-extern const void * RTTI_BSSmallBlockAllocator;
-extern const void * RTTI_BSSmallBlockAllocatorUtil__UserPoolBase;
-extern const void * RTTI_BSStepThread;
-extern const void * RTTI_IMemoryStoreBase;
-extern const void * RTTI_IMemoryStore;
-extern const void * RTTI_AbstractHeap;
-extern const void * RTTI_MouseMoveEvent;
-extern const void * RTTI_CharEvent;
-extern const void * RTTI_DeviceConnectEvent;
-extern const void * RTTI_KinectEvent;
-extern const void * RTTI_BSWin32GamerProfile;
-extern const void * RTTI_BSIInputDevice;
-extern const void * RTTI_BSInputDevice;
-extern const void * RTTI_BSGamepadDevice;
-extern const void * RTTI_BSGamerProfile;
-extern const void * RTTI_BSWin32KeyboardDevice;
-extern const void * RTTI_BSWin32MouseDevice;
-extern const void * RTTI_BSPCGamepadDeviceDelegate;
-extern const void * RTTI_BSPCGamepadDeviceHandler;
-extern const void * RTTI_BSWin32GamepadDevice;
-extern const void * RTTI_BSPCOrbisGamepadDevice;
-extern const void * RTTI_BSKeyboardDevice;
-extern const void * RTTI_BSWin32VirtualKeyboardDevice;
-extern const void * RTTI_BSMouseDevice;
-extern const void * RTTI_BSVirtualKeyboardDevice;
-extern const void * RTTI_NiFile;
-extern const void * RTTI_NiBinaryStream;
-extern const void * RTTI_NiAllocator;
-extern const void * RTTI_BSNiAllocator;
-extern const void * RTTI_NiStandardAllocator;
-extern const void * RTTI_NiSearchPath;
-extern const void * RTTI_NiThread;
-extern const void * RTTI_BSStringPool__IterationCallback;
-extern const void * RTTI_Archive;
-extern const void * RTTI_ArchiveFile;
-extern const void * RTTI_CompressedArchiveFile;
-extern const void * RTTI_BSJobs__JobThread;
-extern const void * RTTI_BSFile;
-extern const void * RTTI_BSSystemFileAsyncFunctor;
-extern const void * RTTI_BSSystemFileStorage;
-extern const void * RTTI_BSTaskletGroupData;
-extern const void * RTTI_BSTaskletManagerCallback;
-extern const void * RTTI_BSTaskletManager;
-extern const void * RTTI_BSSearchPath;
-extern const void * RTTI_BSWin32TaskletManager;
-extern const void * RTTI_BSWin32TaskletGroupData;
-extern const void * RTTI_BSResource__StreamBase;
-extern const void * RTTI_BSResource__Stream;
-extern const void * RTTI_BSResource__AsyncStream;
-extern const void * RTTI_BSResource__ArchiveStream;
-extern const void * RTTI_BSResource__CacheArchiveOp;
-extern const void * RTTI_BSResource__CompressedArchiveStream;
-extern const void * RTTI_BSResource__ArchiveManager;
-extern const void * RTTI_BSResource__IEntryDB;
-extern const void * RTTI_BSResource__IEntryDB__PostFlushNotify;
-extern const void * RTTI_BSResource__LocationTraverser;
-extern const void * RTTI_BSResource__CacheDrive;
-extern const void * RTTI_BSResource__CacheDrive__Impl;
-extern const void * RTTI_BSResource__CacheDrive__Task;
-extern const void * RTTI_NiObject;
-extern const void * RTTI_NiAVObject;
-extern const void * RTTI_NiNode;
-extern const void * RTTI_NiStream;
-extern const void * RTTI_NiStream__BackgroundLoadProcedure;
-extern const void * RTTI_NiObjectNET;
-extern const void * RTTI_NiLight;
-extern const void * RTTI_NiSwitchNode;
-extern const void * RTTI_NiStringsExtraData;
-extern const void * RTTI_NiCamera;
-extern const void * RTTI_BSTriShape;
-extern const void * RTTI_BSSkinnedDecalTriShape;
-extern const void * RTTI_NiTexture;
-extern const void * RTTI_NiSourceTexture;
-extern const void * RTTI_BSFlattenedBoneTree;
-extern const void * RTTI_NiSkinInstance;
-extern const void * RTTI_BSDismemberSkinInstance;
-extern const void * RTTI_NiStringExtraData;
-extern const void * RTTI_NiTimeController;
-extern const void * RTTI_NiExtraData;
-extern const void * RTTI_NiGeometryData;
-extern const void * RTTI_BSGeometry;
-extern const void * RTTI_BSDynamicTriShape;
-extern const void * RTTI_NiPointLight;
-extern const void * RTTI_NiAVObjectPalette;
-extern const void * RTTI_NiDefaultAVObjectPalette;
-extern const void * RTTI_BSResourceNiBinaryStream;
-extern const void * RTTI_NiDirectionalLight;
-extern const void * RTTI_NiCullingProcess;
-extern const void * RTTI_NiParticles;
-extern const void * RTTI_NiSkinPartition;
-extern const void * RTTI_NiVertWeightsExtraData;
-extern const void * RTTI_NiGeometry;
-extern const void * RTTI_NiSkinData;
-extern const void * RTTI_NiShadeProperty;
-extern const void * RTTI_NiAlphaAccumulator;
-extern const void * RTTI_NiAmbientLight;
-extern const void * RTTI_NiBinaryExtraData;
-extern const void * RTTI_NiBooleanExtraData;
-extern const void * RTTI_NiBSPNode;
-extern const void * RTTI_NiColorExtraData;
-extern const void * RTTI_NiFloatExtraData;
-extern const void * RTTI_NiFloatsExtraData;
-extern const void * RTTI_NiFogProperty;
-extern const void * RTTI_NiIntegerExtraData;
-extern const void * RTTI_NiIntegersExtraData;
-extern const void * RTTI_NiParticlesData;
-extern const void * RTTI_NiParticleMeshesData;
-extern const void * RTTI_NiParticleMeshes;
-extern const void * RTTI_NiSpotLight;
-extern const void * RTTI_NiSwitchStringExtraData;
-extern const void * RTTI_NiTriShapeData;
-extern const void * RTTI_NiTriShape;
-extern const void * RTTI_NiTriStripsData;
-extern const void * RTTI_NiTriStrips;
-extern const void * RTTI_NiVectorExtraData;
-extern const void * RTTI_BSLODTriShape;
-extern const void * RTTI_NiAdditionalGeometryData;
-extern const void * RTTI_BSSegmentedTriShape;
-extern const void * RTTI_NiAccumulator;
-extern const void * RTTI_NiBackToFrontAccumulator;
-extern const void * RTTI_NiTriBasedGeomData;
-extern const void * RTTI_NiTriBasedGeom;
-extern const void * RTTI_NiPick__Results;
-extern const void * RTTI_NiCollisionTraversals__IFindIntersections;
-extern const void * RTTI_NiCollisionData;
-extern const void * RTTI_NiBoundingVolume;
-extern const void * RTTI_NiBoxBV;
-extern const void * RTTI_NiCapsuleBV;
-extern const void * RTTI_NiHalfSpaceBV;
-extern const void * RTTI_NiSphereBV;
-extern const void * RTTI_NiUnionBV;
-extern const void * RTTI_NiOBBRoot;
-extern const void * RTTI_NiIntersector;
-extern const void * RTTI_NiBoxSphereIntersector;
-extern const void * RTTI_NiBoxCapsuleIntersector;
-extern const void * RTTI_NiCapsuleCapsuleIntersector;
-extern const void * RTTI_NiCapsuleSphereIntersector;
-extern const void * RTTI_NiCapsuleTriIntersector;
-extern const void * RTTI_NiSphereTriIntersector;
-extern const void * RTTI_NiOBBNode;
-extern const void * RTTI_NiOBBLeaf;
-extern const void * RTTI_NiControllerManager;
-extern const void * RTTI_NiControllerSequence;
-extern const void * RTTI_NiTextKeyMatch;
-extern const void * RTTI_NiMultiTargetTransformController;
-extern const void * RTTI_NiBlendInterpolator;
-extern const void * RTTI_BSMultiTargetTreadTransfController;
-extern const void * RTTI_NiInterpController;
-extern const void * RTTI_NiFloatInterpolator;
-extern const void * RTTI_NiColorInterpolator;
-extern const void * RTTI_NiSingleInterpController;
-extern const void * RTTI_NiTransformInterpolator;
-extern const void * RTTI_NiPosData;
-extern const void * RTTI_NiPathInterpolator;
-extern const void * RTTI_NiBlendTransformInterpolator;
-extern const void * RTTI_NiBlendFloatInterpolator;
-extern const void * RTTI_NiFloatExtraDataController;
-extern const void * RTTI_NiTransformController;
-extern const void * RTTI_NiBlendAccumTransformInterpolator;
-extern const void * RTTI_NiInterpolator;
-extern const void * RTTI_BSBlendTreadTransfInterpolator;
-extern const void * RTTI_NiKeyBasedInterpolator;
-extern const void * RTTI_NiTransformData;
-extern const void * RTTI_NiBlendBoolInterpolator;
-extern const void * RTTI_NiBlendColorInterpolator;
-extern const void * RTTI_NiBlendPoint3Interpolator;
-extern const void * RTTI_NiBlendQuaternionInterpolator;
-extern const void * RTTI_NiBoolData;
-extern const void * RTTI_NiBoolInterpolator;
-extern const void * RTTI_NiBoolTimelineInterpolator;
-extern const void * RTTI_NiBSplineBasisData;
-extern const void * RTTI_NiBSplineData;
-extern const void * RTTI_NiBSplineColorInterpolator;
-extern const void * RTTI_NiBSplineCompColorInterpolator;
-extern const void * RTTI_NiBSplineCompFloatInterpolator;
-extern const void * RTTI_NiBSplineCompPoint3Interpolator;
-extern const void * RTTI_NiBSplineCompTransformInterpolator;
-extern const void * RTTI_NiBSplineFloatInterpolator;
-extern const void * RTTI_NiBSplinePoint3Interpolator;
-extern const void * RTTI_NiBSplineTransformInterpolator;
-extern const void * RTTI_NiColorExtraDataController;
-extern const void * RTTI_NiFloatsExtraDataController;
-extern const void * RTTI_NiFloatsExtraDataPoint3Controller;
-extern const void * RTTI_NiKeyframeManager;
-extern const void * RTTI_NiLightColorController;
-extern const void * RTTI_NiLightDimmerController;
-extern const void * RTTI_NiLookAtController;
-extern const void * RTTI_NiLookAtInterpolator;
-extern const void * RTTI_NiMorphData;
-extern const void * RTTI_NiPathController;
-extern const void * RTTI_NiPoint3Interpolator;
-extern const void * RTTI_NiQuaternionInterpolator;
-extern const void * RTTI_NiFloatController;
-extern const void * RTTI_NiRollController;
-extern const void * RTTI_NiRotData;
-extern const void * RTTI_NiSequence;
-extern const void * RTTI_NiSequenceStreamHelper;
-extern const void * RTTI_NiStringPalette;
-extern const void * RTTI_NiTextKeyExtraData;
-extern const void * RTTI_NiUVData;
-extern const void * RTTI_NiVisController;
-extern const void * RTTI_BSAnimNotes;
-extern const void * RTTI_BSAnimNote;
-extern const void * RTTI_BSGrabIKNote;
-extern const void * RTTI_BSLookIKNote;
-extern const void * RTTI_BSRotAccumTransfInterpolator;
-extern const void * RTTI_BSTreadTransfInterpolator;
-extern const void * RTTI_BSFrustumFOVController;
-extern const void * RTTI_NiExtraDataController;
-extern const void * RTTI_NiBSplineInterpolator;
-extern const void * RTTI_NiPoint3InterpController;
-extern const void * RTTI_NiFloatInterpController;
-extern const void * RTTI_NiBoolInterpController;
-extern const void * RTTI_NiParticleSystem;
-extern const void * RTTI_NiPSysEmitterCtlr;
-extern const void * RTTI_NiPSysGravityModifier;
-extern const void * RTTI_BSPSysHavokUpdateModifier;
-extern const void * RTTI_NiMeshParticleSystem;
-extern const void * RTTI_NiPSysCylinderEmitter;
-extern const void * RTTI_BSStripParticleSystem;
-extern const void * RTTI_NiPSysEmitter;
-extern const void * RTTI_NiPSysModifierCtlr;
-extern const void * RTTI_NiPSysModifier;
-extern const void * RTTI_NiPSysMeshUpdateModifier;
-extern const void * RTTI_NiPSysUpdateCtlr;
-extern const void * RTTI_NiMeshPSysData;
-extern const void * RTTI_NiPSysAirFieldAirFrictionCtlr;
-extern const void * RTTI_NiPSysAirFieldInheritVelocityCtlr;
-extern const void * RTTI_NiPSysAirFieldModifier;
-extern const void * RTTI_NiPSysAirFieldSpreadCtlr;
-extern const void * RTTI_NiPSysAgeDeathModifier;
-extern const void * RTTI_NiPSysBombModifier;
-extern const void * RTTI_NiPSysBoundUpdateModifier;
-extern const void * RTTI_NiPSysBoxEmitter;
-extern const void * RTTI_NiPSysColliderManager;
-extern const void * RTTI_NiPSysColorModifier;
-extern const void * RTTI_NiPSysData;
-extern const void * RTTI_NiPSysDragFieldModifier;
-extern const void * RTTI_NiPSysDragModifier;
-extern const void * RTTI_NiPSysEmitterCtlrData;
-extern const void * RTTI_NiPSysEmitterDeclinationCtlr;
-extern const void * RTTI_NiPSysEmitterDeclinationVarCtlr;
-extern const void * RTTI_NiPSysEmitterInitialRadiusCtlr;
-extern const void * RTTI_NiPSysEmitterLifeSpanCtlr;
-extern const void * RTTI_NiPSysEmitterPlanarAngleCtlr;
-extern const void * RTTI_NiPSysEmitterPlanarAngleVarCtlr;
-extern const void * RTTI_NiPSysEmitterSpeedCtlr;
-extern const void * RTTI_NiPSysFieldAttenuationCtlr;
-extern const void * RTTI_NiPSysFieldMagnitudeCtlr;
-extern const void * RTTI_NiPSysFieldMaxDistanceCtlr;
-extern const void * RTTI_NiPSysGravityFieldModifier;
-extern const void * RTTI_NiPSysGravityStrengthCtlr;
-extern const void * RTTI_NiPSysGrowFadeModifier;
-extern const void * RTTI_NiPSysInitialRotAngleCtlr;
-extern const void * RTTI_NiPSysInitialRotAngleVarCtlr;
-extern const void * RTTI_NiPSysInitialRotSpeedCtlr;
-extern const void * RTTI_NiPSysInitialRotSpeedVarCtlr;
-extern const void * RTTI_NiPSysMeshEmitter;
-extern const void * RTTI_NiPSysModifierActiveCtlr;
-extern const void * RTTI_NiPSysPlanarCollider;
-extern const void * RTTI_NiPSysPositionModifier;
-extern const void * RTTI_NiPSysRadialFieldModifier;
-extern const void * RTTI_NiPSysResetOnLoopCtlr;
-extern const void * RTTI_NiPSysRotationModifier;
-extern const void * RTTI_NiPSysSpawnModifier;
-extern const void * RTTI_NiPSysSphereEmitter;
-extern const void * RTTI_NiPSysSphericalCollider;
-extern const void * RTTI_NiPSysTurbulenceFieldModifier;
-extern const void * RTTI_NiPSysVortexFieldModifier;
-extern const void * RTTI_BSStripPSysData;
-extern const void * RTTI_BSPSysRecycleBoundModifier;
-extern const void * RTTI_BSPSysInheritVelocityModifier;
-extern const void * RTTI_NiPSysVolumeEmitter;
-extern const void * RTTI_NiPSysModifierFloatCtlr;
-extern const void * RTTI_NiPSysFieldModifier;
-extern const void * RTTI_NiPSysModifierBoolCtlr;
-extern const void * RTTI_NiPSysCollider;
-extern const void * RTTI_BSTaskManager;
-extern const void * RTTI_BSTaskManagerThread;
-extern const void * RTTI_BSTaskThread;
-extern const void * RTTI_IOManager;
-extern const void * RTTI_BSResource__IEntryDB__NotifyLoadDone;
-extern const void * RTTI_QueuedFile;
-extern const void * RTTI_QueuedNamedFile;
-extern const void * RTTI_BSQueuedResourceCollectionBase;
-extern const void * RTTI_BSMultiBound;
-extern const void * RTTI_BSMultiBoundRoom;
-extern const void * RTTI_BSReference;
-extern const void * RTTI_BSNodeReferences;
-extern const void * RTTI_BSXFlags;
-extern const void * RTTI_BSValueNode;
-extern const void * RTTI_ITextureDB;
-extern const void * RTTI_BSTextureDB__QueuedHandles;
-extern const void * RTTI_BSWindModifier;
-extern const void * RTTI_BSTempNode;
-extern const void * RTTI_BSPortalGraph;
-extern const void * RTTI_BSPortalGraphEntry;
-extern const void * RTTI_BSOcclusionShape;
-extern const void * RTTI_MessageHandler;
-extern const void * RTTI_BSRangeNode;
-extern const void * RTTI_BSBlastNode;
-extern const void * RTTI_BSDebrisNode;
-extern const void * RTTI_BSDamageStage;
-extern const void * RTTI_PArrayPoint;
-extern const void * RTTI_BSPSysArrayEmitter;
-extern const void * RTTI_BSInstanceTriShape;
-extern const void * RTTI_BSMultiStreamInstanceTriShape;
-extern const void * RTTI_BSIStream;
-extern const void * RTTI_BSOStream;
-extern const void * RTTI_BSMultiBoundShape;
-extern const void * RTTI_BSOcclusionBox;
-extern const void * RTTI_BSOcclusionPlane;
-extern const void * RTTI_BSPortalSharedNode;
-extern const void * RTTI_BSBodyMorphOffsetsExtraData;
-extern const void * RTTI_BSBehaviorGraphExtraData;
-extern const void * RTTI_NiBSBoneLODController;
-extern const void * RTTI_BSCullingProcess;
-extern const void * RTTI_BSParticleSystemManager;
-extern const void * RTTI_BSFurnitureMarkerNode;
-extern const void * RTTI_BSBound;
-extern const void * RTTI_BSMultiBoundNode;
-extern const void * RTTI_BSBoneMap;
-extern const void * RTTI_BSAnimInteractionMarker;
-extern const void * RTTI_BSSceneGraph;
-extern const void * RTTI_BSPSysMultiTargetEmitterCtlr;
-extern const void * RTTI_BSSubIndexTriShape;
-extern const void * RTTI_BSDistantObjectLargeRefExtraData;
-extern const void * RTTI_BSMasterParticleSystem;
-extern const void * RTTI_BSProceduralLightningTasklet;
-extern const void * RTTI_BSProceduralLightningController;
-extern const void * RTTI_BSInvMarker;
-extern const void * RTTI_BSBoneLODExtraData;
-extern const void * RTTI_BSDecalPlacementVectorExtraData;
-extern const void * RTTI_BSParentVelocityModifier;
-extern const void * RTTI_BSWArray;
-extern const void * RTTI_BSMultiBoundCapsule;
-extern const void * RTTI_BSPSysStripUpdateModifier;
-extern const void * RTTI_BSPSysSubTexModifier;
-extern const void * RTTI_BSPSysScaleModifier;
-extern const void * RTTI_BSLagBoneController;
-extern const void * RTTI_BSNonUniformScaleExtraData;
-extern const void * RTTI_BSNiNode;
-extern const void * RTTI_BSTableCurve;
-extern const void * RTTI_bhkWorldObject;
-extern const void * RTTI_ahkpWorld;
-extern const void * RTTI_bhkWorld__bhkConstraintProjector;
-extern const void * RTTI_bhkWorld;
-extern const void * RTTI_bhkWorldCinfo;
-extern const void * RTTI_bhkTaskletManagerCallback;
-extern const void * RTTI_bhkOnStartupCallback;
-extern const void * RTTI_bhkOnExitCallback;
-extern const void * RTTI_hkGenericConstraintCinfo;
-extern const void * RTTI_hkStiffSpringConstraintCinfo;
-extern const void * RTTI_bhkStiffSpringConstraint;
-extern const void * RTTI_hkBallAndSocketConstraintCinfo;
-extern const void * RTTI_hkFixedConstraintCinfo;
-extern const void * RTTI_bhkWindListener;
-extern const void * RTTI_hkpAllRayHitCollector;
-extern const void * RTTI_bhkRagdollPenetrationUtil;
-extern const void * RTTI_hkaRagdollRaycastInterface;
-extern const void * RTTI_hkpCharacterState;
-extern const void * RTTI_bhkCharacterState;
-extern const void * RTTI_bhkShapeCollection;
-extern const void * RTTI_bhkCharacterController;
-extern const void * RTTI_bhkCollisionBox;
-extern const void * RTTI_bhkICharOrientationController;
-extern const void * RTTI_bhkCharacterControllerCinfo;
-extern const void * RTTI_bhkCharacterStateClimbing;
-extern const void * RTTI_bhkCharacterStateFlying;
-extern const void * RTTI_bhkListShape;
-extern const void * RTTI_bhkNiCollisionObject;
-extern const void * RTTI_bhkRagdollShareData;
-extern const void * RTTI_bhkRagdollController;
-extern const void * RTTI_bhkCollisionFilter;
-extern const void * RTTI_bhkAttachmentCollisionObject;
-extern const void * RTTI_bhkLimitedHingeConstraint;
-extern const void * RTTI_WeaponObject;
-extern const void * RTTI_hkLimitedHingeConstraintCinfo;
-extern const void * RTTI_bhkRigidBodyT;
-extern const void * RTTI_bhkWorldM;
-extern const void * RTTI_bhkRefObject;
-extern const void * RTTI_hkNiTriStripsShape;
-extern const void * RTTI_hkNormalTriangleShape;
-extern const void * RTTI_hkPackedNiTriStripsData;
-extern const void * RTTI_hkPackedNiTriStripsShape;
-extern const void * RTTI_bhkCapsuleShape;
-extern const void * RTTI_bhkNiTriStripsShape;
-extern const void * RTTI_bhkPackedNiTriStripsShape;
-extern const void * RTTI_bhkBlendCollisionObject;
-extern const void * RTTI_hkAvoidBox;
-extern const void * RTTI_bhkAvoidBox;
-extern const void * RTTI_ahkpMalleableConstraintData;
-extern const void * RTTI_bhkMalleableConstraint;
-extern const void * RTTI_hkMalleableConstraintCinfo;
-extern const void * RTTI_hkBSHeightFieldShape;
-extern const void * RTTI_hkProductFeatures;
-extern const void * RTTI_bhkCachingShapePhantom;
-extern const void * RTTI_hkpCharacterProxyListener;
-extern const void * RTTI_bhkCharacterProxyCinfo;
-extern const void * RTTI_bhkCharacterProxy;
-extern const void * RTTI_bhkCharProxyController;
-extern const void * RTTI_bhkCharProxyControllerCinfo;
-extern const void * RTTI_hkpCharacterRigidBodyListener;
-extern const void * RTTI_bhkCharacterRigidBodyCinfo;
-extern const void * RTTI_bhkCharacterRigidBody;
-extern const void * RTTI_bhkCharRigidBodyControllerCinfo;
-extern const void * RTTI_bhkCharRigidBodyController;
-extern const void * RTTI_bhkBallAndSocketConstraint;
-extern const void * RTTI_bhkRagdollTemplateData;
-extern const void * RTTI_bhkRagdollTemplate;
-extern const void * RTTI_hkRagdollConstraintCinfo;
-extern const void * RTTI_bhkRagdollConstraint;
-extern const void * RTTI_hkpSafeEaseConstraintsAction;
-extern const void * RTTI_bhkBipedOrientationController;
-extern const void * RTTI_hkThreadMemory;
-extern const void * RTTI_bhkMemorySystem;
-extern const void * RTTI_hkpSuspendInactiveAgentsUtil;
-extern const void * RTTI_bhkCompressedMeshShapeData;
-extern const void * RTTI_bhkCompressedMeshShape;
-extern const void * RTTI_bhkConvexSweepShape;
-extern const void * RTTI_bhkConvexTransformShape;
-extern const void * RTTI_bhkConvexTranslateShape;
-extern const void * RTTI_bhkConvexVerticesShape;
-extern const void * RTTI_bhkCylinderShape;
-extern const void * RTTI_bhkMultiSphereShape;
-extern const void * RTTI_bhkHeightFieldShape;
-extern const void * RTTI_bhkPlaneShape;
-extern const void * RTTI_bhkTriangleShape;
-extern const void * RTTI_hkScaledMoppBvTreeShape;
-extern const void * RTTI_bhkMoppBvTreeShape;
-extern const void * RTTI_bhkTransformShape;
-extern const void * RTTI_hkConstraintChainCinfo;
-extern const void * RTTI_bhkConstraintChain;
-extern const void * RTTI_hkBallSocketChainCinfo;
-extern const void * RTTI_bhkBallSocketConstraintChain;
-extern const void * RTTI_bhkGroupConstraint;
-extern const void * RTTI_hkHingeLimitsConstraintCinfo;
-extern const void * RTTI_bhkHingeLimitsConstraint;
-extern const void * RTTI_bhkGenericConstraint;
-extern const void * RTTI_bhkFixedConstraint;
-extern const void * RTTI_hkRagdollLimitsConstraintCinfo;
-extern const void * RTTI_bhkRagdollLimitsConstraint;
-extern const void * RTTI_hkWheelConstraintCinfo;
-extern const void * RTTI_bhkWheelConstraint;
-extern const void * RTTI_ahkpBreakableConstraintData;
-extern const void * RTTI_hkBreakableConstraintCinfo;
-extern const void * RTTI_bhkBreakableConstraint;
-extern const void * RTTI_bhkBinaryAction;
-extern const void * RTTI_bhkAngularDashpotAction;
-extern const void * RTTI_bhkDashpotAction;
-extern const void * RTTI_bhkLiquidAction;
-extern const void * RTTI_bhkMotorAction;
-extern const void * RTTI_bhkOrientHingedBodyAction;
-extern const void * RTTI_bhkSpringAction;
-extern const void * RTTI_bhkBlendController;
-extern const void * RTTI_bhkExtraData;
-extern const void * RTTI_bhkPoseArray;
-extern const void * RTTI_hkaDetectRagdollPenetration;
-extern const void * RTTI_bhkCharacterStateInAir;
-extern const void * RTTI_bhkCharacterStateJumping;
-extern const void * RTTI_bhkCharacterStateOnGround;
-extern const void * RTTI_bhkCharacterStateSwimming;
-extern const void * RTTI_hkCharControllerShape;
-extern const void * RTTI_bhkCharControllerShape;
-extern const void * RTTI_bhkQuadOrientationController;
-extern const void * RTTI_hkPointToPathConstraintCinfo;
-extern const void * RTTI_bhkPositionConstraintMotor;
-extern const void * RTTI_bhkVelocityConstraintMotor;
-extern const void * RTTI_bhkSpringDamperConstraintMotor;
-extern const void * RTTI_hkbCameraShakeEventPayload;
-extern const void * RTTI_hkbParticleSystemEventPayload;
-extern const void * RTTI_hkbStateChooser;
-extern const void * RTTI_hkbTestStateChooser;
-extern const void * RTTI_hkbSimulationControlCommand;
-extern const void * RTTI_hkbCharacterControlCommand;
-extern const void * RTTI_hkbRaiseEventCommand;
-extern const void * RTTI_hkbSetWordVariableCommand;
-extern const void * RTTI_hkbSetLocalTimeOfClipGeneratorCommand;
-extern const void * RTTI_hkbSetBehaviorCommand;
-extern const void * RTTI_hkbSetNodePropertyCommand;
-extern const void * RTTI_hkbCharacterAddedInfo;
-extern const void * RTTI_hkbCharacterInfo;
-extern const void * RTTI_hkbCharacterSteppedInfo;
-extern const void * RTTI_hkbCharacterSkinInfo;
-extern const void * RTTI_hkbBehaviorInfo;
-extern const void * RTTI_hkbBehaviorEventsInfo;
-extern const void * RTTI_hkbEventRaisedInfo;
-extern const void * RTTI_hkbSimulationStateInfo;
-extern const void * RTTI_hkbLinkedSymbolInfo;
-extern const void * RTTI_hkbAuxiliaryNodeInfo;
-extern const void * RTTI_hkbBehaviorGraphInternalStateInfo;
-extern const void * RTTI_hkpHeightFieldAgent;
-extern const void * RTTI_hkHeightFieldRayForwardingCollector;
-extern const void * RTTI_hkpContinuousSimulation;
-extern const void * RTTI_hkpMultiThreadedSimulation;
-extern const void * RTTI_hkpMultiThreadedSimulation__MtEntityEntityBroadPhaseListener;
-extern const void * RTTI_hkpMultiThreadedSimulation__MtPhantomBroadPhaseListener;
-extern const void * RTTI_hkpMultiThreadedSimulation__MtBroadPhaseBorderListener;
-extern const void * RTTI_bhkCharacterPointCollector;
-extern const void * RTTI_ahkpCharacterProxy;
-extern const void * RTTI_ahkpCharacterRigidBody;
-extern const void * RTTI_hkSolverAllocator;
-extern const void * RTTI_bhkThreadMemorySource;
-extern const void * RTTI_hkJobThreadPool;
-extern const void * RTTI_hkCpuJobThreadPool;
-extern const void * RTTI_hkpCompressedMeshShape;
-extern const void * RTTI_hkLiquidAction;
-extern const void * RTTI_hkOrientHingedBodyAction;
-extern const void * RTTI_hkgpConvexHull;
-extern const void * RTTI_bhkPointToPathConstraint;
-extern const void * RTTI_hkRemoteObjectClientSideListener;
-extern const void * RTTI_hkbBehaviorClient;
-extern const void * RTTI_hkbClientCharacterState;
-extern const void * RTTI_hkpToiResourceMgr;
-extern const void * RTTI_hkpDefaultToiResourceMgr;
-extern const void * RTTI_hkpDeferredConstraintOwner;
-extern const void * RTTI_hkgpIndexedMesh;
-extern const void * RTTI_hkpMoppMediator;
-extern const void * RTTI_hkpMoppShapeMediator;
-extern const void * RTTI_hkpMoppCachedShapeMediator;
-extern const void * RTTI_hkpMoppCostFunction;
-extern const void * RTTI_hkGeometryProcessingInternals__NearestFeaturePolicy;
-extern const void * RTTI_hkProcess;
-extern const void * RTTI_hkRemoteObjectProcess;
-extern const void * RTTI_hkKdTreeCastCollector;
-extern const void * RTTI_hkCpuWorldGetClosestPointsCollector;
-extern const void * RTTI_hkCpuWorldLinearCastCollector;
-extern const void * RTTI_hkpFixedBufferRayHitCollector;
-extern const void * RTTI_hkCpuWorldRayCastCollector;
-extern const void * RTTI_hkpSimpleMeshShape;
-extern const void * RTTI_hkpMoppNodeMgr;
-extern const void * RTTI_hkpMoppSplitter;
-extern const void * RTTI_hkpMoppDefaultSplitter;
-extern const void * RTTI_hkpMoppCodeGenerator;
-extern const void * RTTI_hkpMoppAssembler;
-extern const void * RTTI_hkpMoppDefaultAssembler;
-extern const void * RTTI_hkgpTriangulatorBase;
-extern const void * RTTI_hkgpJobQueue__IJob;
-extern const void * RTTI_hkgpMesh;
-extern const void * RTTI_hkgpMesh__IConvexOverlap;
-extern const void * RTTI_hkgpMesh__IConvexOverlap__IConvexShape;
-extern const void * RTTI_hkgpMesh__TriangleShape;
-extern const void * RTTI_hkgpMesh__ExternShape;
-extern const void * RTTI_hkgpMesh__CollideShapeTriangle;
-extern const void * RTTI_hkgpMesh__NearestFeaturePolicy;
-extern const void * RTTI_hkGskShape;
-extern const void * RTTI_hkgpMeshInternals__SimpleCollector;
-extern const void * RTTI_hkgpMeshInternals__TriangleOverlap;
-extern const void * RTTI_hkgpMeshInternals__RayCaster;
-extern const void * RTTI_IConvexOverlapImpl;
-extern const void * RTTI_IConvexOverlapImpl__ShapeBridge;
-extern const void * RTTI_hkProcessFactory;
-extern const void * RTTI_hkKdTreeBundleCastCollector;
-extern const void * RTTI_hkKdTreeBuildInput__Mediator;
-extern const void * RTTI_hkpCollidableMediator;
-extern const void * RTTI_hkKdTreeCpuBroadphaseBundleCastCollector;
-extern const void * RTTI_BSUIScaleformData;
-extern const void * RTTI_GFile;
-extern const void * RTTI_GMemoryFile;
-extern const void * RTTI_GFxState;
-extern const void * RTTI_GFxFileOpenerBase;
-extern const void * RTTI_BSScaleformFileOpener;
-extern const void * RTTI_ScaleformFile__MemoryFile;
-extern const void * RTTI_IMenu;
-extern const void * RTTI_GSysAllocBase;
-extern const void * RTTI_GSysAllocPaged;
-extern const void * RTTI_GSysMemoryMap;
-extern const void * RTTI_GFxLog;
-extern const void * RTTI_GFxTranslator;
-extern const void * RTTI_GFxZlibSupportBase;
-extern const void * RTTI_GFxZlibSupport;
-extern const void * RTTI_BSScaleformTranslator;
-extern const void * RTTI_BSStreamParserData;
-extern const void * RTTI_BSResourceStreamParser;
-extern const void * RTTI_IDebugText;
-extern const void * RTTI_DebugText;
-extern const void * RTTI_GFxExternalInterface;
-extern const void * RTTI_FxDelegate;
-extern const void * RTTI_FxDelegateHandler__CallbackProcessor;
-extern const void * RTTI_AddCallbackVisitor;
-extern const void * RTTI_RemoveCallbackVisitor;
-extern const void * RTTI_GFxImageLoader;
-extern const void * RTTI_BSScaleformImageLoader;
-extern const void * RTTI_BSScaleformMovieLoadTask;
-extern const void * RTTI_MoviePlayer;
-extern const void * RTTI_BSMusicManager;
-extern const void * RTTI_ITrianglePathSplitter;
-extern const void * RTTI_IPathSmootherRayCast;
-extern const void * RTTI_FindTriangleForLocationWaterFilter;
-extern const void * RTTI_BSPathing;
-extern const void * RTTI_BSPathing__EdgeFoundVisitor;
-extern const void * RTTI_TrianglePathWaterAndLedgeSplitter;
-extern const void * RTTI_BSNavmeshInfoSearch;
-extern const void * RTTI_BSPrecomputedNavmeshInfoSearch;
-extern const void * RTTI_IMovementSetState;
-extern const void * RTTI_IMovementQueryState;
-extern const void * RTTI_MovementAgentActorState;
-extern const void * RTTI_IPathBuilderTracker;
-extern const void * RTTI_BSPathingRequest;
-extern const void * RTTI_NullPathBuilderTracker;
-extern const void * RTTI_IPipelineStageInterface;
-extern const void * RTTI_IMovementPlannerAgent;
-extern const void * RTTI_IMovementPathManagerAgent;
-extern const void * RTTI_IMovementQueryPathFollowing;
-extern const void * RTTI_IMovementQueryPathFollowing__INodeVisitor;
-extern const void * RTTI_IMovementSetPathFollowing;
-extern const void * RTTI_IMovementPlayIdleResult;
-extern const void * RTTI_IPathFollowerAction;
-extern const void * RTTI_ISelectIdleFilter;
-extern const void * RTTI_ICheckEndReachedFunctorMapper;
-extern const void * RTTI_IMovementHandlerAgent;
-extern const void * RTTI_CheckParameterReachedFunctor;
-extern const void * RTTI_CheckGoalReachedFunctor;
-extern const void * RTTI_CheckStoppedMovingFunctor;
-extern const void * RTTI_MovementAgentPathFollowerStandard;
-extern const void * RTTI_MovementSelectIdleUtils__SelectFirstIdleFilter;
-extern const void * RTTI_MovementPathManagerAgent;
-extern const void * RTTI_IMovementSetGoal;
-extern const void * RTTI_IMovementQueryPathingState;
-extern const void * RTTI_IMovementPathManagerDataTracker;
-extern const void * RTTI_MovementPathManagerArbiter;
-extern const void * RTTI_MovementMessageNewPath;
-extern const void * RTTI_MovementPathManagerNullTracker;
-extern const void * RTTI_BSNavmesh;
-extern const void * RTTI_BSNavmeshInfoMap;
-extern const void * RTTI_BSNavmeshInfoMap__IRecursiveVisitor;
-extern const void * RTTI_BSPrecomputedNavmeshInfoPathMap__INavmeshInfoVisitor;
-extern const void * RTTI_BSNavmeshObstacleData;
-extern const void * RTTI_PathingTaskData;
-extern const void * RTTI_MovementArbitrationAverageFloat;
-extern const void * RTTI_MovementArbitrationMaxWeightPoint;
-extern const void * RTTI_MovementArbitrationMaxWeightParameters;
-extern const void * RTTI_NullMovementSelectIdleResult;
-extern const void * RTTI_INavmeshSearchFilterSet;
-extern const void * RTTI_BSNavmeshSearchFilters;
-extern const void * RTTI_BSNavmeshSearch;
-extern const void * RTTI_BSPathingLOSGridCell;
-extern const void * RTTI_BSPathingLOSGrid;
-extern const void * RTTI_BSPathingLOSGridMap;
-extern const void * RTTI_BSPathBuilder;
-extern const void * RTTI_PathSmootherRayCastUsePreferredTris;
-extern const void * RTTI_PathSmootherRayCastUseTrianglePath;
-extern const void * RTTI_BSPathEventManager;
-extern const void * RTTI_IMovementControllerRegisterInterface;
-extern const void * RTTI_IMovementControllerDataTracker;
-extern const void * RTTI_MovementControllerAI;
-extern const void * RTTI_NullMovementState;
-extern const void * RTTI_BSPathingStreamSimpleBufferRead;
-extern const void * RTTI_MovementControllerNullDataTracker;
-extern const void * RTTI_MovementMessageDoor;
-extern const void * RTTI_MovementMessageApproachingDoor;
-extern const void * RTTI_MovementMessageActivateDoor;
-extern const void * RTTI_MovementMessageWarpToLocation;
-extern const void * RTTI_MovementMessageWarpToMultiple;
-extern const void * RTTI_MovementMessageBlocked;
-extern const void * RTTI_MovementMessagePlayIdle;
-extern const void * RTTI_MovementMessageFreezeDirection;
-extern const void * RTTI_MovementMessageSetStaticPath;
-extern const void * RTTI_MovementMessageJump;
-extern const void * RTTI_IMovementQueryDeltas;
-extern const void * RTTI_MovementPostUpdateArbiter;
-extern const void * RTTI_IMovementSetStaticAvoider;
-extern const void * RTTI_IMovementQueryStaticAvoider;
-extern const void * RTTI_MovementPathManagerAgentStaticAvoider;
-extern const void * RTTI_IMovementQueryActorAvoidance;
-extern const void * RTTI_MovementAgentActorAvoider;
-extern const void * RTTI_MovementAgent;
-extern const void * RTTI_MovementArbiter;
-extern const void * RTTI_IMovementSetTranslationControllerType;
-extern const void * RTTI_MovementHandlerAgentTranslationController;
-extern const void * RTTI_IMovementSetCorrectionData;
-extern const void * RTTI_MovementTweenerAgentFixedDelta;
-extern const void * RTTI_MovementHandlerArbiter;
-extern const void * RTTI_MovementHandlerAgent;
-extern const void * RTTI_IMovementPlannerSetArbitration;
-extern const void * RTTI_MovementPlannerArbiter;
-extern const void * RTTI_MovementPlannerAgent;
-extern const void * RTTI_MovementPathManagerAgentLoadedAreaMonitor;
-extern const void * RTTI_IMovementQueryFlight;
-extern const void * RTTI_MovementAgentPathFollowerFlight;
-extern const void * RTTI_MovementAgentPathFollowerVirtual;
-extern const void * RTTI_MovementHandlerAgentAngleController;
-extern const void * RTTI_MovementHandlerAgentAngleGain;
-extern const void * RTTI_MovementHandlerAgentSpeedPassThrough;
-extern const void * RTTI_MovementHandlerAgentAnglePassThrough;
-extern const void * RTTI_MovementHandlerAgentDirectionPassThrough;
-extern const void * RTTI_MovementHandlerAgentStrafing;
-extern const void * RTTI_MovementHandlerAgentLargeDeltaIdle;
-extern const void * RTTI_MovementPlannerAgentNavmeshBounds;
-extern const void * RTTI_MovementPathManagerAgentAvoidBox;
-extern const void * RTTI_IMovementQueryTweener;
-extern const void * RTTI_IMovementSetTweener;
-extern const void * RTTI_IMovementTweenerAgent;
-extern const void * RTTI_MovementTweenerArbiter;
-extern const void * RTTI_MovementTweenerAgent;
-extern const void * RTTI_MovementStateTweener;
-extern const void * RTTI_MovementStateFollowPath;
-extern const void * RTTI_MovementSelectIdleUtils__SelectClosestIdleToPath;
-extern const void * RTTI_MovementMessagePathEvent;
-extern const void * RTTI_MovementMessagePathComplete;
-extern const void * RTTI_MovementMessagePathFailed;
-extern const void * RTTI_MovementMessagePathCleared;
-extern const void * RTTI_BSPathSmootherPOVSearch;
-extern const void * RTTI_BSPathingSearchRayCast;
-extern const void * RTTI_ISmoothingRayValidator;
-extern const void * RTTI_GroundPathRayValidator;
-extern const void * RTTI_WaterPathRayValidator;
-extern const void * RTTI_IPathingNodeGenerator;
-extern const void * RTTI_GroundPathPathingNodeGenerator;
-extern const void * RTTI_WaterPathPathingNodeGenerator;
-extern const void * RTTI_IPathFollowerState;
-extern const void * RTTI_ICheckEndReachedFunctor;
-extern const void * RTTI_PathFollowerStatePlayIdle;
-extern const void * RTTI_PathFollowerStateFollowPathToParameter;
-extern const void * RTTI_PathFollowerStateTurnToAngle;
-extern const void * RTTI_PathFollowerStateKeepLastDirection;
-extern const void * RTTI_VelocityObstacle__Utilities__BuildOpenEdgeListsVisitor;
-extern const void * RTTI_BSNavmeshObstacleUndoData;
-extern const void * RTTI_MovementArbitrationVectorAdd;
-extern const void * RTTI_bnet__BaseCallback;
-extern const void * RTTI_BSPlatform__BSTerminatedCallback;
-extern const void * RTTI_BSPlatform__BSBethesdaPlatform;
-extern const void * RTTI_BSPlatform__BSAsyncRequestBase;
-extern const void * RTTI_bnet__EmptyTerminationCB;
-extern const void * RTTI_bnet__ExternalAuthInfo;
-extern const void * RTTI_bnet__SteamExternalAuthInfo;
-extern const void * RTTI_BSPlatform__BSUploadRequest;
-extern const void * RTTI_BSPlatform__BSDownloadRequest;
-extern const void * RTTI_bnet___impl__RefCount;
-extern const void * RTTI_bnet___impl__SharedMutex;
-extern const void * RTTI_bnet__IDynamicVariableDeleter;
-extern const void * RTTI_bnet__ConfigurationEntry;
-extern const void * RTTI_bnet___impl__IPool;
-extern const void * RTTI_bnet__ConfigurationEntryBoolean;
-extern const void * RTTI_bnet__ConfigurationEntryInteger;
-extern const void * RTTI_bnet__ConfigurationEntryFloat;
-extern const void * RTTI_bnet__ConfigurationEntryLong;
-extern const void * RTTI_bnet__ConfigurationEntryString;
-extern const void * RTTI_bnet__IJobCollection;
-extern const void * RTTI_bnet___detail__Composite;
-extern const void * RTTI_std__exception;
-extern const void * RTTI_std__bad_weak_ptr;
-extern const void * RTTI_std___Ref_count_base;
-extern const void * RTTI_bnet__IHeap;
-extern const void * RTTI_bnet__IHttpConnectionProvider;
-extern const void * RTTI_bnet__Network;
-extern const void * RTTI_bnet__UserProcessor;
-extern const void * RTTI_bnet__UserQueue;
-extern const void * RTTI_bnet__UserProcessorCollection;
-extern const void * RTTI_bnet__JobProcessorCollection;
-extern const void * RTTI_bnet___impl__AsyncOperation;
-extern const void * RTTI_bnet__SuspendFlow;
-extern const void * RTTI_bnet__ResumeFlow;
-extern const void * RTTI_bnet__BaseHttpRequest;
-extern const void * RTTI_bnet__LogoutFlow;
-extern const void * RTTI_bnet__IUgcUploader;
-extern const void * RTTI_bnet__ChunkedUploadFlow;
-extern const void * RTTI_bnet__IDownloader;
-extern const void * RTTI_bnet__DownloadFlow;
-extern const void * RTTI_bnet__FileDownloader;
-extern const void * RTTI_bnet__UgcBrowseRequest;
-extern const void * RTTI_bnet__UgcArgLessRequest;
-extern const void * RTTI_bnet__UgcCategoryCountRequest;
-extern const void * RTTI_bnet__UgcContentUploadRequest;
-extern const void * RTTI_bnet__UgcImageUploadRequest;
-extern const void * RTTI_bnet__UgcAddVideoRequest;
-extern const void * RTTI_bnet__UgcContentRequest;
-extern const void * RTTI_bnet__UgcContentUploadDetailsRequest;
-extern const void * RTTI_bnet__UgcCreationRequest;
-extern const void * RTTI_bnet__UgcEditRequest;
-extern const void * RTTI_bnet__UgcFlagRequest;
-extern const void * RTTI_bnet__UgcListContentRequest;
-extern const void * RTTI_bnet__UgcListCategoriesRequest;
-extern const void * RTTI_bnet__UgcListDlcRequest;
-extern const void * RTTI_bnet__Ugc__ListPlatformsRequest;
-extern const void * RTTI_bnet__Ugc__ListProductsRequest;
-extern const void * RTTI_bnet__UgcListFollowedAuthorRequest;
-extern const void * RTTI_bnet__UgcListNotificationRequest;
-extern const void * RTTI_bnet__UgcListBlacklistedRequest;
-extern const void * RTTI_bnet__UgcListFeaturedContentRequest;
-extern const void * RTTI_bnet__UgcListByEntitlementIdsRequest;
-extern const void * RTTI_bnet__UgcNotificationAcknowledgeRequest;
-extern const void * RTTI_bnet__UgcPreviewUploadRequest;
-extern const void * RTTI_bnet__UgcQueryRequest;
-extern const void * RTTI_bnet__UgcRateRequest;
-extern const void * RTTI_bnet__UgcAddReleaseNoteRequest;
-extern const void * RTTI_bnet__UgcUpdateReleaseNoteRequest;
-extern const void * RTTI_bnet__UgcRemoveReleaseNoteRequest;
-extern const void * RTTI_bnet__Ugc__RefreshEntitlementRequest;
-extern const void * RTTI_bnet__Job;
-extern const void * RTTI_bnet__FreeLessHeap;
-extern const void * RTTI_bnet__AcquirableFreeLessHeap;
-extern const void * RTTI_bnet__NetworkLoop;
-extern const void * RTTI_bnet__AcceptLegalDocumentsRequest;
-extern const void * RTTI_bnet__ListLegalDocumentsFlow;
-extern const void * RTTI_bnet__AccountLinkingRequest;
-extern const void * RTTI_bnet__AccountQuickCreateFlow;
-extern const void * RTTI_bnet__AnonymousAuthenticationFlow;
-extern const void * RTTI_bnet__SessionAnonymousCreateFlow;
-extern const void * RTTI_bnet__SessionQuickCreateFlow;
-extern const void * RTTI_bnet__AccountDeletionRequest;
-extern const void * RTTI_bnet__AddFingerprintRequest;
-extern const void * RTTI_bnet__IsAccountLinkableRequest;
-extern const void * RTTI_bnet__UserCredentialsAuthenticationFlow;
-extern const void * RTTI_bnet__ExternalAuthenticationFlow;
-extern const void * RTTI_bnet__GameCodeAuthenticationFlow;
-extern const void * RTTI_bnet__UnlinkAccountFlow;
-extern const void * RTTI_bnet__UsernameValidationRequest;
-extern const void * RTTI_bnet__VerifyFingerprintRequest;
-extern const void * RTTI_bnet__VerifyLinkRequest;
-extern const void * RTTI_bnet__TwitchAccountInfoRequest;
-extern const void * RTTI_bnet__CheckEmailRequest;
-extern const void * RTTI_bnet__RecoverPasswordRequest;
-extern const void * RTTI_bnet__RecoverUsernameRequest;
-extern const void * RTTI_bnet__ResendVerificationRequest;
-extern const void * RTTI_bnet__SessionValidateRequest;
-extern const void * RTTI_bnet__AccountInfoRequest;
-extern const void * RTTI_bnet__RetrieveExternalAccountJob;
-extern const void * RTTI_bnet__ExternalServiceRetrieveAccountRequest;
-extern const void * RTTI_bnet__AccountUpgradeAnonymousToQuickRequest;
-extern const void * RTTI_bnet__GameAccountLinkFlow;
-extern const void * RTTI_bnet__GameAccountLinkConflictResolveFlow;
-extern const void * RTTI_bnet__GameAccountExternalLinkConflictResolveFlow;
-extern const void * RTTI_bnet__GameAccountUserCredentialsAuthenticationFlow;
-extern const void * RTTI_bnet__GameAccountExternalAuthenticationFlow;
-extern const void * RTTI_bnet__GameAccountExternalLinkFlow;
-extern const void * RTTI_bnet__GameAccountGameCodeAuthenticationFlow;
-extern const void * RTTI_bnet__SessionResumeFlow;
-extern const void * RTTI_bnet__NewGameSessionFlow;
-extern const void * RTTI_bnet__Entitlements__ListRequest;
-extern const void * RTTI_bnet__Entitlements__ConsumeRequest;
-extern const void * RTTI_bnet__Entitlements__SearchRequest;
-extern const void * RTTI_bnet__EventLog__LogEventRequest;
-extern const void * RTTI_bnet__VCCS__Wallet__BalanceRequest;
-extern const void * RTTI_bnet__VCCS__Wallet__PurchaseRequest;
-extern const void * RTTI_bnet__UgcMtxPurchaseFlow;
-extern const void * RTTI_bnet__VCCS__Fulfillment__UpdateFirstPartyEntitlementRequest;
-extern const void * RTTI_bnet__VCCS__Catalog__GetItemRequest;
-extern const void * RTTI_bnet__VCCS__Catalog__ListItemsRequest;
-extern const void * RTTI_bnet__CMS__ListMessagesRequest;
-extern const void * RTTI_bnet__Status__GetExtServerStatusRequest;
-extern const void * RTTI_bnet__SessionLogoutRequest;
-extern const void * RTTI_bnet__UgcCancelUploadRequest;
-extern const void * RTTI_bnet__UgcChunkedUploadCompletionRequest;
-extern const void * RTTI_bnet__UgcChunkedUploadInitiationRequest;
-extern const void * RTTI_bnet__UgcChunkUploadRequest;
-extern const void * RTTI_bnet__CdpFileInfoRequest;
-extern const void * RTTI_bnet__CdpKeyRequest;
-extern const void * RTTI_bnet__BaseFileDownloader;
-extern const void * RTTI_bnet__HttpTransport;
-extern const void * RTTI_bnet__WinHttpTransport;
-extern const void * RTTI_bnet__SessionRefreshRequest;
-extern const void * RTTI_bnet__SessionResumeRequest;
-extern const void * RTTI_bnet__ListRequiredLegalDocumentsRequest;
-extern const void * RTTI_bnet__AuthenticationFlow;
-extern const void * RTTI_bnet__BeamQuickCreationRequest;
-extern const void * RTTI_bnet__AnonymousAuthRequest;
-extern const void * RTTI_bnet__SessionAnonymousAccountCreateRequest;
-extern const void * RTTI_bnet__SessionQuickCreateRequest;
-extern const void * RTTI_bnet__SessionAuthRequest;
-extern const void * RTTI_bnet__BeamUserCredentialsAuthenticationRequest;
-extern const void * RTTI_bnet__BeamExternalAuthenticationRequest;
-extern const void * RTTI_bnet__SessionExternalAuthRequest;
-extern const void * RTTI_bnet__Session__GameCodeAuthRequest;
-extern const void * RTTI_bnet__TokenUpgradeRequest;
-extern const void * RTTI_bnet__AccountUnlinkingRequest;
-extern const void * RTTI_bnet__RetrieveExternalAccountRequest;
-extern const void * RTTI_bnet__GameAccountLinkRequest;
-extern const void * RTTI_bnet__GameAccountLinkConflictResolveRequest;
-extern const void * RTTI_bnet__GameAccountExternalLinkConflictResolveRequest;
-extern const void * RTTI_bnet__GameAccountAuthenticationRequest;
-extern const void * RTTI_bnet__GameAccountExternalAuthRequest;
-extern const void * RTTI_bnet__GameAccountExternalLinkRequest;
-extern const void * RTTI_bnet__Session__GameAccountGameCodeAuthRequest;
-extern const void * RTTI_bnet__SessionTokenRequest;
-extern const void * RTTI_bnet__CdpAuthenticationRequest;
-extern const void * RTTI_bnet__SessionResumeTokenRequest;
-extern const void * RTTI_bnet__BeamAuthenticationRequest;
-extern const void * RTTI_BSScript__IFindBoundObjectFunctor;
-extern const void * RTTI_BSScript__IVMObjectBindInterface;
-extern const void * RTTI_BSScript__IVMSaveLoadInterface;
-extern const void * RTTI_BSScript__IVirtualMachine;
-extern const void * RTTI_BSScript__IVMDebugInterface;
-extern const void * RTTI_BSScript__ErrorLogger;
-extern const void * RTTI_BSScript__UnlinkedTypes__Function__ConvertTypeFunctor;
-extern const void * RTTI_BSScript__ByteCode__PackedInstructionStream__InstructionFunctor;
-extern const void * RTTI_BSScript__IMemoryPagePolicy;
-extern const void * RTTI_BSScript__SimpleAllocMemoryPagePolicy;
-extern const void * RTTI_BSScript__CompiledScriptLoader;
-extern const void * RTTI_BSScript__IFunction;
-extern const void * RTTI_BSScript__NF_util__NativeFunctionBase;
-extern const void * RTTI_BSScript__Internal__VirtualMachine;
-extern const void * RTTI_BSScript__Internal__IFuncCallQuery;
-extern const void * RTTI_BSScript__Internal__RawFuncCallQuery;
-extern const void * RTTI_BSScript__IObjectProcessor;
-extern const void * RTTI_BSScript__Internal__CodeTasklet;
-extern const void * RTTI_BSScript__Internal__AutoPropGetFunction;
-extern const void * RTTI_BSScript__Internal__AutoPropSetFunction;
-extern const void * RTTI_BSScript__Internal__NativeFunctionStub;
-extern const void * RTTI_BSScript__UnlinkedTypes__InstructionStream__InstructionFunctor;
-extern const void * RTTI_BSScript__LinkerProcessor;
-extern const void * RTTI_BSScript__Internal__ScriptFunction;
-extern const void * RTTI_BSFadeNode;
-extern const void * RTTI_BSShaderProperty;
-extern const void * RTTI_BSLeafAnimNode;
-extern const void * RTTI_BSTreeNode;
-extern const void * RTTI_BSImagespaceShaderAlphaBlend;
-extern const void * RTTI_BSImagespaceShaderBlur3;
-extern const void * RTTI_BSImagespaceShaderBlur5;
-extern const void * RTTI_BSImagespaceShaderBlur7;
-extern const void * RTTI_BSImagespaceShaderBlur9;
-extern const void * RTTI_BSImagespaceShaderBlur11;
-extern const void * RTTI_BSImagespaceShaderBlur13;
-extern const void * RTTI_BSImagespaceShaderBlur15;
-extern const void * RTTI_BSImagespaceShaderNonHDRBlur3;
-extern const void * RTTI_BSImagespaceShaderNonHDRBlur5;
-extern const void * RTTI_BSImagespaceShaderNonHDRBlur7;
-extern const void * RTTI_BSImagespaceShaderNonHDRBlur9;
-extern const void * RTTI_BSImagespaceShaderNonHDRBlur11;
-extern const void * RTTI_BSImagespaceShaderNonHDRBlur13;
-extern const void * RTTI_BSImagespaceShaderNonHDRBlur15;
-extern const void * RTTI_BSImagespaceShaderBrightPassBlur3;
-extern const void * RTTI_BSImagespaceShaderBrightPassBlur5;
-extern const void * RTTI_BSImagespaceShaderBrightPassBlur7;
-extern const void * RTTI_BSImagespaceShaderBrightPassBlur9;
-extern const void * RTTI_BSImagespaceShaderBrightPassBlur11;
-extern const void * RTTI_BSImagespaceShaderBrightPassBlur13;
-extern const void * RTTI_BSImagespaceShaderBrightPassBlur15;
-extern const void * RTTI_BSImagespaceShaderCopy;
-extern const void * RTTI_BSImagespaceShaderCopyDynamicFetchDisabled;
-extern const void * RTTI_BSImagespaceShaderCopyScaleBias;
-extern const void * RTTI_BSImagespaceShaderTextureMask;
-extern const void * RTTI_BSImagespaceShaderGreyScale;
-extern const void * RTTI_BSImagespaceShaderCopyCustomViewport;
-extern const void * RTTI_BSImagespaceShaderDepthOfField;
-extern const void * RTTI_BSImagespaceShaderDepthOfFieldFogged;
-extern const void * RTTI_BSImagespaceShaderDepthOfFieldMaskedFogged;
-extern const void * RTTI_BSImagespaceShaderDistantBlur;
-extern const void * RTTI_BSImagespaceShaderDistantBlurFogged;
-extern const void * RTTI_BSImagespaceShaderDistantBlurMaskedFogged;
-extern const void * RTTI_BSImagespaceShaderDoubleVision;
-extern const void * RTTI_BSImagespaceShaderFXAA;
-extern const void * RTTI_BSImagespaceShaderHDRDownSample4;
-extern const void * RTTI_BSImagespaceShaderHDRDownSample16Lum;
-extern const void * RTTI_BSImagespaceShaderHDRDownSample4RGB2Lum;
-extern const void * RTTI_BSImagespaceShaderHDRDownSample16;
-extern const void * RTTI_BSImagespaceShaderHDRDownSample4LumClamp;
-extern const void * RTTI_BSImagespaceShaderHDRDownSample16LumClamp;
-extern const void * RTTI_BSImagespaceShaderHDRDownSample4LightAdapt;
-extern const void * RTTI_BSImagespaceShaderHDRDownSample16LightAdapt;
-extern const void * RTTI_BSImagespaceShaderHDRTonemapBlendCinematic;
-extern const void * RTTI_BSImagespaceShaderHDRTonemapBlendCinematicFade;
-extern const void * RTTI_BSImagespaceShaderLocalMap;
-extern const void * RTTI_BSImagespaceShaderMap;
-extern const void * RTTI_BSImagespaceShaderWorldMap;
-extern const void * RTTI_BSImagespaceShaderWorldMapNoSkyBlur;
-extern const void * RTTI_BSImagespaceShaderNoiseScrollAndBlend;
-extern const void * RTTI_BSImagespaceShaderNoiseNormalmap;
-extern const void * RTTI_BSImagespaceShaderRadialBlur;
-extern const void * RTTI_BSImagespaceShaderRadialBlurMedium;
-extern const void * RTTI_BSImagespaceShaderRadialBlurHigh;
-extern const void * RTTI_BSImagespaceShaderRefraction;
-extern const void * RTTI_BSImagespaceShaderWaterDisplacementClearSimulation;
-extern const void * RTTI_BSImagespaceShaderWaterDisplacementTexOffset;
-extern const void * RTTI_BSImagespaceShaderWaterDisplacementWadingRipple;
-extern const void * RTTI_BSImagespaceShaderWaterDisplacementRainRipple;
-extern const void * RTTI_BSImagespaceShaderWaterWadingHeightmap;
-extern const void * RTTI_BSImagespaceShaderWaterRainHeightmap;
-extern const void * RTTI_BSImagespaceShaderWaterBlendHeightmaps;
-extern const void * RTTI_BSImagespaceShaderWaterSmoothHeightmap;
-extern const void * RTTI_BSImagespaceShaderWaterDisplacementNormals;
-extern const void * RTTI_BSImagespaceShaderVolumetricLighting;
-extern const void * RTTI_BSImagespaceShaderWaterFlow;
-extern const void * RTTI_BSImagespaceShaderApplyReflections;
-extern const void * RTTI_BSImagespaceShaderISApplyVolumetricLighting;
-extern const void * RTTI_BSImagespaceShaderISBasicCopy;
-extern const void * RTTI_BSImagespaceShaderISBlur;
-extern const void * RTTI_BSImagespaceShaderISVolumetricLightingBlurHCS;
-extern const void * RTTI_BSImagespaceShaderISVolumetricLightingBlurVCS;
-extern const void * RTTI_BSImagespaceShaderReflectionBlurHCS;
-extern const void * RTTI_BSImagespaceShaderReflectionBlurVCS;
-extern const void * RTTI_BSImagespaceShaderISParallaxMaskBlurHCS;
-extern const void * RTTI_BSImagespaceShaderISParallaxMaskBlurVCS;
-extern const void * RTTI_BSImagespaceShaderISDepthOfFieldBlurHCS;
-extern const void * RTTI_BSImagespaceShaderISDepthOfFieldBlurVCS;
-extern const void * RTTI_BSImagespaceShaderISCompositeVolumetricLighting;
-extern const void * RTTI_BSImagespaceShaderISCompositeLensFlare;
-extern const void * RTTI_BSImagespaceShaderISCompositeLensFlareVolumetricLighting;
-extern const void * RTTI_BSImagespaceShaderISCopySubRegionCS;
-extern const void * RTTI_BSImagespaceShaderISDebugSnow;
-extern const void * RTTI_BSImagespaceShaderISDownsample;
-extern const void * RTTI_BSImagespaceShaderISDownsampleIgnoreBrightest;
-extern const void * RTTI_BSImagespaceShaderISDownsampleCS;
-extern const void * RTTI_BSImagespaceShaderISDownsampleIgnoreBrightestCS;
-extern const void * RTTI_BSImagespaceShaderISExp;
-extern const void * RTTI_BSImagespaceShaderISIBLensFlares;
-extern const void * RTTI_BSImagespaceShaderISLightingComposite;
-extern const void * RTTI_BSImagespaceShaderISLightingCompositeNoDirectionalLight;
-extern const void * RTTI_BSImagespaceShaderISLightingCompositeMenu;
-extern const void * RTTI_BSImagespaceShaderISPerlinNoiseCS;
-extern const void * RTTI_BSImagespaceShaderISPerlinNoise2DCS;
-extern const void * RTTI_BSImagespaceShaderReflectionsRayTracing;
-extern const void * RTTI_BSImagespaceShaderReflectionsDebugSpecMask;
-extern const void * RTTI_BSImagespaceShaderISSAOBlurH;
-extern const void * RTTI_BSImagespaceShaderISSAOBlurV;
-extern const void * RTTI_BSImagespaceShaderISSAOBlurHCS;
-extern const void * RTTI_BSImagespaceShaderISSAOBlurVCS;
-extern const void * RTTI_BSImagespaceShaderISSAOCameraZ;
-extern const void * RTTI_BSImagespaceShaderISSAOCameraZAndMipsCS;
-extern const void * RTTI_BSImagespaceShaderISSAOCompositeSAO;
-extern const void * RTTI_BSImagespaceShaderISSAOCompositeFog;
-extern const void * RTTI_BSImagespaceShaderISSAOCompositeSAOFog;
-extern const void * RTTI_BSImagespaceShaderISMinify;
-extern const void * RTTI_BSImagespaceShaderISMinifyContrast;
-extern const void * RTTI_BSImagespaceShaderISSAORawAO;
-extern const void * RTTI_BSImagespaceShaderISSAORawAONoTemporal;
-extern const void * RTTI_BSImagespaceShaderISSAORawAOCS;
-extern const void * RTTI_BSImagespaceShaderISSILComposite;
-extern const void * RTTI_BSImagespaceShaderISSILRawInd;
-extern const void * RTTI_BSImagespaceShaderISSimpleColor;
-extern const void * RTTI_BSImagespaceShaderISDisplayDepth;
-extern const void * RTTI_BSImagespaceShaderISSnowSSS;
-extern const void * RTTI_BSImagespaceShaderISTemporalAA;
-extern const void * RTTI_BSImagespaceShaderISTemporalAA_UI;
-extern const void * RTTI_BSImagespaceShaderISTemporalAA_Water;
-extern const void * RTTI_BSImagespaceShaderISUpsampleDynamicResolution;
-extern const void * RTTI_BSImagespaceShaderISWaterBlend;
-extern const void * RTTI_BSImagespaceShaderISUnderwaterMask;
-extern const void * RTTI_ShadowSceneNode;
-extern const void * RTTI_BSLightingShaderProperty;
-extern const void * RTTI_BSGrassShaderProperty;
-extern const void * RTTI_BSShaderAccumulator;
-extern const void * RTTI_BSGrassShader;
-extern const void * RTTI_BSLightingShaderMaterialBase;
-extern const void * RTTI_BSLightingShaderMaterialEnvmap;
-extern const void * RTTI_BSLightingShaderMaterialEye;
-extern const void * RTTI_BSLightingShaderMaterialGlowmap;
-extern const void * RTTI_BSLightingShaderMaterialParallax;
-extern const void * RTTI_BSLightingShaderMaterialParallaxOcc;
-extern const void * RTTI_BSLightingShaderMaterialFacegen;
-extern const void * RTTI_BSLightingShaderMaterialFacegenTint;
-extern const void * RTTI_BSLightingShaderMaterialHairTint;
-extern const void * RTTI_BSLightingShaderMaterialLandscape;
-extern const void * RTTI_BSLightingShaderMaterialLODLandscape;
-extern const void * RTTI_BSLightingShaderMaterialSnow;
-extern const void * RTTI_BSLightingShaderMaterialMultiLayerParallax;
-extern const void * RTTI_BSEffectShaderProperty;
-extern const void * RTTI_ImageSpaceEffectParam;
-extern const void * RTTI_ImageSpaceShaderParam;
-extern const void * RTTI_BSWaterShaderProperty;
-extern const void * RTTI_BSBloodSplatterShaderProperty;
-extern const void * RTTI_BSBloodSplatterShader;
-extern const void * RTTI_BSImagespaceShaderLensFlare;
-extern const void * RTTI_BSImagespaceShaderLensFlareVisibility;
-extern const void * RTTI_BSParticleShaderProperty;
-extern const void * RTTI_ImageSpaceEffectHDR;
-extern const void * RTTI_BSLightingShader;
-extern const void * RTTI_BSWaterShader;
-extern const void * RTTI_ImageSpaceEffectVolumetricLighting;
-extern const void * RTTI_ImageSpaceEffectOption;
-extern const void * RTTI_ImageSpaceEffectDepthOfField;
-extern const void * RTTI_BSSkyShader;
-extern const void * RTTI_BSSkyShaderProperty;
-extern const void * RTTI_ImageSpaceEffect;
-extern const void * RTTI_BSEffectShaderMaterial;
-extern const void * RTTI_BSEffectShader;
-extern const void * RTTI_BSDistantTreeShaderProperty;
-extern const void * RTTI_BSDistantTreeShader;
-extern const void * RTTI_BSCubeMapCamera;
-extern const void * RTTI_BSWaterShaderMaterial;
-extern const void * RTTI_ImageSpaceEffectWaterDisplacement;
-extern const void * RTTI_BSFogProperty;
-extern const void * RTTI_BSShadowLight;
-extern const void * RTTI_BSBatchRenderer;
-extern const void * RTTI_BSClearZNode;
-extern const void * RTTI_BSImagespaceShader;
-extern const void * RTTI_ImageSpaceEffectRefraction;
-extern const void * RTTI_ImageSpaceEffectRadialBlur;
-extern const void * RTTI_BSUtilityShader;
-extern const void * RTTI_ImageSpaceEffectWorldMap;
-extern const void * RTTI_NiThreadProcedure;
-extern const void * RTTI_NiMemStream;
-extern const void * RTTI_NiCollisionObject;
-extern const void * RTTI_BSOrderedNode;
-extern const void * RTTI_BSLines;
-extern const void * RTTI_BSDynamicLines;
-extern const void * RTTI_UnitTest_BSStreamParserStream;
-extern const void * RTTI_UnitTest_BSStreamParserData;
-extern const void * RTTI_BSShapeConstructor;
-extern const void * RTTI_BSBoxConstructor;
-extern const void * RTTI_BSOrientedBoxConstructor;
-extern const void * RTTI_BSSphereConstructor;
-extern const void * RTTI_BSCylinderConstructor;
-extern const void * RTTI_BSCapsuleConstructor;
-extern const void * RTTI_BSArrowConstructor;
-extern const void * RTTI_BSCircleConstructor;
-extern const void * RTTI_BSRingConstructor;
-extern const void * RTTI_BSFlatQuadConstructor;
-extern const void * RTTI_BSDiskConstructor;
-extern const void * RTTI_BSMultiIndexTriShape;
-extern const void * RTTI_BSShaderMaterial;
-extern const void * RTTI_BSLight;
-extern const void * RTTI_NiBoneMatrixSetterI;
-extern const void * RTTI_BSShader;
-extern const void * RTTI_BSReloadShaderI;
-extern const void * RTTI_BSParticleShader;
-extern const void * RTTI_BSLightingShaderPropertyFloatController;
-extern const void * RTTI_BSLightingShaderPropertyUShortController;
-extern const void * RTTI_BSLightingShaderPropertyColorController;
-extern const void * RTTI_BSEffectShaderPropertyFloatController;
-extern const void * RTTI_BSEffectShaderPropertyColorController;
-extern const void * RTTI_BSNiAlphaPropertyTestRefController;
-extern const void * RTTI_BSPSysSimpleColorModifier;
-extern const void * RTTI_BSPSysLODModifier;
-extern const void * RTTI_BSShadowDirectionalLight;
-extern const void * RTTI_IRendererResourceManager;
-extern const void * RTTI_BSShaderResourceManager;
-extern const void * RTTI_ImageSpaceEffectGetHit;
-extern const void * RTTI_ImageSpaceEffectBlur;
-extern const void * RTTI_ImageSpaceEffectFullScreenBlur;
-extern const void * RTTI_ImageSpaceEffectMap;
-extern const void * RTTI_ImageSpaceEffectNoise;
-extern const void * RTTI_BSParabolicCullingProcess;
-extern const void * RTTI_BSShadowFrustumLight;
-extern const void * RTTI_BSShadowParabolicLight;
-extern const void * RTTI_BSComputeShader;
-extern const void * RTTI_BSMeshLODTriShape;
-extern const void * RTTI_BSLODMultiIndexTriShape;
-extern const void * RTTI_BSSubIndexLandTriShape;
-extern const void * RTTI_BSSystemMonitor__SocketThread;
-extern const void * RTTI_BSSystemMonitor__MemOpsThread;
-extern const void * RTTI_BSSystemUtility;
-extern const void * RTTI_BSGameDataSystemUtility;
-extern const void * RTTI_BSWin32SaveDataSystemUtility;
-extern const void * RTTI_BSSaveDataSystemUtility;
-extern const void * RTTI_BSSaveDataSystemUtility__Entry;
-extern const void * RTTI_BSSaveDataSystemUtilityFile;
-extern const void * RTTI_BSSystemUtilitiesStrings;
-extern const void * RTTI_BSStreamSystemUtility;
-extern const void * RTTI_CCallbackBase;
-extern const void * RTTI_BSWin32SystemUtility;
-extern const void * RTTI_BSCacheDriveSystemUtility;
-extern const void * RTTI_BSSysInfoSystemUtility;
-extern const void * RTTI_BSMsgDialogSystemUtility;
-extern const void * RTTI_BSAwardsSystemUtility;
-extern const void * RTTI_BSWin32AwardsSystemUtility;
-extern const void * RTTI_BSDiscBootSystemUtility;
-extern const void * RTTI_type_info;
-extern const void * RTTI_BSSocket;
-extern const void * RTTI_BSSocketServer;
+#define DYNAMIC_CAST(obj, from, to) ( ## to *) IRTTI::Cast<to>((void*)(obj), RTTI:: ## from, RTTI:: ## to)
diff --git a/skse64/skse64/GameReferences.cpp b/skse64/skse64/GameReferences.cpp
index 188d7ba..b7e2c99 100644
--- a/skse64/skse64/GameReferences.cpp
+++ b/skse64/skse64/GameReferences.cpp
@@ -1,28 +1,28 @@
-#include "skse64/GameReferences.h"
-#include "skse64/GameObjects.h"
-#include "skse64/GameForms.h"
-#include "skse64/GameExtraData.h"
-#include "skse64/GameRTTI.h"
-#include "skse64/GameData.h"
-#include "skse64/NiNodes.h"
+#include "GameReferences.h"
+#include "GameObjects.h"
+#include "GameForms.h"
+#include "GameExtraData.h"
+#include "GameRTTI.h"
+#include "GameData.h"
+#include "NiNodes.h"
 
 // 123ED1FD37DCAF9CBB5808F1DFB2B9B4E6D678DC+67
-RelocAddr<_CreateRefHandleByREFR> CreateRefHandleByREFR(0x001320F0);
+_CreateRefHandleByREFR CreateRefHandleByREFR = IAL::Addr<_CreateRefHandleByREFR>(12193);
 // D479D10F77326C177B3D5AE2C5738B0D39A1546A+5F
-RelocAddr<_LookupREFRByHandle> LookupREFRByHandle(0x001328A0);
+_LookupREFRByHandle LookupREFRByHandle = IAL::Addr<_LookupREFRByHandle>(12203);
 // B995A21984B048C2B4F61777E615FFFB2806F9B7+8C
-RelocAddr<_LookupREFRObjectByHandle> LookupREFRObjectByHandle(0x001329D0);
+_LookupREFRObjectByHandle LookupREFRObjectByHandle = IAL::Addr<_LookupREFRObjectByHandle>(12204);
 
 // 123ED1FD37DCAF9CBB5808F1DFB2B9B4E6D678DC+4D
-RelocPtr<UInt32> g_invalidRefHandle(0x01EBEABC);
+UInt32* g_invalidRefHandle = IAL::Addr<UInt32*>(514164);
 
-RelocAddr<_MoveRefrToPosition> MoveRefrToPosition(0x009AE5C0);
-RelocAddr<_PlaceAtMe_Native> PlaceAtMe_Native(0x009951F0);
-RelocAddr<_AddItem_Native> AddItem_Native(0x00993100);
+_MoveRefrToPosition MoveRefrToPosition = IAL::Addr<_MoveRefrToPosition>(56227);
+_PlaceAtMe_Native PlaceAtMe_Native = IAL::Addr<_PlaceAtMe_Native>(55672);
+_AddItem_Native AddItem_Native = IAL::Addr<_AddItem_Native>(55616);
 
 UInt32 GetOrCreateRefrHandle(TESObjectREFR* ref)
 {
-	UInt32 invalidRefHandleVal = *(g_invalidRefHandle.GetPtr());
+	UInt32 invalidRefHandleVal = *g_invalidRefHandle;
 	if (ref == NULL)
 		return invalidRefHandleVal;
 
@@ -166,9 +166,9 @@ bool Actor::VisitFactions(FactionVisitor & visitor)
 	return false;
 }
 
-RelocPtr<CrosshairRefHandleHolder*> g_crosshairRefHandleHolder(0x02F011D0);
+static auto g_crosshairRefHandleHolder = IAL::Addr< CrosshairRefHandleHolder**>(515446);
 
 CrosshairRefHandleHolder * CrosshairRefHandleHolder::GetSingleton(void)
 {
-	return *(g_crosshairRefHandleHolder.GetPtr());
+	return *g_crosshairRefHandleHolder;
 }
diff --git a/skse64/skse64/GameReferences.h b/skse64/skse64/GameReferences.h
index 361a984..c6ed5cf 100644
--- a/skse64/skse64/GameReferences.h
+++ b/skse64/skse64/GameReferences.h
@@ -1,10 +1,10 @@
 #pragma once
 
-#include "skse64/GameFormComponents.h"
-#include "skse64/GameForms.h"
-#include "skse64/GameEvents.h"
-#include "skse64/NiObjects.h"
-#include "skse64/GameObjects.h"
+#include "GameFormComponents.h"
+#include "GameForms.h"
+#include "GameEvents.h"
+#include "NiObjects.h"
+#include "GameObjects.h"
 #include "GameBSExtraData.h"
 
 class BSAnimationGraphEvent;
@@ -55,29 +55,29 @@ public:
 
 // Adds entry to lookup table if not yet there
 typedef void (* _CreateRefHandleByREFR)(UInt32 & refHandleOut, TESObjectREFR * refr);
-extern RelocAddr<_CreateRefHandleByREFR> CreateRefHandleByREFR;
+extern _CreateRefHandleByREFR CreateRefHandleByREFR;
 
 // Note: May set refHandle to 0
 typedef bool (* _LookupREFRByHandle)(UInt32 & refHandle, NiPointer<TESObjectREFR> & refrOut);
-extern RelocAddr<_LookupREFRByHandle> LookupREFRByHandle;
+extern _LookupREFRByHandle LookupREFRByHandle;
 
 typedef bool (* _LookupREFRObjectByHandle)(UInt32 & refHandle, NiPointer<BSHandleRefObject> & refrOut);
-extern RelocAddr<_LookupREFRObjectByHandle> LookupREFRObjectByHandle;
+extern _LookupREFRObjectByHandle LookupREFRObjectByHandle;
 
-extern RelocPtr<UInt32> g_invalidRefHandle;
+extern UInt32* g_invalidRefHandle;
 
 // Try to retrive/create handle. Return invalid handle otherwise.
 UInt32 GetOrCreateRefrHandle(TESObjectREFR* refr);
 
 // Place/move reference
 typedef void (* _MoveRefrToPosition)(TESObjectREFR* source, UInt32* pTargetHandle, void* parentCell, void* worldSpace, NiPoint3* postion, NiPoint3* rotation);
-extern RelocAddr<_MoveRefrToPosition> MoveRefrToPosition;
+extern _MoveRefrToPosition MoveRefrToPosition;
 
 typedef TESObjectREFR* (* _PlaceAtMe_Native)(VMClassRegistry* registry, UInt32 stackId, TESObjectREFR* target, TESForm* form, SInt32 count, bool bForcePersist, bool bInitiallyDisabled);
-extern RelocAddr<_PlaceAtMe_Native> PlaceAtMe_Native;
+extern _PlaceAtMe_Native PlaceAtMe_Native;
 
 typedef void (* _AddItem_Native)(VMClassRegistry* registry, UInt32 stackId, TESObjectREFR* target, TESForm* form, SInt32 count, bool bSilent);
-extern RelocAddr<_AddItem_Native> AddItem_Native;
+extern _AddItem_Native AddItem_Native;
 
 // 8 
 class IAnimationGraphManagerHolder
@@ -259,12 +259,18 @@ public:
 	void DecRef();
 
 	MEMBER_FN_PREFIX(TESObjectREFR);
-	DEFINE_MEMBER_FN(GetBaseScale, float, 0x0028CC60);
-	DEFINE_MEMBER_FN(IsOffLimits, bool, 0x0029A330);
+	DEFINE_MEMBER_FN(GetBaseScale, float, offset1);
+	DEFINE_MEMBER_FN(IsOffLimits, bool, offset2);
 	// E2B825B476DC5CFBC69E194AA76CB0C049AC78E3+137
-	DEFINE_MEMBER_FN(GetWeight, float, 0x002A6FF0);
-	DEFINE_MEMBER_FN(GetReferenceName, const char *, 0x002961F0);
-	DEFINE_MEMBER_FN(GetWorldspace, TESWorldSpace*, 0x00299750);
+	DEFINE_MEMBER_FN(GetWeight, float, offset3);
+	DEFINE_MEMBER_FN(GetReferenceName, const char *, offset4);
+	DEFINE_MEMBER_FN(GetWorldspace, TESWorldSpace*, offset5);
+private:
+	inline static auto offset1 = IAL::Offset(19238);
+	inline static auto offset2 = IAL::Offset(19400);
+	inline static auto offset3 = IAL::Offset(19807);
+	inline static auto offset4 = IAL::Offset(19354);
+	inline static auto offset5 = IAL::Offset(19389);
 };
 
 STATIC_ASSERT(sizeof(TESObjectREFR) == 0x98);
@@ -397,8 +403,8 @@ public:
 	virtual void Unk_E1(void);
 	virtual void Unk_E2(void);
 	virtual bool IsInCombat(void);
-	virtual void Unk_E4(void);
-	virtual void Unk_E5(void);
+	virtual void UpdateCombat(void);
+	virtual void StopCombat(void);
 	virtual void Unk_E6(void);
 	virtual void Unk_E7(void);
 	virtual void Unk_E8(void);
@@ -453,11 +459,13 @@ public:
 		UInt32		spellCount;		// 10
 	};
 
-	enum Flags1 {
+	enum Flags1 : UInt32 {
 		kFlags_AIEnabled = 0x02,
 		kFlags_IsPlayerTeammate = 0x4000000
 	};
-	enum Flags2 {
+	enum Flags2 : UInt32 {
+		kFlags_IsAMount = 0x1,
+		kFlags_kGettingOnOffMount = 0x8,
 		kFlags_CanDoFavor = 0x80
 	};
 
@@ -467,7 +475,7 @@ public:
 	BSTEventSink<void*>	transformDeltaEvent;		// 0C8 .?AV?$BSTEventSink@VBSTransformDeltaEvent@@@@
 	BSTEventSink<void*>	characterMoveFinishEvent;	// 0D0 .?AV?$BSTEventSink@VbhkCharacterMoveFinishEvent@@@@
 	IPostAnimationChannelUpdateFunctor	unk0D8;		// 0D8 IPostAnimationChannelUpdateFunctor
-	UInt32	flags1;									// 0E0
+	Flags1	flags1;									// 0E0
 	float	unk0E4;									// 0E4
 	UInt32	unk0E8;									// 0E8
 	UInt32	pad0EC;									// 0EC
@@ -514,7 +522,7 @@ public:
 	UInt32	pad1EC;									// 1EC
 	TESRace*	race;								// 1F0
 	float	unk1F8;									// 1F8 - init'd to -1
-	UInt32	flags2;									// 1FC
+	Flags2	flags2;									// 1FC
 	
 	// These two are part of an object
 	BSString	unk200;								// 200
@@ -550,14 +558,14 @@ public:
 	UInt64	unk2A8;									// 2A8
 
 	MEMBER_FN_PREFIX(Actor);
-	DEFINE_MEMBER_FN(QueueNiNodeUpdate, void, 0x00693110, bool updateWeight);
-	DEFINE_MEMBER_FN(HasPerk, bool, 0x005F9E30, BGSPerk * perk);
-	DEFINE_MEMBER_FN(GetLevel, UInt16, 0x005D62E0);
-	DEFINE_MEMBER_FN(SetRace, void, 0x00607680, TESRace*, bool isPlayer);
-	DEFINE_MEMBER_FN(UpdateWeaponAbility, void, 0x006313D0, TESForm*, BaseExtraList * extraData, bool bLeftHand);
-	DEFINE_MEMBER_FN(UpdateArmorAbility, void, 0x00631360, TESForm*, BaseExtraList * extraData);
-	DEFINE_MEMBER_FN(IsHostileToActor, bool, 0x005E7E40, Actor * actor);
-	DEFINE_MEMBER_FN(ResetAI, void, 0x005DB310, UInt32 unk1, UInt32 unk2);
+	DEFINE_MEMBER_FN(QueueNiNodeUpdate, void, offset1, bool updateWeight);
+	DEFINE_MEMBER_FN(HasPerk, bool, offset2, BGSPerk * perk);
+	DEFINE_MEMBER_FN(GetLevel, UInt16, offset3);
+	DEFINE_MEMBER_FN(SetRace, void, offset4, TESRace*, bool isPlayer);
+	DEFINE_MEMBER_FN(UpdateWeaponAbility, void, offset5, TESForm*, BaseExtraList * extraData, bool bLeftHand);
+	DEFINE_MEMBER_FN(UpdateArmorAbility, void, offset6, TESForm*, BaseExtraList * extraData);
+	DEFINE_MEMBER_FN(IsHostileToActor, bool, offset7, Actor * actor);
+	DEFINE_MEMBER_FN(ResetAI, void, offset8, UInt32 unk1, UInt32 unk2);
 
 	TESForm * GetEquippedObject(bool abLeftHand);
 	void UpdateSkinColor();
@@ -571,6 +579,15 @@ public:
 
 	// Can contain duplicate entries with different rankings
 	bool VisitFactions(FactionVisitor & visitor);
+private:
+	inline static auto offset1 = IAL::Offset(39181);
+	inline static auto offset2 = IAL::Offset(36690);
+	inline static auto offset3 = IAL::Offset(36344);
+	inline static auto offset4 = IAL::Offset(36901);
+	inline static auto offset5 = IAL::Offset(37803);
+	inline static auto offset6 = IAL::Offset(37802);
+	inline static auto offset7 = IAL::Offset(36537);
+	inline static auto offset8 = IAL::Offset(36407);
 };
 
 STATIC_ASSERT(offsetof(Actor, magicTarget) == 0x98);
@@ -595,6 +612,21 @@ class PlayerCharacter : public Character
 public:
 	virtual ~PlayerCharacter();
 
+	enum FlagBD9 : UInt8
+	{
+		kNone = 0,
+		kIsSleeping = 0x4,
+		kFastTravelEnabled = 0x10,
+		kGreetingPlayer = 0x40
+	};
+
+	enum FlagBDA : UInt8
+	{
+		kTransitionInToMount = 0x2, // ?
+		kTransitionOutOfMount = 0x4, // ?
+		kAIDriven = 0x8 
+	};
+
 	// parents
 	BSTEventSink <void *>	menuOpenCloseEvent;			// 2B0 .?AV?$BSTEventSink@VMenuOpenCloseEvent@@@@
 	BSTEventSink <void *>	menuModeChangeEvent;		// 2B8 .?AV?$BSTEventSink@VMenuModeChangeEvent@@@@
@@ -859,8 +891,8 @@ public:
 	UInt32			unkBCC;							// BCC
 	UInt64			unkBD0;							// BD0
 	UInt8			unkBD8;							// BD8
-	UInt8			unkBD9;							// BD9
-	UInt8			unkBDA;							// BDA
+	FlagBD9 		unkBD9;							// BD9
+	FlagBDA			unkBDA;							// BDA
 	UInt8			unkBDB;							// BDB
 	UInt8			unkBDC;							// BDC
 	UInt8			unkBDD;							// BDD
@@ -897,10 +929,15 @@ public:
 	}
 
 	MEMBER_FN_PREFIX(PlayerCharacter);
-	DEFINE_MEMBER_FN(GetNumTints, UInt32, 0x006B5450, UInt32 tintType);
-	DEFINE_MEMBER_FN(GetTintMask, TintMask *, 0x006B52A0, UInt32 tintType, UInt32 index);
-	DEFINE_MEMBER_FN(GetDamage, float, 0x00693050, InventoryEntryData * pForm);
-	DEFINE_MEMBER_FN(GetArmorValue, float, 0x00692CD0, InventoryEntryData * pForm);
+	DEFINE_MEMBER_FN(GetNumTints, UInt32, offset1, UInt32 tintType);
+	DEFINE_MEMBER_FN(GetTintMask, TintMask *, offset2, UInt32 tintType, UInt32 index);
+	DEFINE_MEMBER_FN(GetDamage, float, offset3, InventoryEntryData * pForm);
+	DEFINE_MEMBER_FN(GetArmorValue, float, offset4, InventoryEntryData * pForm);
+private:
+	inline static auto offset1 = IAL::Offset(39614);
+	inline static auto offset2 = IAL::Offset(39612);
+	inline static auto offset3 = IAL::Offset(39179);
+	inline static auto offset4 = IAL::Offset(39175);
 };
 
 STATIC_ASSERT(offsetof(PlayerCharacter, userEventEnabledEvent) == 0x2C0);
diff --git a/skse64/skse64/GameResources.cpp b/skse64/skse64/GameResources.cpp
index 64e1642..ef29335 100644
--- a/skse64/skse64/GameResources.cpp
+++ b/skse64/skse64/GameResources.cpp
@@ -1,15 +1,17 @@
 #include "GameResources.h"
 
+// 515F6D3421B9B5634E8CFA419159BB297C282A3B+3E
+static auto g_FaceGenTriDatabase = IAL::Addr<FaceGenTriDatabase**>(515553);
+
 FaceGenTriDatabase * FaceGenTriDatabase::GetSingleton(void)
 {
-	// 515F6D3421B9B5634E8CFA419159BB297C282A3B+3E
-	static RelocPtr<FaceGenTriDatabase*> g_FaceGenTriDatabase(0x02F017E8);
 	return *g_FaceGenTriDatabase;
 }
 
+// 836BA46E0B9EB46A38D8BAD8A4A7D14584D61BB0+8E
+static auto g_FaceGenTriDatabase_ie = IAL::Addr<BSFaceGenDB::TRI::DBTraits::Data*>(507562);
+
 BSFaceGenDB::TRI::DBTraits::Data * FaceGenTriDatabase::GetInvalidEntry(void)
 {
-	// 836BA46E0B9EB46A38D8BAD8A4A7D14584D61BB0+8E
-	static RelocPtr<BSFaceGenDB::TRI::DBTraits::Data> g_FaceGenTriDatabase(0x01DEA01C);
-	return g_FaceGenTriDatabase.GetPtr();
+	return g_FaceGenTriDatabase_ie;
 }
diff --git a/skse64/skse64/GameSettings.cpp b/skse64/skse64/GameSettings.cpp
index 4834480..e4e6a71 100644
--- a/skse64/skse64/GameSettings.cpp
+++ b/skse64/skse64/GameSettings.cpp
@@ -2,17 +2,17 @@
 #include "GameAPI.h"
 
 // 298D0E3E3DDD7D2333475E0B20F931E2ED6A0355+5A
-RelocPtr<SettingCollectionList*> g_iniSettingCollection(0x0301D758);
+SettingCollectionList** g_iniSettingCollection = IAL::Addr<SettingCollectionList**>(524557);
 // 5C8EA66C14C47204F60C72DE345DC6B22BB929B4+52
-RelocPtr<SettingCollectionList*> g_iniPrefSettingCollection(0x02F6BA48);
+SettingCollectionList** g_iniPrefSettingCollection = IAL::Addr<SettingCollectionList**>(523673);
 // FE086A335E2EB844894F7D900623A149B381723F+6B
-RelocPtr<SettingCollectionMap*>  g_gameSettingCollection(0x02EC58B0);
+SettingCollectionMap**  g_gameSettingCollection = IAL::Addr<SettingCollectionMap**>(514622);
 
 // ### we can just look these up
 // D1E741E48E0181F5A2371C8E8BD02C1F0810BADF+0
-RelocPtr<float> g_mapLocalHeight(0x01DB3ED8);	// fMapLocalHeight:MapMenu
+float* g_mapLocalHeight = IAL::Addr<float*>(501262); //fMapLocalHeight:MapMenu
 // C7928A7F7ACB94729DA4D4011E03D5ADC79160F3+186
-RelocPtr<float> g_localMapMinFrustumWidth(0x01DF5430);
+float* g_localMapMinFrustumWidth = IAL::Addr<float*>(510469);
 
 UInt32 Setting::GetType(void) const
 {
diff --git a/skse64/skse64/GameSettings.h b/skse64/skse64/GameSettings.h
index 852f7b2..f0812aa 100644
--- a/skse64/skse64/GameSettings.h
+++ b/skse64/skse64/GameSettings.h
@@ -1,7 +1,7 @@
 #pragma once
 
 #include "skse64_common/Utilities.h"
-#include "skse64/NiTypes.h"
+#include "NiTypes.h"
 
 // 18
 class Setting
@@ -59,9 +59,11 @@ public:
 	Entry	items;	// 118
 
 	MEMBER_FN_PREFIX(SettingCollectionList);
-	DEFINE_MEMBER_FN(Get_Internal, Setting *, 0x003104D0, const char * name);
+	DEFINE_MEMBER_FN(Get_Internal, Setting *, offset1, const char * name);
 
 	Setting	*	Get(const char * name);
+private:
+	inline static auto offset1 = IAL::Offset(22315);
 };
 STATIC_ASSERT(offsetof(SettingCollectionList, items) == 0x118);
 
@@ -81,9 +83,9 @@ STATIC_ASSERT(offsetof(SettingCollectionMap, items) == 0x118);
 
 Setting * GetINISetting(const char * name);
 
-extern RelocPtr<SettingCollectionList*> g_iniSettingCollection;
-extern RelocPtr<SettingCollectionList*> g_iniPrefSettingCollection;
-extern RelocPtr<SettingCollectionMap*>  g_gameSettingCollection;
+extern SettingCollectionList** g_iniSettingCollection;
+extern SettingCollectionList** g_iniPrefSettingCollection;
+extern SettingCollectionMap**  g_gameSettingCollection;
 
-extern RelocPtr<float> g_mapLocalHeight;
-extern RelocPtr<float> g_localMapMinFrustumWidth;
+extern float* g_mapLocalHeight;
+extern float* g_localMapMinFrustumWidth;
diff --git a/skse64/skse64/GameStreams.h b/skse64/skse64/GameStreams.h
index 6f0ffcf..18f5fad 100644
--- a/skse64/skse64/GameStreams.h
+++ b/skse64/skse64/GameStreams.h
@@ -40,14 +40,14 @@ public:
 	virtual void	FunctionSwap(bool swap);
 
 	MEMBER_FN_PREFIX(NiMemStream);
-	DEFINE_MEMBER_FN(Construct, NiMemStream *, 0x013120B0);
-	DEFINE_MEMBER_FN(Destroy, void, 0x01312120);
-	DEFINE_MEMBER_FN(Seek, void, 0x013121B0, SInt32);
+	DEFINE_MEMBER_FN(Construct, NiMemStream *, offset1);
+	DEFINE_MEMBER_FN(Destroy, void, offset2);
+	DEFINE_MEMBER_FN(Seek, void, offset3, SInt32);
 	// ??_7NiMemStream@@6B@ + 18
-	DEFINE_MEMBER_FN(GetOffset, UInt32, 0x00C25660, void);
-	DEFINE_MEMBER_FN(CopyFrom, UInt32, 0x01312180, void *);
+	DEFINE_MEMBER_FN(GetOffset, UInt32, offset4, void);
+	DEFINE_MEMBER_FN(CopyFrom, UInt32, offset5, void *);
 	// ??_7NiMemStream@@6B@ + 28
-	DEFINE_MEMBER_FN(FunctionSwap, UInt32, 0x013121F0, bool);
+	DEFINE_MEMBER_FN(FunctionSwap, UInt32, offset6, bool);
 
 	void	* data;	// 20
 	UInt32	offset;	// 28
@@ -56,6 +56,13 @@ public:
 	UInt8	flag1;	// 34
 	UInt8	flag2;	// 35
 	UInt16	pad36;	// 36
+private:
+	inline static auto offset1 = IAL::Offset(101030);
+	inline static auto offset2 = IAL::Offset(101031);
+	inline static auto offset3 = IAL::Offset(101034);
+	inline static auto offset4 = IAL::Offset(67709);
+	inline static auto offset5 = IAL::Offset(101033);
+	inline static auto offset6 = IAL::Offset(101036);
 };
 
 class BSResourceNiBinaryStream : public NiBinaryStream
@@ -77,29 +84,39 @@ public:
 	UInt64	offset;		// 30
 
 	MEMBER_FN_PREFIX(BSResourceNiBinaryStream);
-	DEFINE_MEMBER_FN(Construct, BSResourceNiBinaryStream *, 0x00C76060, const char * filePath, UInt32 unk1, UInt32 unk2);	// unk1 = 0, unk2 = 0
-	DEFINE_MEMBER_FN(ReadLine, UInt32, 0x00C765C0, char * dst, UInt32 dstLen, UInt32 terminator);
+	DEFINE_MEMBER_FN(Construct, BSResourceNiBinaryStream *, offset1, const char * filePath, UInt32 unk1, UInt32 unk2);	// unk1 = 0, unk2 = 0
+	DEFINE_MEMBER_FN(ReadLine, UInt32, offset2, char * dst, UInt32 dstLen, UInt32 terminator);
 	
 	// SE note: it looks like the Read and Write function got inlined? 
 	// Anyway, the readFn and writeFn assigned in ctor are equivalent (in Skyrim32 one just calls the other)
 	// readFn(object, dst, len) -> object.Read(dst, len), in x64, the parameters match.
 	// E93F9EA10EEEC2FC86D868E75F28A023D7453255+51
-	DEFINE_MEMBER_FN(Read, UInt32, 0x00C767B0, void * dst, UInt32 len);
+	DEFINE_MEMBER_FN(Read, UInt32, offset3, void * dst, UInt32 len);
 	// E93F9EA10EEEC2FC86D868E75F28A023D7453255+5C
-	DEFINE_MEMBER_FN(Write, UInt32, 0x00C76820, void * src, UInt32 len);
-	DEFINE_MEMBER_FN(Destroy, void, 0x00C76340);
+	DEFINE_MEMBER_FN(Write, UInt32, offset4, void * src, UInt32 len);
+	DEFINE_MEMBER_FN(Destroy, void, offset5);
 
-	DEFINE_MEMBER_FN(IsValid, bool, 0x00C76480, void);
-	DEFINE_MEMBER_FN(Seek, void, 0x00C76490, SInt32);
+	DEFINE_MEMBER_FN(IsValid, bool, offset6, void);
+	DEFINE_MEMBER_FN(Seek, void, offset7, SInt32);
 	// ??_7BSResourceNiBinaryStream@@6B@ + 18
-	DEFINE_MEMBER_FN(GetOffset, UInt32, 0x00C764E0, void);	// return offset;
+	DEFINE_MEMBER_FN(GetOffset, UInt32, offset8, void);	// return offset;
 	// ??_7BSResourceNiBinaryStream@@6B@ + 28
-	DEFINE_MEMBER_FN(EnableEndianSwap, void, 0x00C76580, bool);
+	DEFINE_MEMBER_FN(EnableEndianSwap, void, offset9, bool);
 
 	UInt32 ReadLine(char * dst, UInt32 dstLen, UInt32 terminator);
 	UInt32 ReadLine_w(wchar_t * dst, UInt32 dstLen, UInt32 terminator);	// length in characters
 	UInt32 Read(void * dst, UInt32 len);
 	UInt32 Write(void * src, UInt32 len);
+private:
+	inline static auto offset1 = IAL::Offset(69636);
+	inline static auto offset2 = IAL::Offset(69644);
+	inline static auto offset3 = IAL::Offset(69647);
+	inline static auto offset4 = IAL::Offset(69648);
+	inline static auto offset5 = IAL::Offset(69638);
+	inline static auto offset6 = IAL::Offset(69639);
+	inline static auto offset7 = IAL::Offset(69640);
+	inline static auto offset8 = IAL::Offset(69641);
+	inline static auto offset9 = IAL::Offset(69643);
 };
 
 STATIC_ASSERT(offsetof(BSResourceNiBinaryStream, readFn) == 0x10);
diff --git a/skse64/skse64/GameThreads.cpp b/skse64/skse64/GameThreads.cpp
index e00fd3d..fd8cb0c 100644
--- a/skse64/skse64/GameThreads.cpp
+++ b/skse64/skse64/GameThreads.cpp
@@ -1,8 +1,9 @@
-#include "skse64/GameThreads.h"
+#include "GameThreads.h"
+
+// B474410E5F15240DC8FB7ABE11650955666F7775+91
+static auto g_taskPool = IAL::Addr<BSTaskPool**>(517228);
 
 BSTaskPool *	BSTaskPool::GetSingleton(void)
 {
-	// B474410E5F15240DC8FB7ABE11650955666F7775+91
-	static RelocPtr<BSTaskPool*> g_taskPool(0x02F38978);
 	return *g_taskPool;
 }
diff --git a/skse64/skse64/GameTypes.cpp b/skse64/skse64/GameTypes.cpp
index 3fea90d..ea8e207 100644
--- a/skse64/skse64/GameTypes.cpp
+++ b/skse64/skse64/GameTypes.cpp
@@ -1,4 +1,4 @@
-#include "skse64/GameTypes.h"
+#include "GameTypes.h"
 
 BSString::~BSString()
 {
diff --git a/skse64/skse64/GameTypes.h b/skse64/skse64/GameTypes.h
index 04a7bbc..5c381ca 100644
--- a/skse64/skse64/GameTypes.h
+++ b/skse64/skse64/GameTypes.h
@@ -1,7 +1,7 @@
 #pragma once
 
 #include "skse64_common/Utilities.h"
-#include "skse64/GameAPI.h"
+#include "GameAPI.h"
 
 class TESForm;
 
@@ -79,12 +79,19 @@ public:
 	//void LockForRead();
 	//void LockForWrite();
 	MEMBER_FN_PREFIX(BSReadWriteLock);
-	DEFINE_MEMBER_FN(LockForRead, void, 0x00C072D0);
-	DEFINE_MEMBER_FN(LockForWrite, void, 0x00C07350);
-	DEFINE_MEMBER_FN(UnlockRead, void, 0x00C07590);
-	DEFINE_MEMBER_FN(UnlockWrite, void, 0x00C075A0);
-	DEFINE_MEMBER_FN(LockForReadAndWrite, void, 0x00C07450);
-	DEFINE_MEMBER_FN(TryLockForWrite, bool, 0x00C07540);
+	DEFINE_MEMBER_FN(LockForRead, void, offset1);
+	DEFINE_MEMBER_FN(LockForWrite, void, offset2);
+	DEFINE_MEMBER_FN(UnlockRead, void, offset3);
+	DEFINE_MEMBER_FN(UnlockWrite, void, offset4);
+	DEFINE_MEMBER_FN(LockForReadAndWrite, void, offset5);
+	DEFINE_MEMBER_FN(TryLockForWrite, bool, offset6);
+private:
+	inline static auto offset1 = IAL::Offset(66976);
+	inline static auto offset2 = IAL::Offset(66977);
+	inline static auto offset3 = IAL::Offset(66982);
+	inline static auto offset4 = IAL::Offset(66983);
+	inline static auto offset5 = IAL::Offset(66979);
+	inline static auto offset6 = IAL::Offset(66981);
 };
 STATIC_ASSERT(sizeof(BSReadWriteLock) == 0x8);
 
@@ -127,14 +134,14 @@ public:
 		const char	* data;
 
 		MEMBER_FN_PREFIX(Ref);
-		DEFINE_MEMBER_FN(ctor, Ref *, 0x00C28BF0, const char * buf);
+		DEFINE_MEMBER_FN(ctor, Ref*, offset1, const char* buf);
 		// E728381B6B25FD30DF9845889144E86E5CC35A25+38
-		DEFINE_MEMBER_FN(ctor_ref, Ref *, 0x00C28C80, const Ref & rhs);
-		DEFINE_MEMBER_FN(Set, Ref *, 0x00C28D60, const char * buf);
+		DEFINE_MEMBER_FN(ctor_ref, Ref*, offset2, const Ref& rhs);
+		DEFINE_MEMBER_FN(Set, Ref*, offset3, const char* buf);
 		// F3F05A02DE2034133B5965D694745B6369FC557D+F3
-		DEFINE_MEMBER_FN(Set_ref, Ref *, 0x00C28E20, const Ref & rhs);
+		DEFINE_MEMBER_FN(Set_ref, Ref*, offset4, const Ref& rhs);
 		// 77D2390F6DC57138CF0E5266EB5BBB0ACABDFBE3+A0
-		DEFINE_MEMBER_FN(Release, void, 0x00C28D40);
+		DEFINE_MEMBER_FN(Release, void, offset5);
 
 		Ref();
 		Ref(const char * buf);
@@ -160,6 +167,12 @@ public:
 	void	* lut[0x10000];	// 00000
 	Lock	lock[0x80];		// 80000
 	UInt8	isInit;			// 80800
+private:
+	inline static auto offset1 = IAL::Offset(67819);
+	inline static auto offset2 = IAL::Offset(67820);
+	inline static auto offset3 = IAL::Offset(67823);
+	inline static auto offset4 = IAL::Offset(67824);
+	inline static auto offset5 = IAL::Offset(67822);
 };
 
 typedef StringCache::Ref BSFixedString;
@@ -186,13 +199,15 @@ public:
 	const char *	Get(void) const;
 
 	MEMBER_FN_PREFIX(BSString);
-	DEFINE_MEMBER_FN(Set, bool, 0x000F9E90, const char * str, UInt32 len);	// len default 0
+	DEFINE_MEMBER_FN(Set, bool, offset1, const char * str, UInt32 len);	// len default 0
 
 private:
 	char	* m_data;	// 00
 	UInt16	m_dataLen;	// 08
 	UInt16	m_bufLen;	// 0A
 	UInt32	pad0C;		// 0C
+private:
+	inline static auto offset1 = IAL::Offset(10979);
 };
 
 
diff --git a/skse64/skse64/GameUtilities.cpp b/skse64/skse64/GameUtilities.cpp
index 0f7df3d..a3823ac 100644
--- a/skse64/skse64/GameUtilities.cpp
+++ b/skse64/skse64/GameUtilities.cpp
@@ -1,4 +1,4 @@
-#include "skse64/GameUtilities.h"
+#include "GameUtilities.h"
 
-RelocAddr <_CalculateCRC32_64> CalculateCRC32_64(0x00C06570);
-RelocAddr <_CalculateCRC32_32> CalculateCRC32_32(0x00C064F0);
+_CalculateCRC32_64 CalculateCRC32_64 = IAL::Addr<_CalculateCRC32_64>(66964);
+_CalculateCRC32_32 CalculateCRC32_32 = IAL::Addr<_CalculateCRC32_32>(66963);
\ No newline at end of file
diff --git a/skse64/skse64/GameUtilities.h b/skse64/skse64/GameUtilities.h
index ca28844..fa68f75 100644
--- a/skse64/skse64/GameUtilities.h
+++ b/skse64/skse64/GameUtilities.h
@@ -3,7 +3,7 @@
 #include "skse64_common/Relocation.h"
 
 typedef void(*_CalculateCRC32_64)(UInt32 * out, UInt64 data);
-extern RelocAddr <_CalculateCRC32_64> CalculateCRC32_64;
+extern _CalculateCRC32_64 CalculateCRC32_64;
 
 typedef void(*_CalculateCRC32_32)(UInt32 * out, UInt32 data);
-extern RelocAddr <_CalculateCRC32_32> CalculateCRC32_32;
+extern _CalculateCRC32_32 CalculateCRC32_32;
diff --git a/skse64/skse64/Hooks_Camera.cpp b/skse64/skse64/Hooks_Camera.cpp
index 8ec9d1b..54c2578 100644
--- a/skse64/skse64/Hooks_Camera.cpp
+++ b/skse64/skse64/Hooks_Camera.cpp
@@ -6,7 +6,7 @@
 #include "xbyak/xbyak.h"
 #include <queue>
 
-RelocAddr <uintptr_t> kInstallCameraHook_Base(0x004F5C80);
+uintptr_t kInstallCameraHook_Base = IAL::Addr<uintptr_t>(432290);
 
 void InstallCameraHook(TESCameraState * oldState, TESCameraState * newState)
 {
@@ -43,7 +43,7 @@ void Hooks_Camera_Commit(void)
 			ret();
 
 			L(origFunctionP5);
-			dq(kInstallCameraHook_Base.GetUIntPtr() + 0x5);
+			dq(kInstallCameraHook_Base + 0x5);
 		}
 	};
 
@@ -51,5 +51,5 @@ void Hooks_Camera_Commit(void)
 	InstallHookCamera_Code code(codeBuf);
 	g_localTrampoline.EndAlloc(code.getCurr());
 
-	g_branchTrampoline.Write5Branch(kInstallCameraHook_Base.GetUIntPtr(), uintptr_t(code.getCode()));	
+	g_branchTrampoline.Write5Branch(kInstallCameraHook_Base, uintptr_t(code.getCode()));	
 }
diff --git a/skse64/skse64/Hooks_Data.cpp b/skse64/skse64/Hooks_Data.cpp
index 3ae8eb6..5c10cb6 100644
--- a/skse64/skse64/Hooks_Data.cpp
+++ b/skse64/skse64/Hooks_Data.cpp
@@ -10,9 +10,9 @@ UInt32 DataHandler::LoadScripts_Hook()
 	return ret;
 }
 
-RelocAddr<uintptr_t>  LoadScripts_Enter(0x005B0120 + 0x3E8);
+uintptr_t LoadScripts_Enter = IAL::Addr(35554, 0x3E8);
 
 void Hooks_Data_Commit(void)
 {
-	g_branchTrampoline.Write5Call(LoadScripts_Enter.GetUIntPtr(), GetFnAddr(&DataHandler::LoadScripts_Hook));
+	g_branchTrampoline.Write5Call(LoadScripts_Enter, GetFnAddr(&DataHandler::LoadScripts_Hook));
 }
diff --git a/skse64/skse64/Hooks_Event.cpp b/skse64/skse64/Hooks_Event.cpp
index ed7acf6..06a6952 100644
--- a/skse64/skse64/Hooks_Event.cpp
+++ b/skse64/skse64/Hooks_Event.cpp
@@ -7,7 +7,7 @@
 #include "skse64/PluginManager.h"
 #include "skse64_common/BranchTrampoline.h"
 
-RelocAddr <uintptr_t> PlayerControls_ctor_Call(0x005ACC20 + 0xD4B);
+uintptr_t PlayerControls_ctor_Call = IAL::Addr(35546, 0xD4B);
 
 PlayerControls * PlayerControls::ctor_Hook(void)
 {
diff --git a/skse64/skse64/Hooks_Gameplay.cpp b/skse64/skse64/Hooks_Gameplay.cpp
index 7b94e1b..15959b5 100644
--- a/skse64/skse64/Hooks_Gameplay.cpp
+++ b/skse64/skse64/Hooks_Gameplay.cpp
@@ -11,8 +11,9 @@
 static UInt32 g_forceContainerCategorization = 0;
 
 // 30A34F24A97F91365E1A3F66BF53263DEDF4B0AD+FA
-RelocPtr<UInt32 *> g_containerMode(0x02F4C328);
-RelocAddr<uintptr_t> kHook_ContainerMode_Base(0x0085F0C0);
+UInt32** g_containerMode = IAL::Addr<UInt32**>(519396);
+
+uintptr_t kHook_ContainerMode_Base = IAL::Addr<uintptr_t>(50213);
 uintptr_t kHook_ContainerMode_Categories = kHook_ContainerMode_Base + 0x6E;
 uintptr_t kHook_ContainerMode_NoCategories = kHook_ContainerMode_Base + 0x82;
 
@@ -22,19 +23,19 @@ void Hooks_Gameplay_EnableForceContainerCategorization(bool enable)
 }
 
 UInt32 g_invalidateKeywordCache = 0;
-RelocAddr<uintptr_t> kHook_BGSKeyword_Base(0x00333B30);
+uintptr_t kHook_BGSKeyword_Base = IAL::Addr<uintptr_t>(23241);
 uintptr_t kHook_BGSKeyword_Create_Return = kHook_BGSKeyword_Base + 6;
 
 // 4C1457C3040DCD34A7E7B2326F1EA2023930C56B+71
-RelocAddr <char *> g_gameVersion(0x01544EA0);
-RelocAddr <uintptr_t> kHook_ShowVersion_Offset(0x008EEE10 + 0x78);
+//RelocAddr <char *> g_gameVersion(0x01544EA0);
+uintptr_t kHook_ShowVersion_Offset = IAL::Addr(52371, 0x78);
 static char		kHook_ShowVersion_FormatString[] =
 "%s.%d (SKSE64 " __PREPRO_TOKEN_STR__(SKSE_VERSION_INTEGER) "."
 __PREPRO_TOKEN_STR__(SKSE_VERSION_INTEGER_MINOR) "."
 __PREPRO_TOKEN_STR__(SKSE_VERSION_INTEGER_BETA) " rel "
 __PREPRO_TOKEN_STR__(SKSE_VERSION_RELEASEIDX) ")";
 
-RelocAddr<uintptr_t> kHook_Crosshair_LookupREFRByHandle_Enter(0x006B0570 + 0x90);
+uintptr_t kHook_Crosshair_LookupREFRByHandle_Enter = IAL::Addr(39535, 0x90); 
 
 NiPointer<TESObjectREFR>	g_curCrosshairRef;
 
@@ -57,7 +58,7 @@ TESObjectREFR* Hooks_Gameplay_GetCrosshairRef()
 
 static UInt8 s_disableMapMenuMouseWheel = 1;
 
-RelocAddr<uintptr_t> kHook_MapMenuMouseWheel_Enter(0x008DCEA0 + 0x18B);
+uintptr_t kHook_MapMenuMouseWheel_Enter = IAL::Addr(52088, 0x18B);
 
 void Hooks_Gameplay_EnableMapMenuMouseWheel(bool enable)
 {
@@ -81,7 +82,7 @@ void Hooks_Gameplay_Commit(void)
 				jnz(useCategories);
 
 				push(rax);
-				mov(rax, g_containerMode.GetUIntPtr());
+				mov(rax, uintptr_t(g_containerMode));
 				mov(eax, ptr[rax]);
 				cmp(eax, 3);
 				pop(rax);
@@ -99,8 +100,8 @@ void Hooks_Gameplay_Commit(void)
 		HookContainerMode_Code code(codeBuf);
 		g_localTrampoline.EndAlloc(code.getCurr());		
 		
-		g_branchTrampoline.Write5Branch(kHook_ContainerMode_Base.GetUIntPtr() + 0x65, uintptr_t(code.getCode()));		
-		SafeWrite16(kHook_ContainerMode_Base.GetUIntPtr() + 0x65 + 5, 0x9090); 		
+		g_branchTrampoline.Write5Branch(kHook_ContainerMode_Base + 0x65, uintptr_t(code.getCode()));		
+		SafeWrite16(kHook_ContainerMode_Base + 0x65 + 5, 0x9090); 		
 	}
 
 	// read config
@@ -126,7 +127,7 @@ void Hooks_Gameplay_Commit(void)
 				jmp(ptr[rip + retnLabel]);
 
 				L(retnLabel);
-				dq(kHook_ShowVersion_Offset.GetUIntPtr() + 0x7);
+				dq(kHook_ShowVersion_Offset + 0x7);
 
 				L(dataLabel);
 				dq(uintptr_t(&kHook_ShowVersion_FormatString));
@@ -137,8 +138,8 @@ void Hooks_Gameplay_Commit(void)
 		ShowVersion_Code code(codeBuf);
 		g_localTrampoline.EndAlloc(code.getCurr());
 
-		g_branchTrampoline.Write5Branch(kHook_ShowVersion_Offset.GetUIntPtr(), uintptr_t(code.getCode()));
-		SafeWrite8(kHook_ShowVersion_Offset.GetUIntPtr() + 6, 0x90);
+		g_branchTrampoline.Write5Branch(kHook_ShowVersion_Offset, uintptr_t(code.getCode()));
+		SafeWrite8(kHook_ShowVersion_Offset + 6, 0x90);
 	}
 
 	//// hook BGSKeyword ctor so we can rebuild the lookup table
@@ -162,8 +163,8 @@ void Hooks_Gameplay_Commit(void)
 		Hook_BGSKeyword_Create_Code code(codeBuf);
 		g_localTrampoline.EndAlloc(code.getCurr());
 
-		g_branchTrampoline.Write5Branch(kHook_BGSKeyword_Base.GetUIntPtr(), uintptr_t(code.getCode()));
-		SafeWrite8(kHook_BGSKeyword_Base.GetUIntPtr() + 5, 0x90);
+		g_branchTrampoline.Write5Branch(kHook_BGSKeyword_Base, uintptr_t(code.getCode()));
+		SafeWrite8(kHook_BGSKeyword_Base + 5, 0x90);
 	}
 
 	//// hook crosshair ref update
@@ -189,6 +190,6 @@ void Hooks_Gameplay_Commit(void)
 		Hook_MapMenuMouseWheel_Code code(codeBuf);
 		g_localTrampoline.EndAlloc(code.getCurr());
 
-		g_branchTrampoline.Write5Branch(kHook_MapMenuMouseWheel_Enter.GetUIntPtr(), uintptr_t(code.getCode()));		
+		g_branchTrampoline.Write5Branch(kHook_MapMenuMouseWheel_Enter, uintptr_t(code.getCode()));		
 	}
 }
diff --git a/skse64/skse64/Hooks_Handlers.cpp b/skse64/skse64/Hooks_Handlers.cpp
index b356e6d..b21c9c7 100644
--- a/skse64/skse64/Hooks_Handlers.cpp
+++ b/skse64/skse64/Hooks_Handlers.cpp
@@ -10,12 +10,12 @@
 #include "skse64/PapyrusEvents.h"
 
 template<class T, UInt32 type, UInt32 slot>
-UInt8 IHandlerFunctor<Actor, UInt32>::ProcessAction(Actor * actor, UInt32 unk04)
+UInt8 IHandlerFunctor<Actor, UInt32>::ProcessAction(Actor* actor, UInt32 unk04)
 {
-	TESForm * object = slot == SKSEActionEvent::kSlot_Voice ? actor->equippedShout : actor->GetEquippedObject(slot == SKSEActionEvent::kSlot_Left);
-	SKSEActionEvent evn(type, actor, object, slot);
-	g_actionEventDispatcher.SendEvent(&evn);
-	return CALL_MEMBER_FN(static_cast<T*>(this), Process_Origin)(actor, unk04);
+    TESForm* object = slot == SKSEActionEvent::kSlot_Voice ? actor->equippedShout : actor->GetEquippedObject(slot == SKSEActionEvent::kSlot_Left);
+    SKSEActionEvent evn(type, actor, object, slot);
+    g_actionEventDispatcher.SendEvent(&evn);
+    return CALL_MEMBER_FN(static_cast<T*>(this), Process_Origin)(actor, unk04);
 }
 
 void Hooks_Handlers_Init(void)
@@ -24,55 +24,55 @@ void Hooks_Handlers_Init(void)
 }
 
 // ??_7WeaponRightSwingHandler@@6B@
-RelocAddr <uintptr_t> WeaponRightSwingHandler_Vtable(0x01671ED0);
+uintptr_t WeaponRightSwingHandler_Vtable = IAL::Addr<uintptr_t>(263295); // (0x01671ED0);
 // ??_7WeaponLeftSwingHandler@@6B@
-RelocAddr <uintptr_t> WeaponLeftSwingHandler_Vtable(0x01671EE8);
+uintptr_t WeaponLeftSwingHandler_Vtable = IAL::Addr<uintptr_t>(263296); //(0x01671EE8);
 // ??_7RightHandSpellFireHandler@@6B@
-RelocAddr <uintptr_t> RightHandSpellFireHandler_Vtable(0x01671F78);
+uintptr_t RightHandSpellFireHandler_Vtable = IAL::Addr<uintptr_t>(263302); //(0x01671F78);
 // ??_7LeftHandSpellFireHandler@@6B@
-RelocAddr <uintptr_t> LeftHandSpellFireHandler_Vtable(0x01671F60);
+uintptr_t LeftHandSpellFireHandler_Vtable = IAL::Addr<uintptr_t>(263301); //(0x01671F60);
 // ??_7RightHandSpellCastHandler@@6B@
-RelocAddr <uintptr_t> RightHandSpellCastHandler_Vtable(0x01671FC0);
+uintptr_t RightHandSpellCastHandler_Vtable = IAL::Addr<uintptr_t>(263305); //(0x01671FC0);
 // ??_7LeftHandSpellCastHandler@@6B@
-RelocAddr <uintptr_t> LeftHandSpellCastHandler_Vtable(0x01671FA8);
+uintptr_t LeftHandSpellCastHandler_Vtable = IAL::Addr<uintptr_t>(263304); //(0x01671FA8);
 // ??_7VoiceSpellFireHandler@@6B@
-RelocAddr <uintptr_t> VoiceSpellFireHandler_Vtable(0x01671F90);
+uintptr_t VoiceSpellFireHandler_Vtable = IAL::Addr<uintptr_t>(263303); //(0x01671F90);
 // ??_7VoiceSpellCastHandler@@6B@
-RelocAddr <uintptr_t> VoiceSpellCastHandler_Vtable(0x01671FD8);
+uintptr_t VoiceSpellCastHandler_Vtable = IAL::Addr<uintptr_t>(263306); //(0x01671FD8);
 // ??_7BowDrawnHandler@@6B@
-RelocAddr <uintptr_t> BowDrawnHandler_Vtable(0x01672308);
+uintptr_t BowDrawnHandler_Vtable = IAL::Addr<uintptr_t>(263340); //(0x01672308);
 // ??_7BowReleaseHandler@@6B@
-RelocAddr <uintptr_t> BowReleaseHandler_Vtable(0x01672320);
+uintptr_t BowReleaseHandler_Vtable = IAL::Addr<uintptr_t>(263341); //(0x01672320);
 // ??_7WeaponBeginDrawRightHandler@@6B@
-RelocAddr <uintptr_t> WeaponBeginDrawRightHandler_Vtable(0x01671FF0);
+uintptr_t WeaponBeginDrawRightHandler_Vtable = IAL::Addr<uintptr_t>(263307); //(0x01671FF0);
 // ??_7WeaponBeginSheatheRightHandler@@6B@
-RelocAddr <uintptr_t> WeaponBeginSheatheRightHandler_Vtable(0x01672008);
+uintptr_t WeaponBeginSheatheRightHandler_Vtable = IAL::Addr<uintptr_t>(263308); //(0x01672008);
 // ??_7RightHandWeaponDrawHandler@@6B@
-RelocAddr <uintptr_t> RightHandWeaponDrawHandler_Vtable(0x01672020);
+uintptr_t RightHandWeaponDrawHandler_Vtable = IAL::Addr<uintptr_t>(263309); //(0x01672020);
 // ??_7RightHandWeaponSheatheHandler@@6B@
-RelocAddr <uintptr_t> RightHandWeaponSheatheHandler_Vtable(0x01672038);
+uintptr_t RightHandWeaponSheatheHandler_Vtable = IAL::Addr<uintptr_t>(263310); //(0x01672038);
 
 void Hooks_Handlers_Commit(void)
 {
-	// vtbl overwrites
-	SafeWrite64(WeaponRightSwingHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<WeaponRightSwingHandler, SKSEActionEvent::kType_WeaponSwing, SKSEActionEvent::kSlot_Right>));
-	SafeWrite64(WeaponLeftSwingHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<WeaponLeftSwingHandler, SKSEActionEvent::kType_WeaponSwing, SKSEActionEvent::kSlot_Left>));
+    // vtbl overwrites
+    SafeWrite64(WeaponRightSwingHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<WeaponRightSwingHandler, SKSEActionEvent::kType_WeaponSwing, SKSEActionEvent::kSlot_Right>));
+    SafeWrite64(WeaponLeftSwingHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<WeaponLeftSwingHandler, SKSEActionEvent::kType_WeaponSwing, SKSEActionEvent::kSlot_Left>));
 
-	SafeWrite64(RightHandSpellFireHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<RightHandSpellFireHandler, SKSEActionEvent::kType_SpellFire, SKSEActionEvent::kSlot_Right>));
-	SafeWrite64(LeftHandSpellFireHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<LeftHandSpellFireHandler, SKSEActionEvent::kType_SpellFire, SKSEActionEvent::kSlot_Left>));
+    SafeWrite64(RightHandSpellFireHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<RightHandSpellFireHandler, SKSEActionEvent::kType_SpellFire, SKSEActionEvent::kSlot_Right>));
+    SafeWrite64(LeftHandSpellFireHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<LeftHandSpellFireHandler, SKSEActionEvent::kType_SpellFire, SKSEActionEvent::kSlot_Left>));
 
-	SafeWrite64(RightHandSpellCastHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<RightHandSpellCastHandler, SKSEActionEvent::kType_SpellCast, SKSEActionEvent::kSlot_Right>));
-	SafeWrite64(LeftHandSpellCastHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<LeftHandSpellCastHandler, SKSEActionEvent::kType_SpellCast, SKSEActionEvent::kSlot_Left>));
+    SafeWrite64(RightHandSpellCastHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<RightHandSpellCastHandler, SKSEActionEvent::kType_SpellCast, SKSEActionEvent::kSlot_Right>));
+    SafeWrite64(LeftHandSpellCastHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<LeftHandSpellCastHandler, SKSEActionEvent::kType_SpellCast, SKSEActionEvent::kSlot_Left>));
 
-	SafeWrite64(VoiceSpellFireHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<VoiceSpellFireHandler, SKSEActionEvent::kType_VoiceFire, SKSEActionEvent::kSlot_Voice>));
-	SafeWrite64(VoiceSpellCastHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<VoiceSpellCastHandler, SKSEActionEvent::kType_VoiceCast, SKSEActionEvent::kSlot_Voice>));
+    SafeWrite64(VoiceSpellFireHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<VoiceSpellFireHandler, SKSEActionEvent::kType_VoiceFire, SKSEActionEvent::kSlot_Voice>));
+    SafeWrite64(VoiceSpellCastHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<VoiceSpellCastHandler, SKSEActionEvent::kType_VoiceCast, SKSEActionEvent::kSlot_Voice>));
 
-	SafeWrite64(BowDrawnHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<BowDrawnHandler, SKSEActionEvent::kType_BowDraw, SKSEActionEvent::kSlot_Right>));
-	SafeWrite64(BowReleaseHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<BowReleaseHandler, SKSEActionEvent::kType_BowRelease, SKSEActionEvent::kSlot_Right>));
+    SafeWrite64(BowDrawnHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<BowDrawnHandler, SKSEActionEvent::kType_BowDraw, SKSEActionEvent::kSlot_Right>));
+    SafeWrite64(BowReleaseHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<BowReleaseHandler, SKSEActionEvent::kType_BowRelease, SKSEActionEvent::kSlot_Right>));
 
-	SafeWrite64(WeaponBeginDrawRightHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<WeaponBeginDrawRightHandler, SKSEActionEvent::kType_BeginDraw, SKSEActionEvent::kSlot_Right>));
-	SafeWrite64(WeaponBeginSheatheRightHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<WeaponBeginSheatheRightHandler, SKSEActionEvent::kType_BeginSheathe, SKSEActionEvent::kSlot_Right>));
+    SafeWrite64(WeaponBeginDrawRightHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<WeaponBeginDrawRightHandler, SKSEActionEvent::kType_BeginDraw, SKSEActionEvent::kSlot_Right>));
+    SafeWrite64(WeaponBeginSheatheRightHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<WeaponBeginSheatheRightHandler, SKSEActionEvent::kType_BeginSheathe, SKSEActionEvent::kSlot_Right>));
 
-	SafeWrite64(RightHandWeaponDrawHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<RightHandWeaponDrawHandler, SKSEActionEvent::kType_EndDraw, SKSEActionEvent::kSlot_Right>));
-	SafeWrite64(RightHandWeaponSheatheHandler_Vtable.GetUIntPtr() + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<RightHandWeaponSheatheHandler, SKSEActionEvent::kType_EndSheathe, SKSEActionEvent::kSlot_Right>));
+    SafeWrite64(RightHandWeaponDrawHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<RightHandWeaponDrawHandler, SKSEActionEvent::kType_EndDraw, SKSEActionEvent::kSlot_Right>));
+    SafeWrite64(RightHandWeaponSheatheHandler_Vtable + 0x08, GetFnAddr(&IHandlerFunctor<Actor, UInt32>::ProcessAction<RightHandWeaponSheatheHandler, SKSEActionEvent::kType_EndSheathe, SKSEActionEvent::kSlot_Right>));
 }
diff --git a/skse64/skse64/Hooks_NetImmerse.cpp b/skse64/skse64/Hooks_NetImmerse.cpp
index badbd89..1b041e9 100644
--- a/skse64/skse64/Hooks_NetImmerse.cpp
+++ b/skse64/skse64/Hooks_NetImmerse.cpp
@@ -12,9 +12,9 @@
 
 // Used by UpdatePlayerTints to create a render target of a particular size
 // 799F89E4A13D41B1F88644E1F6AFA5A633684C51+345
-RelocPtr<UInt32> g_tintTextureWidth(0x0302BCC4);
+UInt32* g_tintTextureWidth = IAL::Addr<UInt32*>(524974);
 // 799F89E4A13D41B1F88644E1F6AFA5A633684C51+33E
-RelocPtr<UInt32> g_tintTextureHeight(0x0302BCC8);
+UInt32* g_tintTextureHeight = IAL::Addr<UInt32*>(524975); 
 
 UInt32 g_tintTextureResolution = 512;
 
@@ -32,7 +32,7 @@ struct RenderTargetInfo
 };
 
 typedef void ( * _CreateRenderTarget)(void * renderTargetManager, UInt64 type, RenderTargetInfo * info);
-RelocAddr<_CreateRenderTarget> CreateRenderTarget(0x00D74B60);
+_CreateRenderTarget CreateRenderTarget = IAL::Addr<_CreateRenderTarget>(75638); 
 _CreateRenderTarget CreateRenderTarget_Original = nullptr;
 
 void CreateRenderTarget_Hook(BSRenderManager ** targetManager, UInt64 type, RenderTargetInfo * info)
@@ -65,7 +65,7 @@ void Hooks_NetImmerse_Init(void)
 	}
 }
 
-RelocAddr <uintptr_t> UpdateEquipment_Enter(0x00693110 + 0x189);
+uintptr_t UpdateEquipment_Enter = IAL::Addr(39181, 0x189); 
 
 void Hooks_NetImmerse_Commit(void)
 {
@@ -81,7 +81,7 @@ void Hooks_NetImmerse_Commit(void)
 				jmp(ptr[rip + retnLabel]);
 
 				L(retnLabel);
-				dq(CreateRenderTarget.GetUIntPtr() + 7);
+				dq(uintptr_t(CreateRenderTarget) + 7);
 			}
 		};
 
@@ -91,7 +91,7 @@ void Hooks_NetImmerse_Commit(void)
 
 		CreateRenderTarget_Original = (_CreateRenderTarget)codeBuf;
 
-		g_branchTrampoline.Write6Branch(CreateRenderTarget.GetUIntPtr(), (uintptr_t)CreateRenderTarget_Hook);
+		g_branchTrampoline.Write6Branch(uintptr_t(CreateRenderTarget), (uintptr_t)CreateRenderTarget_Hook);
 	}
 
 	g_branchTrampoline.Write5Call(UpdateEquipment_Enter, GetFnAddr(&ActorProcessManager::UpdateEquipment_Hooked));
diff --git a/skse64/skse64/Hooks_Papyrus.cpp b/skse64/skse64/Hooks_Papyrus.cpp
index 8d08962..b51e8da 100644
--- a/skse64/skse64/Hooks_Papyrus.cpp
+++ b/skse64/skse64/Hooks_Papyrus.cpp
@@ -69,16 +69,16 @@
 #include "xbyak/xbyak.h"
 
 typedef void(*_RegisterPapyrusFunctions)(VMClassRegistry ** registry);
-RelocAddr<_RegisterPapyrusFunctions> RegisterPapyrusFunctions(0x00980190);
-RelocAddr <uintptr_t> RegisterPapyrusFunctions_Start(0x009204A0 + 0xC7F);
+_RegisterPapyrusFunctions RegisterPapyrusFunctions = IAL::Addr<_RegisterPapyrusFunctions>(55141);
+uintptr_t RegisterPapyrusFunctions_Start = IAL::Addr(53108, 0xC7F); 
 
-RelocAddr<uintptr_t> UnregisterFromSleep_Enter(0x00925180 + 0x31);
-RelocAddr<uintptr_t> RevertGlobalData_Enter(0x0092B8A0 + 0x22);
-RelocAddr<uintptr_t> RevertGlobalData_Enter2(0x0092BDE0 + 0x190);
-RelocAddr<uintptr_t> SaveRegsSleep_Enter(0x0092E290 + 0x110);
-RelocAddr<uintptr_t> LoadRegsSleep_Enter(0x0092F030 + 0x1E6);
+uintptr_t UnregisterFromSleep_Enter = IAL::Addr(53142, 0x31);
+uintptr_t RevertGlobalData_Enter = IAL::Addr(53208, 0x22);
+uintptr_t RevertGlobalData_Enter2 = IAL::Addr(53214, 0x190);
+uintptr_t SaveRegsSleep_Enter = IAL::Addr(53229, 0x110);
+uintptr_t LoadRegsSleep_Enter = IAL::Addr(53237, 0x1E6);
 
-RelocAddr<uintptr_t> kDFQueueHook_Base(0x00931470);
+uintptr_t kDFQueueHook_Base = IAL::Addr<uintptr_t>(53257);
 uintptr_t  kDFQueueHook_HookAddr = kDFQueueHook_Base + 0x6E;
 uintptr_t kDFQueueHook_Entry_retn = kDFQueueHook_Base + 0x73;
 
diff --git a/skse64/skse64/Hooks_SaveLoad.cpp b/skse64/skse64/Hooks_SaveLoad.cpp
index 66763c2..f594055 100644
--- a/skse64/skse64/Hooks_SaveLoad.cpp
+++ b/skse64/skse64/Hooks_SaveLoad.cpp
@@ -124,13 +124,13 @@ UInt8 TESQuest::NewGame_Hook(UInt8 * unk1, UInt8 unk2)
 	return ret;
 }
 
-RelocAddr <uintptr_t> SaveGame_HookTarget_Enter(0x00586DE0 + 0x18B);
-RelocAddr <uintptr_t> SaveGame2_HookTarget_Enter(0x005875F0 + 0x138);
-RelocAddr <uintptr_t> LoadGame_HookTarget_Enter(0x0058AE30 + 0x26C);
-RelocAddr <uintptr_t> ProcessEvents_Enter(0x005B2FF0 + 0x7F);
-RelocAddr <uintptr_t> NewGame_Enter(0x008A20E0 + 0x59);
-RelocAddr <uintptr_t> DeleteSaveGame_Enter(0x005794C0 + 0x77);
-RelocAddr <uintptr_t> DeleteSaveGame_Enter2(0x00579590 + 0x17);
+uintptr_t SaveGame_HookTarget_Enter = IAL::Addr(34818, 0x18B); 
+uintptr_t SaveGame2_HookTarget_Enter = IAL::Addr(34823, 0x138); 
+uintptr_t LoadGame_HookTarget_Enter = IAL::Addr(34872, 0x26C); 
+uintptr_t ProcessEvents_Enter = IAL::Addr(35565, 0x7F);
+uintptr_t NewGame_Enter = IAL::Addr(51246, 0x59); 
+uintptr_t DeleteSaveGame_Enter = IAL::Addr(34613, 0x77); 
+uintptr_t DeleteSaveGame_Enter2 = IAL::Addr(34615, 0x17);
 
 void Hooks_SaveLoad_Commit(void)
 {
diff --git a/skse64/skse64/Hooks_Scaleform.cpp b/skse64/skse64/Hooks_Scaleform.cpp
index d0d37e8..7cf881e 100644
--- a/skse64/skse64/Hooks_Scaleform.cpp
+++ b/skse64/skse64/Hooks_Scaleform.cpp
@@ -1148,15 +1148,17 @@ public:
 	UInt8						unk30[0x10];	// 30 
 
 	MEMBER_FN_PREFIX(StandardItemData);
-	DEFINE_MEMBER_FN(ctor_data, StandardItemData *, 0x00854E40, GFxMovieView ** movieView, InventoryEntryData * objDesc, UInt64 unk);
+	DEFINE_MEMBER_FN(ctor_data, StandardItemData *, offset1, GFxMovieView ** movieView, InventoryEntryData * objDesc, UInt64 unk);
 
 	StandardItemData * ctor_Hook(GFxMovieView ** movieView, InventoryEntryData * objDesc, UInt64 unk);
 
 	static uintptr_t GetCtorHookAddress()
 	{
-		static RelocAddr<uintptr_t> kCtorHookAddress(0x00856050 + 0x97);
-		return kCtorHookAddress.GetUIntPtr();
+		static uintptr_t kCtorHookAddress = IAL::Addr(50071, 0x97); 
+		return kCtorHookAddress;
 	}
+private:
+	inline static auto offset1 = IAL::Offset(50039);
 };
 STATIC_ASSERT(offsetof(StandardItemData, fxValue) == 0x18);
 STATIC_ASSERT(sizeof(StandardItemData) == 0x40);
@@ -1203,15 +1205,17 @@ public:
 
 
 	MEMBER_FN_PREFIX(MagicItemData);
-	DEFINE_MEMBER_FN(ctor_data, MagicItemData *, 0x0089E730, GFxMovieView ** movieView, TESForm * pForm, int unk); // unk is ignored by ctor
+	DEFINE_MEMBER_FN(ctor_data, MagicItemData *, offset1, GFxMovieView ** movieView, TESForm * pForm, int unk); // unk is ignored by ctor
 
 	static uintptr_t GetCtorHookAddress()
 	{
-		static RelocAddr<uintptr_t> kCtorHookAddress(0x0089FB00 + 0x97);
-		return kCtorHookAddress.GetUIntPtr();
+		static uintptr_t kCtorHookAddress = IAL::Addr(51197, 0x97);
+		return kCtorHookAddress;
 	}
 
 	MagicItemData * ctor_Hook(GFxMovieView ** movieView, TESForm * pForm, int unk);
+private:
+	inline static auto offset1 = IAL::Offset(51176);
 };
 STATIC_ASSERT(offsetof(MagicItemData, fxValue) == 0x20);
 STATIC_ASSERT(sizeof(MagicItemData) == 0x48);
@@ -1247,7 +1251,7 @@ namespace favMenuDataHook
 
 	// 1 - Item
 
-	RelocAddr<uintptr_t> kSetItemData_Base(0x00878850);
+	uintptr_t kSetItemData_Base = IAL::Addr<uintptr_t>(50650);
 	uintptr_t kSetItemData_retn = kSetItemData_Base + 0xCA;
 
 	void SetItemData(IMenu * menu, GFxValue * dataContainer, InventoryEntryData * objDesc)
@@ -1275,7 +1279,7 @@ namespace favMenuDataHook
 	};
 
 	// 2 - Magic
-	RelocAddr<uintptr_t> kSetMagicData_Base(0x00879770);
+	uintptr_t kSetMagicData_Base = IAL::Addr<uintptr_t>(50657);
 	uintptr_t kSetMagicData_retn = kSetMagicData_Base + 0xA1;
 
 	void SetMagicData(GFxMovieView * movieView, GFxValue * dataContainer, TESForm * form)
@@ -1298,7 +1302,7 @@ namespace favMenuDataHook
 	};
 
 	// 3 - VampireLord
-	RelocAddr<uintptr_t> kSetVampireData_Base(0x00879B40);
+	uintptr_t kSetVampireData_Base = IAL::Addr<uintptr_t>(50659);
 	uintptr_t kSetVampireData_retn = kSetVampireData_Base + 0x98;
 }
 
@@ -1306,7 +1310,7 @@ namespace favMenuDataHook
 
 namespace enchantMenuDataHook
 {
-	RelocAddr<uintptr_t> kSetData_Base(0x00864C50);
+	uintptr_t kSetData_Base = IAL::Addr<uintptr_t>(50311);
 	uintptr_t kSetData_retn = kSetData_Base + 0xDF;
 }
 
@@ -1384,14 +1388,14 @@ void EnchantConstructMenu_CategoryListEntry_SetData_Extended(EnchantConstructMen
 
 namespace smithingMenuDataHook
 {
-	RelocAddr<uintptr_t> kSetData_Base(0x00864B00);
+	uintptr_t kSetData_Base = IAL::Addr<uintptr_t>(50310);
 
 	typedef void (__cdecl * _SetData_Hooked)(GFxValue * dataContainer, InventoryEntryData ** pObjDesc, SmithingMenu * menu);
 	
 	void SetData_Hooked(GFxValue * dataContainer, InventoryEntryData ** pObjDesc, SmithingMenu * menu)
 	{
-		static RelocAddr<uintptr_t> SetData_Hooked_Address(0x00870700);
-		((_SetData_Hooked)(SetData_Hooked_Address.GetUIntPtr())) (dataContainer, pObjDesc, menu);
+		static auto SetData_Hooked_Address = IAL::Addr<_SetData_Hooked>(50513);
+		SetData_Hooked_Address(dataContainer, pObjDesc, menu);
 	}
 
 	void SetData_Hook(GFxValue * dataContainer, InventoryEntryData ** pObjDesc, SmithingMenu * menu)
@@ -1422,14 +1426,14 @@ namespace smithingMenuDataHook
 namespace craftingMenuDataHook
 {
 	// 80050DF3D298FB230378FF3D7BC6F6D7BBAA21FB+22D
-	RelocAddr<uintptr_t> kSetData_Base(0x00864EF0);
+	uintptr_t kSetData_Base = IAL::Addr<uintptr_t>(50313);
 
 	typedef void (__cdecl * _SetData_Hooked)(GFxValue * dataContainer, ConstructibleObjectMenu::EntryData * entry, ConstructibleObjectMenu * menu);
 	
 	void SetData_Hooked(GFxValue * dataContainer, ConstructibleObjectMenu::EntryData * entry, ConstructibleObjectMenu * menu)
 	{
-		static RelocAddr<uintptr_t> SetData_Hooked_Address(0x00870390);
-		((_SetData_Hooked)(SetData_Hooked_Address.GetUIntPtr())) (dataContainer, entry, menu);
+		static auto SetData_Hooked_Address = IAL::Addr<_SetData_Hooked>(50511);
+		SetData_Hooked_Address(dataContainer, entry, menu);
 	}
 
 	void SetData_Hook(GFxValue * dataContainer, ConstructibleObjectMenu::EntryData * entry, ConstructibleObjectMenu * menu)
@@ -1464,14 +1468,14 @@ namespace alchemyMenuDataHook
 {
 	// Item data
 	// 33BD5B22D8D665F5A8DB6AB3EC6EB874A57E3E53+263
-	RelocAddr<uintptr_t> kSetData_Base(0x00864DA0);
+	uintptr_t kSetData_Base = IAL::Addr<uintptr_t>(50312);
 
 	typedef void (__cdecl * _SetData_Hooked)(GFxValue * dataContainer, AlchemyMenu::EntryData * entry, AlchemyMenu * menu);
 	
 	void SetData_Hooked(GFxValue * dataContainer, AlchemyMenu::EntryData * entry, AlchemyMenu * menu)
 	{
-		static RelocAddr<uintptr_t> SetData_Hooked_Address(0x008704F0);
-		((_SetData_Hooked)(SetData_Hooked_Address.GetUIntPtr())) (dataContainer, entry, menu);
+		static auto SetData_Hooked_Address = IAL::Addr<_SetData_Hooked>(50512);
+		SetData_Hooked_Address(dataContainer, entry, menu);
 	}
 
 	void SetData_Hook(GFxValue * dataContainer, AlchemyMenu::EntryData * entry, AlchemyMenu * menu)
@@ -1498,7 +1502,7 @@ namespace alchemyMenuDataHook
 	// Category arguments 
 	// (note: this passes data in arguments to SetCategoriesList. makes it more difficult to extend)
 
-	RelocAddr<uintptr_t> kExtendCategoryArgs_Base(0x00871700);
+	uintptr_t kExtendCategoryArgs_Base = IAL::Addr<uintptr_t>(50528);
 	uintptr_t kExtendCategoryArgs_retn = kExtendCategoryArgs_Base + 0x59D;
 
 	class GFxInvokeHook
@@ -1528,7 +1532,7 @@ namespace alchemyMenuDataHook
 
 namespace GFxLoaderHook
 {
-	RelocPtr<UInt64> kCtor_Base(0x005AE010 + 0xA08);
+	uintptr_t kCtor_Base = IAL::Addr(35548, 0xA08);
 
 	GFxLoader *ctor_Hook(GFxLoader * loader)
 	{
@@ -1626,7 +1630,7 @@ void InstallHooks(GFxMovieView * view)
 	globals.SetMember("skse", &skse);
 }
 
-RelocAddr <uintptr_t> kInstallHooks_Enter(0x00ECE790 + 0x1D9);
+uintptr_t kInstallHooks_Enter = IAL::Addr(80302, 0x1D9);
 
 void InstallHooks_Entry(GFxMovieView *pthis, UInt32 unk)
 {
@@ -1692,8 +1696,8 @@ void Hooks_Scaleform_Commit(void)
 		SetItemDataEntry_Code code(codeBuf);
 		g_localTrampoline.EndAlloc(code.getCurr());
 
-		g_branchTrampoline.Write5Branch(favMenuDataHook::kSetItemData_Base.GetUIntPtr() + 0xC4, uintptr_t(code.getCode()));
-		SafeWrite8(favMenuDataHook::kSetItemData_Base.GetUIntPtr() + 0xC4 + 5, 0x90);
+		g_branchTrampoline.Write5Branch(favMenuDataHook::kSetItemData_Base + 0xC4, uintptr_t(code.getCode()));
+		SafeWrite8(favMenuDataHook::kSetItemData_Base + 0xC4 + 5, 0x90);
 	}
 
 	{
@@ -1725,8 +1729,8 @@ void Hooks_Scaleform_Commit(void)
 		SetMagicData_Entry_Code code(codeBuf);
 		g_localTrampoline.EndAlloc(code.getCurr());
 
-		g_branchTrampoline.Write5Branch(favMenuDataHook::kSetMagicData_Base.GetUIntPtr() + 0x9B, uintptr_t(code.getCode()));
-		SafeWrite8(favMenuDataHook::kSetMagicData_Base.GetUIntPtr() + 0x9B + 5, 0x90);
+		g_branchTrampoline.Write5Branch(favMenuDataHook::kSetMagicData_Base + 0x9B, uintptr_t(code.getCode()));
+		SafeWrite8(favMenuDataHook::kSetMagicData_Base + 0x9B + 5, 0x90);
 	}
 
 	{
@@ -1758,8 +1762,8 @@ void Hooks_Scaleform_Commit(void)
 		SetVampireData_Entry_Code code(codeBuf);
 		g_localTrampoline.EndAlloc(code.getCurr());
 
-		g_branchTrampoline.Write5Branch(favMenuDataHook::kSetVampireData_Base.GetUIntPtr() + 0x92, uintptr_t(code.getCode()));
-		SafeWrite8(favMenuDataHook::kSetVampireData_Base.GetUIntPtr() + 0x92 + 5, 0x90);
+		g_branchTrampoline.Write5Branch(favMenuDataHook::kSetVampireData_Base + 0x92, uintptr_t(code.getCode()));
+		SafeWrite8(favMenuDataHook::kSetVampireData_Base + 0x92 + 5, 0x90);
 	} 
 	// end of fav menu data hooks
 
@@ -1783,16 +1787,16 @@ void Hooks_Scaleform_Commit(void)
 		SetDataEntry_Code code(codeBuf);
 		g_localTrampoline.EndAlloc(code.getCurr());
 
-		g_branchTrampoline.Write5Branch(enchantMenuDataHook::kSetData_Base.GetUIntPtr() + 0xDA, uintptr_t(code.getCode()));		
+		g_branchTrampoline.Write5Branch(enchantMenuDataHook::kSetData_Base + 0xDA, uintptr_t(code.getCode()));		
 	}
 
-	g_branchTrampoline.Write5Call(smithingMenuDataHook::kSetData_Base.GetUIntPtr() + 0xDD, (uintptr_t)smithingMenuDataHook::SetData_Hook);
-	g_branchTrampoline.Write5Call(craftingMenuDataHook::kSetData_Base.GetUIntPtr() + 0xDD, (uintptr_t)craftingMenuDataHook::SetData_Hook);
-	g_branchTrampoline.Write5Call(alchemyMenuDataHook::kSetData_Base.GetUIntPtr() + 0xDD, (uintptr_t)alchemyMenuDataHook::SetData_Hook);
+	g_branchTrampoline.Write5Call(smithingMenuDataHook::kSetData_Base + 0xDD, (uintptr_t)smithingMenuDataHook::SetData_Hook);
+	g_branchTrampoline.Write5Call(craftingMenuDataHook::kSetData_Base + 0xDD, (uintptr_t)craftingMenuDataHook::SetData_Hook);
+	g_branchTrampoline.Write5Call(alchemyMenuDataHook::kSetData_Base + 0xDD, (uintptr_t)alchemyMenuDataHook::SetData_Hook);
 	// The call here instead of branch like in SKSE32 is not an error. This patch doesn't need asm anymore (look at alchemyMenuDataHook::ExtendCategoryArgs_Entry_Intermediate for more info)
-	g_branchTrampoline.Write5Call(alchemyMenuDataHook::kExtendCategoryArgs_Base.GetUIntPtr() + 0x598, (uintptr_t)alchemyMenuDataHook::ExtendCategoryArgs_Entry_Intermediate);
+	g_branchTrampoline.Write5Call(alchemyMenuDataHook::kExtendCategoryArgs_Base + 0x598, (uintptr_t)alchemyMenuDataHook::ExtendCategoryArgs_Entry_Intermediate);
 	// End of crafting menu data hooks
 
 	// gfxloader creation hook
-	g_branchTrampoline.Write5Call(GFxLoaderHook::kCtor_Base.GetUIntPtr(), GetFnAddr(&GFxLoaderHook::ctor_Hook));
+	g_branchTrampoline.Write5Call(GFxLoaderHook::kCtor_Base, GetFnAddr(&GFxLoaderHook::ctor_Hook));
 }
diff --git a/skse64/skse64/Hooks_Threads.cpp b/skse64/skse64/Hooks_Threads.cpp
index 911483f..6c69b0a 100644
--- a/skse64/skse64/Hooks_Threads.cpp
+++ b/skse64/skse64/Hooks_Threads.cpp
@@ -7,6 +7,8 @@
 #include "common/ICriticalSection.h"
 #include <queue>
 
+#include <chrono>
+
 ICriticalSection			s_taskQueueLock;
 std::queue<TaskDelegate*>	s_tasks;
 
@@ -44,8 +46,8 @@ void Hooks_Threads_Init(void)
 	
 }
 
-RelocAddr <uintptr_t> ProcessTasks_HookTarget_Enter(0x005B2FF0 + 0x6B8);
-RelocAddr <uintptr_t> ProcessTasks_HookTarget_Enter2(0x005B44C0 + 0x1C);
+uintptr_t ProcessTasks_HookTarget_Enter = IAL::Addr(35565, 0x6B8);
+uintptr_t ProcessTasks_HookTarget_Enter2 = IAL::Addr(35582, 0x1C);
 
 void Hooks_Threads_Commit(void)
 {
diff --git a/skse64/skse64/Hooks_UI.cpp b/skse64/skse64/Hooks_UI.cpp
index 9b32671..964ace4 100644
--- a/skse64/skse64/Hooks_UI.cpp
+++ b/skse64/skse64/Hooks_UI.cpp
@@ -79,7 +79,7 @@ void TaskInterface::AddUITask(UIDelegate_v1* task)
 	}
 }
 
-RelocAddr <uintptr_t> ProcessEventQueue_HookTarget_Enter(0x00EBE630 + 0xA14);
+uintptr_t ProcessEventQueue_HookTarget_Enter = IAL::Addr(79945, 0xA14); 
 
 void Hooks_UI_Commit(void)
 {
diff --git a/skse64/skse64/NiAdditionalGeometryData.cpp b/skse64/skse64/NiAdditionalGeometryData.cpp
index 70d6834..664d90d 100644
--- a/skse64/skse64/NiAdditionalGeometryData.cpp
+++ b/skse64/skse64/NiAdditionalGeometryData.cpp
@@ -1 +1 @@
-#include "skse64/NiAdditionalGeometryData.h"
+#include "NiAdditionalGeometryData.h"
diff --git a/skse64/skse64/NiAdditionalGeometryData.h b/skse64/skse64/NiAdditionalGeometryData.h
index aea2792..f27a84c 100644
--- a/skse64/skse64/NiAdditionalGeometryData.h
+++ b/skse64/skse64/NiAdditionalGeometryData.h
@@ -1,7 +1,7 @@
 #pragma once
 
-#include "skse64/NiObjects.h"
-#include "skse64/NiTypes.h"
+#include "NiObjects.h"
+#include "NiTypes.h"
 
 class NiAdditionalGeometryData : public NiObject
 {
diff --git a/skse64/skse64/NiControllers.cpp b/skse64/skse64/NiControllers.cpp
index 432a7e4..a3d5368 100644
--- a/skse64/skse64/NiControllers.cpp
+++ b/skse64/skse64/NiControllers.cpp
@@ -1 +1 @@
-#include "skse64/NiControllers.h"
+#include "NiControllers.h"
diff --git a/skse64/skse64/NiControllers.h b/skse64/skse64/NiControllers.h
index 9dada38..8eb8327 100644
--- a/skse64/skse64/NiControllers.h
+++ b/skse64/skse64/NiControllers.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "skse64/NiNodes.h"
+#include "NiNodes.h"
 
 /**** controllers
  *	NiTimeController
diff --git a/skse64/skse64/NiExtraData.cpp b/skse64/skse64/NiExtraData.cpp
index 105c0df..566ddc7 100644
--- a/skse64/skse64/NiExtraData.cpp
+++ b/skse64/skse64/NiExtraData.cpp
@@ -1,14 +1,14 @@
-#include "skse64/NiExtraData.h"
-#include "skse64/NiGeometry.h"
+#include "NiExtraData.h"
+#include "NiGeometry.h"
 
 // ??_7BSFaceGenBaseMorphExtraData@@6B@
-RelocAddr<uintptr_t> s_BSFaceGenBaseMorphExtraDataVtbl(0x01601508);
+uintptr_t s_BSFaceGenBaseMorphExtraDataVtbl = IAL::Addr<uintptr_t>(252391); 
 // ??_7NiStringsExtraData@@6B@
-RelocAddr<uintptr_t> s_NiStringsExtraDataVtbl(0x01766B50);
+uintptr_t s_NiStringsExtraDataVtbl = IAL::Addr<uintptr_t>(286151);
 // ??_7NiBinaryExtraData@@6B@
-RelocAddr<uintptr_t> s_NiBinaryExtraDataVtbl(0x0176B0B0);
+uintptr_t s_NiBinaryExtraDataVtbl = IAL::Addr<uintptr_t>(286417);
 // ??_7NiBooleanExtraData@@6B@
-RelocAddr<uintptr_t> s_NiBooleanExtraDataVtbl(0x0176B240);
+uintptr_t s_NiBooleanExtraDataVtbl = IAL::Addr<uintptr_t>(286420);
 
 NiExtraData* NiExtraData::Create(UInt32 size, uintptr_t vtbl)
 {
@@ -21,7 +21,7 @@ NiExtraData* NiExtraData::Create(UInt32 size, uintptr_t vtbl)
 
 NiStringsExtraData * NiStringsExtraData::Create(BSFixedString name, BSFixedString * stringData, UInt32 size)
 {
-	NiStringsExtraData* data = (NiStringsExtraData*)NiExtraData::Create(sizeof(NiStringsExtraData), s_NiStringsExtraDataVtbl.GetUIntPtr());
+	NiStringsExtraData* data = (NiStringsExtraData*)NiExtraData::Create(sizeof(NiStringsExtraData), s_NiStringsExtraDataVtbl);
 	data->m_pcName = const_cast<char*>(name.data);
 	data->m_data = (char**)Heap_Allocate(sizeof(char*) * size);
 	data->m_size = size;
@@ -66,7 +66,7 @@ void NiStringsExtraData::SetData(BSFixedString * stringData, UInt32 size)
 
 NiBinaryExtraData * NiBinaryExtraData::Create(BSFixedString name, char * binary, UInt32 size)
 {
-	NiBinaryExtraData* data = (NiBinaryExtraData*)NiExtraData::Create(sizeof(NiBinaryExtraData), s_NiBinaryExtraDataVtbl.GetUIntPtr());
+	NiBinaryExtraData* data = (NiBinaryExtraData*)NiExtraData::Create(sizeof(NiBinaryExtraData), s_NiBinaryExtraDataVtbl);
 	data->m_pcName = const_cast<char*>(name.data);
 	if (size > 0)
 	{
@@ -85,7 +85,7 @@ NiBinaryExtraData * NiBinaryExtraData::Create(BSFixedString name, char * binary,
 
 NiBooleanExtraData * NiBooleanExtraData::Create(BSFixedString name, bool value)
 {
-	NiBooleanExtraData* data = (NiBooleanExtraData*)NiExtraData::Create(sizeof(NiBooleanExtraData), s_NiBooleanExtraDataVtbl.GetUIntPtr());
+	NiBooleanExtraData* data = (NiBooleanExtraData*)NiExtraData::Create(sizeof(NiBooleanExtraData), s_NiBooleanExtraDataVtbl);
 	data->m_pcName = const_cast<char*>(name.data);
 	data->m_data = value;
 	return data;
@@ -110,7 +110,7 @@ void NiBinaryExtraData::SetData(char * data, UInt32 size)
 
 BSFaceGenBaseMorphExtraData* BSFaceGenBaseMorphExtraData::Create(NiGeometryData * geometryData, bool copy)
 {
-	BSFaceGenBaseMorphExtraData* data = (BSFaceGenBaseMorphExtraData*)NiExtraData::Create(sizeof(BSFaceGenBaseMorphExtraData), s_BSFaceGenBaseMorphExtraDataVtbl.GetUIntPtr());
+	BSFaceGenBaseMorphExtraData* data = (BSFaceGenBaseMorphExtraData*)NiExtraData::Create(sizeof(BSFaceGenBaseMorphExtraData), s_BSFaceGenBaseMorphExtraDataVtbl);
 	data->m_pcName = const_cast<char*>(BSFixedString("FOD").data);
 	data->m_uiRefCount = 0;
 	data->modelVertexCount = 0;
diff --git a/skse64/skse64/NiExtraData.h b/skse64/skse64/NiExtraData.h
index 3414ccc..ea531c4 100644
--- a/skse64/skse64/NiExtraData.h
+++ b/skse64/skse64/NiExtraData.h
@@ -1,8 +1,8 @@
 #pragma once
 
-#include "skse64/NiTypes.h"
-#include "skse64/NiObjects.h"
-#include "skse64/GameTypes.h"
+#include "NiTypes.h"
+#include "NiObjects.h"
+#include "GameTypes.h"
 
 class NiGeometryData;
 
@@ -220,12 +220,12 @@ public:
 	UInt64	unk220[2];						// 220
 
 	MEMBER_FN_PREFIX(BSFaceGenAnimationData);
-	DEFINE_MEMBER_FN(SetExpression, void, 0x003C3F00, UInt32 type, float value);
+	DEFINE_MEMBER_FN(SetExpression, void, offset1, UInt32 type, float value);
 	// SE: commented calls have been inlined. Provided alternatives as normal methods.
 	//DEFINE_MEMBER_FN(SetPhonome, void, 0x00000000, UInt32 type, float value);
 	//DEFINE_MEMBER_FN(SetModifier, void, 0x00000000, UInt32 type, float value);
 	//DEFINE_MEMBER_FN(SetCustom, void, 0x00000000, UInt32 type, float value);
-	DEFINE_MEMBER_FN(Reset, void, 0x003C38E0, float value, UInt8 unk1, UInt8 unk2, UInt8 unk3, UInt8 unk4);
+	DEFINE_MEMBER_FN(Reset, void, offset2, float value, UInt8 unk1, UInt8 unk2, UInt8 unk3, UInt8 unk4);
 
 	// Alternatives to inlined functions
 	void SetPhonome(UInt32 type, float value)
@@ -254,6 +254,9 @@ public:
 			keyFrames[10].isUpdated = true;
 		}
 	}
+private:
+	inline static auto offset1 = IAL::Offset(25980);
+	inline static auto offset2 = IAL::Offset(25977);
 };
 
 STATIC_ASSERT(offsetof(BSFaceGenAnimationData, keyFrames) == 0x20);
diff --git a/skse64/skse64/NiGeometry.cpp b/skse64/skse64/NiGeometry.cpp
index cd734c9..67b7a8c 100644
--- a/skse64/skse64/NiGeometry.cpp
+++ b/skse64/skse64/NiGeometry.cpp
@@ -1,14 +1,14 @@
-#include "skse64/NiGeometry.h"
-#include "skse64/GameAPI.h"
+#include "NiGeometry.h"
+#include "GameAPI.h"
 
-RelocAddr<_CreateBSTriShape> CreateBSTriShape(0x00C67490);
-RelocAddr<_CreateBSDynamicTriShape> CreateBSDynamicTriShape(0x00C72180);
+_CreateBSTriShape CreateBSTriShape = IAL::Addr<_CreateBSTriShape>(69284);
+_CreateBSDynamicTriShape CreateBSDynamicTriShape= IAL::Addr<_CreateBSDynamicTriShape>(69562);
 
 // ??_7NiTriShape@@6B@
-static const RelocPtr<uintptr_t> s_NiTriShapeVtbl(0x0176D060);
+static const uintptr_t s_NiTriShapeVtbl = IAL::Addr<uintptr_t>(286503);
 
 // ??_7NiTriStrips@@6B@
-static const RelocPtr<uintptr_t> s_NiTriStripsVtbl(0x0176D5A0);
+static const uintptr_t s_NiTriStripsVtbl = IAL::Addr<uintptr_t>(286517);
 
 void NiGeometryData::AllocateVerts(UInt32 numVerts)
 {
@@ -76,7 +76,7 @@ NiTriShape * NiTriShape::Create(NiTriShapeData * geometry)
 	memset(memory, 0, sizeof(NiTriShape));
 	NiTriShape* xData = (NiTriShape*)memory;
 	xData->ctor(geometry);
-	((uintptr_t *)memory)[0] = s_NiTriShapeVtbl.GetUIntPtr();
+	((uintptr_t *)memory)[0] = s_NiTriShapeVtbl;
 	return xData;
 }
 
@@ -87,7 +87,7 @@ NiTriStrips * NiTriStrips::Create(NiTriShapeData * geometry)
 	memset(memory, 0, sizeof(NiTriStrips));
 	NiTriStrips* xData = (NiTriStrips*)memory;
 	xData->ctor(geometry);
-	((uintptr_t *)memory)[0] = s_NiTriStripsVtbl.GetUIntPtr();
+	((uintptr_t *)memory)[0] = s_NiTriStripsVtbl;
 	return xData;
 }
 
diff --git a/skse64/skse64/NiGeometry.h b/skse64/skse64/NiGeometry.h
index d37edd4..4b5bf28 100644
--- a/skse64/skse64/NiGeometry.h
+++ b/skse64/skse64/NiGeometry.h
@@ -1,7 +1,7 @@
 #pragma once
 
-#include "skse64/NiNodes.h"
-#include "skse64/NiProperties.h"
+#include "NiNodes.h"
+#include "NiProperties.h"
 
 // NiGeometry, NiGeometryData and children
 MAKE_NI_POINTER(NiGeometryData);
@@ -40,7 +40,9 @@ class NiTriBasedGeom : public NiGeometry
 {
 public:
 	// 2280019D608FD35C9B8EB465875A37FBCC37C462+E4
-	DEFINE_MEMBER_FN_1(ctor, NiTriBasedGeom *, 0x00C91440, NiTriShapeData * geometry);
+	DEFINE_MEMBER_FN_1(ctor, NiTriBasedGeom *, offset1, NiTriShapeData * geometry);
+private:
+	inline static auto offset1 = IAL::Offset(70356);
 };
 
 class NiTriShape : public NiTriBasedGeom
@@ -116,7 +118,7 @@ public:
 };
 
 typedef BSTriShape * (*_CreateBSTriShape)();
-extern RelocAddr<_CreateBSTriShape> CreateBSTriShape;
+extern _CreateBSTriShape CreateBSTriShape;
 
 // 180
 class BSDynamicTriShape : public BSTriShape
@@ -130,12 +132,14 @@ public:
 	UInt32		unk17C;			// 17C
 
 	// C33CC4D0EB586CB83500C260EE681221A345C5AE+FF
-	DEFINE_MEMBER_FN_0(ctor, BSDynamicTriShape *, 0x00C72300);
+	DEFINE_MEMBER_FN_0(ctor, BSDynamicTriShape *, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(69564);
 };
 STATIC_ASSERT(sizeof(BSDynamicTriShape) == 0x180);
 
 typedef BSDynamicTriShape * (*_CreateBSDynamicTriShape)();
-extern RelocAddr<_CreateBSDynamicTriShape> CreateBSDynamicTriShape;
+extern _CreateBSDynamicTriShape CreateBSDynamicTriShape;
 
 // 48+
 class NiGeometryData : public NiObject
@@ -427,8 +431,11 @@ public:
 	NiSkinInstance * Clone();
 
 	MEMBER_FN_PREFIX(NiSkinInstance);
-	DEFINE_MEMBER_FN(Copy, NiSkinInstance*, 0x00C52750);
-	DEFINE_MEMBER_FN(ctor, NiSkinInstance *, 0x00C7EB60);
+	DEFINE_MEMBER_FN(Copy, NiSkinInstance*, offset1);
+	DEFINE_MEMBER_FN(ctor, NiSkinInstance*, offset2);
+private:
+	inline static auto offset1 = IAL::Offset(68835);
+	inline static auto offset2 = IAL::Offset(69804);
 };
 STATIC_ASSERT(offsetof(NiSkinInstance, lock) == 0x60);
 STATIC_ASSERT(sizeof(NiSkinInstance) == 0x88);
@@ -446,6 +453,8 @@ public:
 	static BSDismemberSkinInstance * Create();
 
 	MEMBER_FN_PREFIX(BSDismemberSkinInstance);
-	DEFINE_MEMBER_FN(ctor, BSDismemberSkinInstance *, 0x00C6BC70);
+	DEFINE_MEMBER_FN(ctor, BSDismemberSkinInstance *, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(69406);
 };
 STATIC_ASSERT(sizeof(BSDismemberSkinInstance) == 0xA0);
diff --git a/skse64/skse64/NiInterpolators.h b/skse64/skse64/NiInterpolators.h
index a4df4a8..8fc6984 100644
--- a/skse64/skse64/NiInterpolators.h
+++ b/skse64/skse64/NiInterpolators.h
@@ -1,7 +1,7 @@
 #pragma once
 
-#include "skse64/NiObjects.h"
-#include "skse64/NiTypes.h"
+#include "NiObjects.h"
+#include "NiTypes.h"
 
 /**** hierarchy ****************************************************************
  *	
diff --git a/skse64/skse64/NiLight.cpp b/skse64/skse64/NiLight.cpp
index 91ed4e4..a842f8e 100644
--- a/skse64/skse64/NiLight.cpp
+++ b/skse64/skse64/NiLight.cpp
@@ -1 +1 @@
-#include "skse64/NiLight.h"
+#include "NiLight.h"
diff --git a/skse64/skse64/NiLight.h b/skse64/skse64/NiLight.h
index 0210f49..c3a47e2 100644
--- a/skse64/skse64/NiLight.h
+++ b/skse64/skse64/NiLight.h
@@ -1,7 +1,7 @@
 #pragma once
 
-#include "skse64/NiTypes.h"
-#include "skse64/NiObjects.h"
+#include "NiTypes.h"
+#include "NiObjects.h"
 
 // D4
 class NiLight : public NiAVObject
diff --git a/skse64/skse64/NiMaterial.cpp b/skse64/skse64/NiMaterial.cpp
index b52dc54..94ca2f5 100644
--- a/skse64/skse64/NiMaterial.cpp
+++ b/skse64/skse64/NiMaterial.cpp
@@ -1,11 +1,11 @@
-#include "skse64/NiMaterial.h"
-#include "skse64/GameAPI.h"
-#include "skse64/GameObjects.h"
+#include "NiMaterial.h"
+#include "GameAPI.h"
+#include "GameObjects.h"
 
 // 96D2EFF152717F366F7EAAA62CAD7EB12855423D+47
-RelocAddr<_CreateShaderMaterial> CreateShaderMaterial(0x012CFBC0);
+_CreateShaderMaterial CreateShaderMaterial = IAL::Addr<_CreateShaderMaterial>(100016);
 
-RelocAddr<_CreateFacegenTintMaterial> CreateFacegenTintMaterial(0x012D26F0);
+_CreateFacegenTintMaterial CreateFacegenTintMaterial = IAL::Addr<_CreateFacegenTintMaterial>(100089);
 
 void BSLightingShaderMaterial::SetTextureSet(BSTextureSet * newSet)
 {
diff --git a/skse64/skse64/NiMaterial.h b/skse64/skse64/NiMaterial.h
index 8dac2f8..a60086b 100644
--- a/skse64/skse64/NiMaterial.h
+++ b/skse64/skse64/NiMaterial.h
@@ -1,7 +1,7 @@
 #pragma once
 
-#include "skse64/NiTextures.h"
-#include "skse64/GameTypes.h"
+#include "NiTextures.h"
+#include "GameTypes.h"
 
 MAKE_NI_POINTER(BSTextureSet);
 MAKE_NI_POINTER(NiTexture);
@@ -118,8 +118,11 @@ public:
 	void SetTextureSet(BSTextureSet * textureSet);
 
 	MEMBER_FN_PREFIX(BSLightingShaderMaterial);
-	DEFINE_MEMBER_FN(CopyFrom, void, 0x012CEF40, BSLightingShaderMaterial * other);
-	DEFINE_MEMBER_FN(dtor_base, void, 0x012CEDE0);
+	DEFINE_MEMBER_FN(CopyFrom, void, offset1, BSLightingShaderMaterial * other);
+	DEFINE_MEMBER_FN(dtor_base, void, offset2);
+private:
+	inline static auto offset1 = IAL::Offset(100006);
+	inline static auto offset2 = IAL::Offset(100005);
 };
 STATIC_ASSERT(sizeof(BSLightingShaderMaterial) == 0xA0);
 
@@ -131,7 +134,7 @@ public:
 	NiTexturePtr unkA0;	// A0 inited to 0
 	NiTexturePtr unkA8;	// A8 inited to 0
 
-	DEFINE_MEMBER_FN(dtor, void, 0x012D0450);
+	DEFINE_MEMBER_FN(dtor, void, 0x012D0450); // bad offset
 };
 
 class BSLightingShaderMaterialEnvmap : public BSLightingShaderMaterial
@@ -143,7 +146,9 @@ public:
 	NiTexturePtr unkA8;	// A8 inited to 0
 
 	// A3E31C7F999C7F658388C63EFE1489AE31F17A6B+389
-	DEFINE_MEMBER_FN(dtor, void, 0x012D01F0);
+	DEFINE_MEMBER_FN(dtor, void, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(100022);
 };
 
 class BSLightingShaderMaterialFacegen : public BSLightingShaderMaterial
@@ -156,7 +161,9 @@ public:
 	NiTexturePtr unkB0;				// B0 inited to 0
 
 	// uses ??_7BSLightingShaderMaterialFacegen@@6B@ at +17
-	DEFINE_MEMBER_FN(dtor, void, 0x012D1FB0);
+	DEFINE_MEMBER_FN(dtor, void, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(100078);
 };
 
 class BSLightingShaderMaterialGlowmap : public BSLightingShaderMaterial
@@ -167,7 +174,9 @@ public:
 	NiTexturePtr glowMap;	// A0
 
 	// uses ??_7BSLightingShaderMaterialGlowmap@@6B@ at +17
-	DEFINE_MEMBER_FN(dtor, void, 0x012D1050);
+	DEFINE_MEMBER_FN(dtor, void, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(100046);
 };
 
 class BSLightingShaderMaterialParallax : public BSLightingShaderMaterial
@@ -178,7 +187,9 @@ public:
 	NiTexturePtr unkA0;	// A0
 
 	// uses ??_7BSLightingShaderMaterialParallax@@6B@ at +17
-	DEFINE_MEMBER_FN(dtor, void, 0x012D14F0);
+	DEFINE_MEMBER_FN(dtor, void, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(100056);
 };
 
 class BSLightingShaderMaterialMultiLayerParallax : public BSLightingShaderMaterial
@@ -191,7 +202,9 @@ public:
 	NiTexturePtr unkB0;	// A0
 
 	// uses ??_7BSLightingShaderMaterialMultiLayerParallax@@6B@ at +17
-	DEFINE_MEMBER_FN(dtor, void, 0x012D3B40);
+	DEFINE_MEMBER_FN(dtor, void, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(100126);
 };
 
 class BSLightingShaderMaterialParallaxOcc : public BSLightingShaderMaterial
@@ -202,7 +215,9 @@ public:
 	NiTexturePtr unkA0;	// A0
 
 	// uses ??_7BSLightingShaderMaterialParallaxOcc@@6B@ at +17
-	DEFINE_MEMBER_FN(dtor, void, 0x012D1990);
+	DEFINE_MEMBER_FN(dtor, void, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(100066);
 };
 
 class BSLightingShaderMaterialFacegenTint : public BSLightingShaderMaterial
@@ -223,9 +238,9 @@ public:
 
 // Beware that using this will cause leaks when using SetMaterial
 typedef BSShaderMaterialBase * (* _CreateShaderMaterial)(UInt32 shaderType);
-extern RelocAddr<_CreateShaderMaterial> CreateShaderMaterial;
+extern _CreateShaderMaterial CreateShaderMaterial;
 
 // This is actually vtable+8 but it has no dependency on the 'this' ptr
 typedef BSLightingShaderMaterialFacegenTint * (*_CreateFacegenTintMaterial)();
-extern RelocAddr<_CreateFacegenTintMaterial> CreateFacegenTintMaterial;
+extern _CreateFacegenTintMaterial CreateFacegenTintMaterial;
 
diff --git a/skse64/skse64/NiNodes.cpp b/skse64/skse64/NiNodes.cpp
index 49dffca..516508b 100644
--- a/skse64/skse64/NiNodes.cpp
+++ b/skse64/skse64/NiNodes.cpp
@@ -1,5 +1,5 @@
-#include "skse64/NiNodes.h"
-#include "skse64/GameObjects.h"
+#include "NiNodes.h"
+#include "GameObjects.h"
 
 const _GetBoneNames GetBoneNames = (_GetBoneNames)0x00000000; // Builds the skeleton node name list if it doesn't exist
 const _GetNodeByName GetNodeByName = (_GetNodeByName)0x00000000;
diff --git a/skse64/skse64/NiNodes.h b/skse64/skse64/NiNodes.h
index 8dd740f..9fbb874 100644
--- a/skse64/skse64/NiNodes.h
+++ b/skse64/skse64/NiNodes.h
@@ -1,7 +1,7 @@
 #pragma once
 
-#include "skse64/NiTypes.h"
-#include "skse64/NiObjects.h"
+#include "NiTypes.h"
+#include "NiObjects.h"
 
 #include "GameCamera.h"
 
@@ -25,7 +25,9 @@ public:
 
 	static NiNode * Create(UInt32 arrBufLen = 0);
 
-	DEFINE_MEMBER_FN_1(ctor, NiNode*, 0x00C57A60, UInt16 arrBufLen);
+	DEFINE_MEMBER_FN_1(ctor, NiNode*, offset1, UInt16 arrBufLen);
+private:
+	inline static auto offset1 = IAL::Offset(68936);
 };
 STATIC_ASSERT(sizeof(NiNode) == 0x128);
 
@@ -37,7 +39,9 @@ public:
 
 	static BSFadeNode * Create();
 
-	DEFINE_MEMBER_FN_0(ctor, BSFadeNode *, 0x0128F900);
+	DEFINE_MEMBER_FN_0(ctor, BSFadeNode *, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(98844);
 };
 STATIC_ASSERT(sizeof(BSFadeNode) == 0x158);
 
@@ -67,7 +71,9 @@ public:
 	};
 
 	MEMBER_FN_PREFIX(BSFaceGenNiNode);
-	DEFINE_MEMBER_FN(AdjustHeadMorph, void, 0x003D90E0, UInt32 unk04, UInt32 unk08, float delta);
+	DEFINE_MEMBER_FN(AdjustHeadMorph, void, offset1, UInt32 unk04, UInt32 unk08, float delta);
+private:
+	inline static auto offset1 = IAL::Offset(26412);
 };
 
 //STATIC_ASSERT(sizeof(BSFaceGenNiNode) == 0xEC);
diff --git a/skse64/skse64/NiObjects.cpp b/skse64/skse64/NiObjects.cpp
index 8f34b08..7765b17 100644
--- a/skse64/skse64/NiObjects.cpp
+++ b/skse64/skse64/NiObjects.cpp
@@ -1,15 +1,15 @@
-#include "skse64/NiObjects.h"
-#include "skse64/NiExtraData.h"
+#include "NiObjects.h"
+#include "NiExtraData.h"
 
 // A941556DD95C558F6FC490138ACEA2962E9A4F8D+2E
-RelocPtr<float> g_worldToCamMatrix(0x02F4C910);
+float* g_worldToCamMatrix = IAL::Addr<float*>(519579); 
 // A941556DD95C558F6FC490138ACEA2962E9A4F8D+B0
-RelocPtr<NiRect<float>> g_viewPort(0x02F4DED0);
+NiRect<float>* g_viewPort = IAL::Addr<NiRect<float>*>(519618);
 
-RelocAddr<_WorldPtToScreenPt3_Internal> WorldPtToScreenPt3_Internal(0x00C66580);
+_WorldPtToScreenPt3_Internal WorldPtToScreenPt3_Internal = IAL::Addr<_WorldPtToScreenPt3_Internal>(69270);
 
-RelocAddr<_NiAllocate> NiAllocate(0x00C24750);
-RelocAddr<_NiFree> NiFree(0x00C249B0);
+_NiAllocate NiAllocate = IAL::Addr<_NiAllocate>(67673);
+_NiFree NiFree = IAL::Addr<_NiFree>(67677);
 
 void NiRefObject::IncRef(void)
 {
diff --git a/skse64/skse64/NiObjects.h b/skse64/skse64/NiObjects.h
index f4b1bd5..435357a 100644
--- a/skse64/skse64/NiObjects.h
+++ b/skse64/skse64/NiObjects.h
@@ -1,9 +1,9 @@
 #pragma once
 
-#include "skse64/NiRTTI.h"
-#include "skse64/NiTypes.h"
+#include "NiRTTI.h"
+#include "NiTypes.h"
 #include "skse64_common/Utilities.h"
-#include "skse64/GameTypes.h"
+#include "GameTypes.h"
 
 // NiRefObject/NiObject and important children
 // generally other children should go in other files
@@ -11,6 +11,8 @@
 
 // SE notice: all definitions updated except BSRenderTargetGroup
 
+class TESObjectREFR;
+
 class NiCloningProcess;
 class NiStream;
 class NiObjectGroup;
@@ -33,17 +35,17 @@ class TESObjectCELL;
 class TESModelTri;
 class BSFaceGenMorphData;
 
-extern RelocPtr<float> g_worldToCamMatrix;
-extern RelocPtr<NiRect<float>> g_viewPort;
+extern float* g_worldToCamMatrix;
+extern NiRect<float>* g_viewPort;
 
 typedef bool (* _WorldPtToScreenPt3_Internal)(float * worldToCamMatrix, NiRect<float> * port, NiPoint3 * p_in, float * x_out, float * y_out, float * z_out, float zeroTolerance);
-extern RelocAddr<_WorldPtToScreenPt3_Internal> WorldPtToScreenPt3_Internal;
+extern _WorldPtToScreenPt3_Internal WorldPtToScreenPt3_Internal;
 
 typedef void * (*_NiAllocate)(size_t size);
-extern RelocAddr<_NiAllocate> NiAllocate;
+extern _NiAllocate NiAllocate;
 
 typedef void(*_NiFree)(void * ptr);
-extern RelocAddr<_NiFree> NiFree;
+extern _NiFree NiFree;
 
 // 10
 class NiRefObject
@@ -124,7 +126,9 @@ public:
 
 	
 	MEMBER_FN_PREFIX(NiObject);
-	DEFINE_MEMBER_FN(DeepCopy, NiStream *, 0x00C529A0, NiObject ** result);
+	DEFINE_MEMBER_FN(DeepCopy, NiStream *, offset1, NiObject ** result);
+private:
+	inline static auto offset1 = IAL::Offset(68839);
 };
 STATIC_ASSERT(sizeof(NiObject) == 0x10);
 
@@ -211,8 +215,7 @@ public:
 	float		unkEC;					// EC
 	float		unkF0;					// F0
 	UInt32		m_flags;				// F4 - bitfield
-	float		unkF8;					// F8
-	UInt32		unkFC;					// FC
+	TESObjectREFR*       m_owner;                // F8
 	float		unk100;					// 100 - New in SE? init's to 1.0
 	UInt32		unk104;					// 104 - New in SE? init'd to 0
 	UInt8		unk108;					// 108
@@ -221,7 +224,9 @@ public:
 
 	MEMBER_FN_PREFIX(NiAVObject);
 	// 3239A102C6E8818F0FBFEF58A1B6EA724A237258+26
-	DEFINE_MEMBER_FN(UpdateNode, void, 0x00C56B50, ControllerUpdateContext * ctx);
+	DEFINE_MEMBER_FN(UpdateNode, void, offset1, ControllerUpdateContext * ctx);
+private:
+	inline static auto offset1 = IAL::Offset(68900);
 };
 STATIC_ASSERT(offsetof(NiAVObject, m_localTransform) == 0x48);
 STATIC_ASSERT(offsetof(NiAVObject, m_worldTransform) == 0x7C);
@@ -269,10 +274,15 @@ public:
 	UInt32	pad1C;		// 1C
 
 	MEMBER_FN_PREFIX(BSFaceGenModel);
-	DEFINE_MEMBER_FN(ctor, void, 0x003D4070);
-	DEFINE_MEMBER_FN(CopyFrom, void, 0x003D4150, BSFaceGenModel * other);
-	DEFINE_MEMBER_FN(SetModelData, bool, 0x003D47C0, const char * meshPath, void * unk1, UInt8 unk2);
-	DEFINE_MEMBER_FN(ApplyMorph, UInt8, 0x003D4630, BSFixedString * morphName, TESModelTri * triModel, NiAVObject ** headNode, float relative, UInt8 unk1);
+	DEFINE_MEMBER_FN(ctor, void, offset1);
+	DEFINE_MEMBER_FN(CopyFrom, void, offset2, BSFaceGenModel * other);
+	DEFINE_MEMBER_FN(SetModelData, bool, offset3, const char * meshPath, void * unk1, UInt8 unk2);
+	DEFINE_MEMBER_FN(ApplyMorph, UInt8, offset4, BSFixedString * morphName, TESModelTri * triModel, NiAVObject ** headNode, float relative, UInt8 unk1);
+private:
+	inline static auto offset1 = IAL::Offset(26291);
+	inline static auto offset2 = IAL::Offset(26293);
+	inline static auto offset3 = IAL::Offset(26302);
+	inline static auto offset4 = IAL::Offset(26300);
 };
 
 // 18
@@ -283,7 +293,9 @@ public:
 	
 
 	MEMBER_FN_PREFIX(BSFaceGenMorphData);
-	DEFINE_MEMBER_FN(ApplyMorph, UInt8, 0x003D7860, const char ** morphName, NiAVObject * faceTrishape, float relative, UInt8 unk2);
+	DEFINE_MEMBER_FN(ApplyMorph, UInt8, offset1, const char ** morphName, NiAVObject * faceTrishape, float relative, UInt8 unk2);
+private:
+	inline static auto offset1 = IAL::Offset(26349);
 };
 
 // 20
diff --git a/skse64/skse64/NiProperties.cpp b/skse64/skse64/NiProperties.cpp
index 60d1753..12795f9 100644
--- a/skse64/skse64/NiProperties.cpp
+++ b/skse64/skse64/NiProperties.cpp
@@ -1 +1 @@
-#include "skse64/NiProperties.h"
+#include "NiProperties.h"
diff --git a/skse64/skse64/NiProperties.h b/skse64/skse64/NiProperties.h
index 57839d9..6c8c8a7 100644
--- a/skse64/skse64/NiProperties.h
+++ b/skse64/skse64/NiProperties.h
@@ -1,7 +1,7 @@
 #pragma once
 
-#include "skse64/NiObjects.h"
-#include "skse64/NiMaterial.h"
+#include "NiObjects.h"
+#include "NiMaterial.h"
 
 class NiProperty : public NiObjectNET
 {
@@ -197,10 +197,16 @@ public:
 	// This function seems to fix weird lighting issues when creating armors internally
 	// Not particularly sure what it does but it seems to mess around with a lot material flags
 	MEMBER_FN_PREFIX(BSLightingShaderProperty);
-	DEFINE_MEMBER_FN(InitializeShader, UInt32, 0x012C56D0, BSGeometry * geometry);
-	DEFINE_MEMBER_FN(SetMaterial, UInt32, 0x01291D40, BSLightingShaderMaterial * material, bool unk1); // unk1 usually 1
-	DEFINE_MEMBER_FN(SetFlags, UInt64, 0x01291C30, UInt8 unk1, UInt8 unk2);
-	DEFINE_MEMBER_FN(InvalidateMaterial, bool, 0x0019C3B0);
-	DEFINE_MEMBER_FN(InvalidateTextures, void, 0x012C5AB0, UInt32 unk1); // unk1 usually 0, called after material Releases textures
+	DEFINE_MEMBER_FN(InitializeShader, UInt32, offset1, BSGeometry * geometry);
+	DEFINE_MEMBER_FN(SetMaterial, UInt32, offset2, BSLightingShaderMaterial * material, bool unk1); // unk1 usually 1
+	DEFINE_MEMBER_FN(SetFlags, UInt64, offset3, UInt8 unk1, UInt8 unk2);
+	DEFINE_MEMBER_FN(InvalidateMaterial, bool, offset4);
+	DEFINE_MEMBER_FN(InvalidateTextures, void, offset5, UInt32 unk1); // unk1 usually 0, called after material Releases textures
+private:
+	inline static auto offset1 = IAL::Offset(99862);
+	inline static auto offset2 = IAL::Offset(98897);
+	inline static auto offset3 = IAL::Offset(98893);
+	inline static auto offset4 = IAL::Offset(14678);
+	inline static auto offset5 = IAL::Offset(99865);
 };
 STATIC_ASSERT(offsetof(BSLightingShaderProperty, emissiveColor) == 0xF0);
\ No newline at end of file
diff --git a/skse64/skse64/NiRTTI.cpp b/skse64/skse64/NiRTTI.cpp
index 83c4cac..e8eaf98 100644
--- a/skse64/skse64/NiRTTI.cpp
+++ b/skse64/skse64/NiRTTI.cpp
@@ -1,433 +1,447 @@
-#include "skse64/NiRTTI.h"
-#include "skse64/NiObjects.h"
+#include "NiRTTI.h"
+#include "NiObjects.h"
 
-NiObject * DoNiRTTICast(NiObject * src, const NiRTTI * typeInfo)
+INiRTTI INiRTTI::m_Instance;
+
+NiObject *INiRTTI::Cast(NiObject * src, uint32_t typeIndex)
 {
-	uintptr_t typeAddr = uintptr_t(typeInfo) + RelocationManager::s_baseAddr;
-	if (src)
-		for (NiRTTI * iter = src->GetRTTI(); iter; iter = iter->parent)
-			if (iter == (NiRTTI *)typeAddr)
+	if (src) {
+		auto typeAddr = addrs[typeIndex];
+		for (NiRTTI* iter = src->GetRTTI(); iter; iter = iter->parent)
+			if (iter == typeAddr)
 				return src;
+	}
 
 	return nullptr;
 }
 
-bool IsType(NiRTTI * rtti, const NiRTTI * typeInfo)
+bool INiRTTI::IsType(NiRTTI * rtti, uint32_t typeIndex)
 {
-	uintptr_t typeAddr = uintptr_t(typeInfo) + RelocationManager::s_baseAddr;
-	if (rtti)
-		return uintptr_t(rtti) == typeAddr;
+	if (rtti) {
+		return rtti == addrs[typeIndex];
+	}
 
 	return false;
 }
 
-const NiRTTI *	NiRTTI_BGSDecalNode = (NiRTTI *)0x01EC4338;
-const NiRTTI *	NiRTTI_BSAnimGroupSequence = (NiRTTI *)0x01EC44B0;
-const NiRTTI *	NiRTTI_BSSplatterExtraData = (NiRTTI *)0x02EC5500;
-const NiRTTI *	NiRTTI_BGSAddonNodeSoundHandleExtra = (NiRTTI *)0x02EC5968;
-const NiRTTI *	NiRTTI_REFRSyncController = (NiRTTI *)0x02EFF9C0;
-const NiRTTI *	NiRTTI_bhkCartTether = (NiRTTI *)0x02F01118;
-const NiRTTI *	NiRTTI_bhkTiltPreventAction = (NiRTTI *)0x02F01128;
-const NiRTTI *	NiRTTI_bhkWheelAction = (NiRTTI *)0x02F01138;
-const NiRTTI *	NiRTTI_BSFaceGenAnimationData = (NiRTTI *)0x02F01780;
-const NiRTTI *	NiRTTI_BSFaceGenModelExtraData = (NiRTTI *)0x02F07CA0;
-const NiRTTI *	NiRTTI_BSFaceGenBaseMorphExtraData = (NiRTTI *)0x02F07CC8;
-const NiRTTI *	NiRTTI_BSFaceGenMorphData = (NiRTTI *)0x02F07CD8;
-const NiRTTI *	NiRTTI_BSFaceGenMorphDataHead = (NiRTTI *)0x02F07CE8;
-const NiRTTI *	NiRTTI_BSFaceGenMorphDataHair = (NiRTTI *)0x02F07CF8;
-const NiRTTI *	NiRTTI_BSFaceGenNiNode = (NiRTTI *)0x02F07D38;
-const NiRTTI *	NiRTTI_BSTempEffect = (NiRTTI *)0x02F0D428;
-const NiRTTI *	NiRTTI_BSTempEffectDebris = (NiRTTI *)0x02F0D4A8;
-const NiRTTI *	NiRTTI_BSTempEffectGeometryDecal = (NiRTTI *)0x02F0D4C8;
-const NiRTTI *	NiRTTI_BSTempEffectParticle = (NiRTTI *)0x02F0D578;
-const NiRTTI *	NiRTTI_BSTempEffectSimpleDecal = (NiRTTI *)0x02F0D5A0;
-const NiRTTI *	NiRTTI_BSTempEffectSPG = (NiRTTI *)0x02F0D5B8;
-const NiRTTI *	NiRTTI_bhkAutoWater = (NiRTTI *)0x02F249A0;
-const NiRTTI *	NiRTTI_ModelReferenceEffect = (NiRTTI *)0x02F261D8;
-const NiRTTI *	NiRTTI_ReferenceEffect = (NiRTTI *)0x02F26210;
-const NiRTTI *	NiRTTI_ShaderReferenceEffect = (NiRTTI *)0x02F26240;
-const NiRTTI *	NiRTTI_SummonPlacementEffect = (NiRTTI *)0x02F26270;
-const NiRTTI *	NiRTTI_SceneGraph = (NiRTTI *)0x02F38950;
-const NiRTTI *	NiRTTI_BSDoorHavokController = (NiRTTI *)0x02F3A680;
-const NiRTTI *	NiRTTI_BSPlayerDistanceCheckController = (NiRTTI *)0x02F3A690;
-const NiRTTI *	NiRTTI_BSSimpleScaleController = (NiRTTI *)0x02F3A6A0;
-const NiRTTI *	NiRTTI_NiObject = (NiRTTI *)0x03012388;
-const NiRTTI *	NiRTTI_NiAVObject = (NiRTTI *)0x030123C0;
-const NiRTTI *	NiRTTI_NiNode = (NiRTTI *)0x030123E0;
-const NiRTTI *	NiRTTI_NiObjectNET = (NiRTTI *)0x03012508;
-const NiRTTI *	NiRTTI_NiLight = (NiRTTI *)0x03012568;
-const NiRTTI *	NiRTTI_NiSwitchNode = (NiRTTI *)0x03012578;
-const NiRTTI *	NiRTTI_NiStringsExtraData = (NiRTTI *)0x03012588;
-const NiRTTI *	NiRTTI_NiCamera = (NiRTTI *)0x03012598;
-const NiRTTI *	NiRTTI_BSTriShape = (NiRTTI *)0x030125B0;
-const NiRTTI *	NiRTTI_NiProperty = (NiRTTI *)0x030125C0;
-const NiRTTI *	NiRTTI_NiAlphaProperty = (NiRTTI *)0x030125D8;
-const NiRTTI *	NiRTTI_NiSourceTexture = (NiRTTI *)0x03013608;
-const NiRTTI *	NiRTTI_BSFlattenedBoneTree = (NiRTTI *)0x03013618;
-const NiRTTI *	NiRTTI_BSDismemberSkinInstance = (NiRTTI *)0x03013660;
-const NiRTTI *	NiRTTI_NiStringExtraData = (NiRTTI *)0x03013670;
-const NiRTTI *	NiRTTI_NiTimeController = (NiRTTI *)0x03013680;
-const NiRTTI *	NiRTTI_NiExtraData = (NiRTTI *)0x030136A0;
-const NiRTTI *	NiRTTI_NiGeometryData = (NiRTTI *)0x030136B0;
-const NiRTTI *	NiRTTI_BSGeometry = (NiRTTI *)0x030136C8;
-const NiRTTI *	NiRTTI_BSDynamicTriShape = (NiRTTI *)0x030136E0;
-const NiRTTI *	NiRTTI_NiPointLight = (NiRTTI *)0x030136F0;
-const NiRTTI *	NiRTTI_NiDefaultAVObjectPalette = (NiRTTI *)0x03013700;
-const NiRTTI *	NiRTTI_NiBillboardNode = (NiRTTI *)0x03013728;
-const NiRTTI *	NiRTTI_NiDirectionalLight = (NiRTTI *)0x03013738;
-const NiRTTI *	NiRTTI_NiCullingProcess = (NiRTTI *)0x03013748;
-const NiRTTI *	NiRTTI_NiParticles = (NiRTTI *)0x03013760;
-const NiRTTI *	NiRTTI_NiTexture = (NiRTTI *)0x030137A0;
-const NiRTTI *	NiRTTI_NiSkinPartition = (NiRTTI *)0x030138B0;
-const NiRTTI *	NiRTTI_NiVertWeightsExtraData = (NiRTTI *)0x030138C0;
-const NiRTTI *	NiRTTI_NiSkinInstance = (NiRTTI *)0x030138D0;
-const NiRTTI *	NiRTTI_NiAVObjectPalette = (NiRTTI *)0x030138E0;
-const NiRTTI *	NiRTTI_NiGeometry = (NiRTTI *)0x030138F0;
-const NiRTTI *	NiRTTI_NiSkinData = (NiRTTI *)0x03013920;
-const NiRTTI *	NiRTTI_NiShadeProperty = (NiRTTI *)0x03013930;
-const NiRTTI *	NiRTTI_NiAlphaAccumulator = (NiRTTI *)0x03013948;
-const NiRTTI *	NiRTTI_NiAmbientLight = (NiRTTI *)0x03013958;
-const NiRTTI *	NiRTTI_NiBinaryExtraData = (NiRTTI *)0x03013968;
-const NiRTTI *	NiRTTI_NiBooleanExtraData = (NiRTTI *)0x03013978;
-const NiRTTI *	NiRTTI_NiBSPNode = (NiRTTI *)0x03013988;
-const NiRTTI *	NiRTTI_NiColorExtraData = (NiRTTI *)0x03013998;
-const NiRTTI *	NiRTTI_NiFloatExtraData = (NiRTTI *)0x030139A8;
-const NiRTTI *	NiRTTI_NiFloatsExtraData = (NiRTTI *)0x030139B8;
-const NiRTTI *	NiRTTI_NiFogProperty = (NiRTTI *)0x030139C8;
-const NiRTTI *	NiRTTI_NiIntegerExtraData = (NiRTTI *)0x030139E0;
-const NiRTTI *	NiRTTI_NiIntegersExtraData = (NiRTTI *)0x030139F0;
-const NiRTTI *	NiRTTI_NiParticlesData = (NiRTTI *)0x03013A38;
-const NiRTTI *	NiRTTI_NiParticleMeshesData = (NiRTTI *)0x03013A48;
-const NiRTTI *	NiRTTI_NiParticleMeshes = (NiRTTI *)0x03013A58;
-const NiRTTI *	NiRTTI_NiSpotLight = (NiRTTI *)0x03013A68;
-const NiRTTI *	NiRTTI_NiSwitchStringExtraData = (NiRTTI *)0x03013A78;
-const NiRTTI *	NiRTTI_NiTriShapeData = (NiRTTI *)0x03013A88;
-const NiRTTI *	NiRTTI_NiTriShape = (NiRTTI *)0x03013A98;
-const NiRTTI *	NiRTTI_NiTriStripsData = (NiRTTI *)0x03013AA8;
-const NiRTTI *	NiRTTI_NiTriStrips = (NiRTTI *)0x03013AB8;
-const NiRTTI *	NiRTTI_NiVectorExtraData = (NiRTTI *)0x03013AC8;
-const NiRTTI *	NiRTTI_BSLODTriShape = (NiRTTI *)0x03013AF0;
-const NiRTTI *	NiRTTI_NiAdditionalGeometryData = (NiRTTI *)0x03013B00;
-const NiRTTI *	NiRTTI_BSSegmentedTriShape = (NiRTTI *)0x03013B18;
-const NiRTTI *	NiRTTI_NiAccumulator = (NiRTTI *)0x03013B50;
-const NiRTTI *	NiRTTI_NiBackToFrontAccumulator = (NiRTTI *)0x03013B60;
-const NiRTTI *	NiRTTI_NiTriBasedGeomData = (NiRTTI *)0x03013B70;
-const NiRTTI *	NiRTTI_NiTriBasedGeom = (NiRTTI *)0x03013B80;
-const NiRTTI *	NiRTTI_NiCollisionData = (NiRTTI *)0x03013BC8;
-const NiRTTI *	NiRTTI_NiControllerManager = (NiRTTI *)0x03013C58;
-const NiRTTI *	NiRTTI_NiControllerSequence = (NiRTTI *)0x03013C78;
-const NiRTTI *	NiRTTI_NiBlendInterpolator = (NiRTTI *)0x03013CA8;
-const NiRTTI *	NiRTTI_NiMultiTargetTransformController = (NiRTTI *)0x03013CB8;
-const NiRTTI *	NiRTTI_BSMultiTargetTreadTransfController = (NiRTTI *)0x03013CC8;
-const NiRTTI *	NiRTTI_NiInterpController = (NiRTTI *)0x03013CD8;
-const NiRTTI *	NiRTTI_NiFloatData = (NiRTTI *)0x03014AA8;
-const NiRTTI *	NiRTTI_NiFloatInterpolator = (NiRTTI *)0x03014AB8;
-const NiRTTI *	NiRTTI_NiColorData = (NiRTTI *)0x03014AC8;
-const NiRTTI *	NiRTTI_NiColorInterpolator = (NiRTTI *)0x03014AD8;
-const NiRTTI *	NiRTTI_NiSingleInterpController = (NiRTTI *)0x03014AE8;
-const NiRTTI *	NiRTTI_NiTransformInterpolator = (NiRTTI *)0x03014AF8;
-const NiRTTI *	NiRTTI_NiPathInterpolator = (NiRTTI *)0x03014B08;
-const NiRTTI *	NiRTTI_NiBlendTransformInterpolator = (NiRTTI *)0x03014B28;
-const NiRTTI *	NiRTTI_NiBlendFloatInterpolator = (NiRTTI *)0x03014B38;
-const NiRTTI *	NiRTTI_NiFloatExtraDataController = (NiRTTI *)0x03014B48;
-const NiRTTI *	NiRTTI_NiTransformController = (NiRTTI *)0x03014B58;
-const NiRTTI *	NiRTTI_NiBlendAccumTransformInterpolator = (NiRTTI *)0x03014B70;
-const NiRTTI *	NiRTTI_NiInterpolator = (NiRTTI *)0x03014B80;
-const NiRTTI *	NiRTTI_BSBlendTreadTransfInterpolator = (NiRTTI *)0x03014BA0;
-const NiRTTI *	NiRTTI_NiKeyBasedInterpolator = (NiRTTI *)0x03014BB8;
-const NiRTTI *	NiRTTI_NiTransformData = (NiRTTI *)0x03014C38;
-const NiRTTI *	NiRTTI_NiPosData = (NiRTTI *)0x03014C48;
-const NiRTTI *	NiRTTI_NiBlendBoolInterpolator = (NiRTTI *)0x03014C58;
-const NiRTTI *	NiRTTI_NiBlendColorInterpolator = (NiRTTI *)0x03014C68;
-const NiRTTI *	NiRTTI_NiBlendPoint3Interpolator = (NiRTTI *)0x03014C78;
-const NiRTTI *	NiRTTI_NiBlendQuaternionInterpolator = (NiRTTI *)0x03014C88;
-const NiRTTI *	NiRTTI_NiBoolData = (NiRTTI *)0x03014C98;
-const NiRTTI *	NiRTTI_NiBoolInterpolator = (NiRTTI *)0x03014CA8;
-const NiRTTI *	NiRTTI_NiBoolTimelineInterpolator = (NiRTTI *)0x03014CB8;
-const NiRTTI *	NiRTTI_NiBSplineBasisData = (NiRTTI *)0x03014CC8;
-const NiRTTI *	NiRTTI_NiBSplineData = (NiRTTI *)0x03014CD8;
-const NiRTTI *	NiRTTI_NiBSplineColorInterpolator = (NiRTTI *)0x03014CE8;
-const NiRTTI *	NiRTTI_NiBSplineCompColorInterpolator = (NiRTTI *)0x03014CF8;
-const NiRTTI *	NiRTTI_NiBSplineCompFloatInterpolator = (NiRTTI *)0x03014D08;
-const NiRTTI *	NiRTTI_NiBSplineCompPoint3Interpolator = (NiRTTI *)0x03014D18;
-const NiRTTI *	NiRTTI_NiBSplineCompTransformInterpolator = (NiRTTI *)0x03014D28;
-const NiRTTI *	NiRTTI_NiBSplineFloatInterpolator = (NiRTTI *)0x03014D38;
-const NiRTTI *	NiRTTI_NiBSplinePoint3Interpolator = (NiRTTI *)0x03014D48;
-const NiRTTI *	NiRTTI_NiBSplineTransformInterpolator = (NiRTTI *)0x03014D58;
-const NiRTTI *	NiRTTI_NiColorExtraDataController = (NiRTTI *)0x03014D68;
-const NiRTTI *	NiRTTI_NiFloatsExtraDataController = (NiRTTI *)0x03014D78;
-const NiRTTI *	NiRTTI_NiFloatsExtraDataPoint3Controller = (NiRTTI *)0x03014D88;
-const NiRTTI *	NiRTTI_NiKeyframeManager = (NiRTTI *)0x03014DA0;
-const NiRTTI *	NiRTTI_NiLightColorController = (NiRTTI *)0x03014DB0;
-const NiRTTI *	NiRTTI_NiLightDimmerController = (NiRTTI *)0x03014DC0;
-const NiRTTI *	NiRTTI_NiLookAtController = (NiRTTI *)0x03014DD0;
-const NiRTTI *	NiRTTI_NiLookAtInterpolator = (NiRTTI *)0x03014DE0;
-const NiRTTI *	NiRTTI_NiMorphData = (NiRTTI *)0x03014DF0;
-const NiRTTI *	NiRTTI_NiPathController = (NiRTTI *)0x03014E00;
-const NiRTTI *	NiRTTI_NiPoint3Interpolator = (NiRTTI *)0x03014E10;
-const NiRTTI *	NiRTTI_NiQuaternionInterpolator = (NiRTTI *)0x03014E20;
-const NiRTTI *	NiRTTI_NiRollController = (NiRTTI *)0x03014E30;
-const NiRTTI *	NiRTTI_NiRotData = (NiRTTI *)0x03014E40;
-const NiRTTI *	NiRTTI_NiSequence = (NiRTTI *)0x03014E50;
-const NiRTTI *	NiRTTI_NiSequenceStreamHelper = (NiRTTI *)0x03014E70;
-const NiRTTI *	NiRTTI_NiStringPalette = (NiRTTI *)0x03014E80;
-const NiRTTI *	NiRTTI_NiTextKeyExtraData = (NiRTTI *)0x03014E90;
-const NiRTTI *	NiRTTI_NiUVData = (NiRTTI *)0x03014EA0;
-const NiRTTI *	NiRTTI_NiVisController = (NiRTTI *)0x03014EB0;
-const NiRTTI *	NiRTTI_BSAnimNote = (NiRTTI *)0x03014EC0;
-const NiRTTI *	NiRTTI_BSAnimNotes = (NiRTTI *)0x03014ED0;
-const NiRTTI *	NiRTTI_BSGrabIKNote = (NiRTTI *)0x03014EE0;
-const NiRTTI *	NiRTTI_BSLookIKNote = (NiRTTI *)0x03014EF0;
-const NiRTTI *	NiRTTI_BSRotAccumTransfInterpolator = (NiRTTI *)0x03014F00;
-const NiRTTI *	NiRTTI_BSTreadTransfInterpolator = (NiRTTI *)0x03014F10;
-const NiRTTI *	NiRTTI_BSFrustumFOVController = (NiRTTI *)0x03014F20;
-const NiRTTI *	NiRTTI_NiExtraDataController = (NiRTTI *)0x03014FB8;
-const NiRTTI *	NiRTTI_NiBSplineInterpolator = (NiRTTI *)0x03014FC8;
-const NiRTTI *	NiRTTI_NiPoint3InterpController = (NiRTTI *)0x03014FD8;
-const NiRTTI *	NiRTTI_NiFloatInterpController = (NiRTTI *)0x03014FE8;
-const NiRTTI *	NiRTTI_NiFloatController = (NiRTTI *)0x03014FF8;
-const NiRTTI *	NiRTTI_NiBoolInterpController = (NiRTTI *)0x03015008;
-const NiRTTI *	NiRTTI_NiParticleSystem = (NiRTTI *)0x03015020;
-const NiRTTI *	NiRTTI_NiPSysEmitterCtlr = (NiRTTI *)0x03015030;
-const NiRTTI *	NiRTTI_NiPSysGravityModifier = (NiRTTI *)0x03015040;
-const NiRTTI *	NiRTTI_BSPSysHavokUpdateModifier = (NiRTTI *)0x03015050;
-const NiRTTI *	NiRTTI_NiMeshParticleSystem = (NiRTTI *)0x03015068;
-const NiRTTI *	NiRTTI_NiPSysCylinderEmitter = (NiRTTI *)0x03015080;
-const NiRTTI *	NiRTTI_BSStripParticleSystem = (NiRTTI *)0x03015090;
-const NiRTTI *	NiRTTI_NiPSysEmitter = (NiRTTI *)0x030150A0;
-const NiRTTI *	NiRTTI_NiPSysModifierCtlr = (NiRTTI *)0x030150B8;
-const NiRTTI *	NiRTTI_NiPSysModifier = (NiRTTI *)0x030150C8;
-const NiRTTI *	NiRTTI_NiPSysMeshUpdateModifier = (NiRTTI *)0x030150D8;
-const NiRTTI *	NiRTTI_NiPSysUpdateCtlr = (NiRTTI *)0x030150E8;
-const NiRTTI *	NiRTTI_NiMeshPSysData = (NiRTTI *)0x030150F8;
-const NiRTTI *	NiRTTI_NiPSysAirFieldAirFrictionCtlr = (NiRTTI *)0x03015108;
-const NiRTTI *	NiRTTI_NiPSysAirFieldInheritVelocityCtlr = (NiRTTI *)0x03015118;
-const NiRTTI *	NiRTTI_NiPSysAirFieldModifier = (NiRTTI *)0x03015128;
-const NiRTTI *	NiRTTI_NiPSysAirFieldSpreadCtlr = (NiRTTI *)0x03015138;
-const NiRTTI *	NiRTTI_NiPSysAgeDeathModifier = (NiRTTI *)0x03015148;
-const NiRTTI *	NiRTTI_NiPSysBombModifier = (NiRTTI *)0x03015158;
-const NiRTTI *	NiRTTI_NiPSysBoundUpdateModifier = (NiRTTI *)0x03015168;
-const NiRTTI *	NiRTTI_NiPSysBoxEmitter = (NiRTTI *)0x03015178;
-const NiRTTI *	NiRTTI_NiPSysColliderManager = (NiRTTI *)0x03015188;
-const NiRTTI *	NiRTTI_NiPSysColorModifier = (NiRTTI *)0x03015198;
-const NiRTTI *	NiRTTI_NiPSysData = (NiRTTI *)0x030151A8;
-const NiRTTI *	NiRTTI_NiPSysDragFieldModifier = (NiRTTI *)0x030151B8;
-const NiRTTI *	NiRTTI_NiPSysDragModifier = (NiRTTI *)0x030151C8;
-const NiRTTI *	NiRTTI_NiPSysEmitterCtlrData = (NiRTTI *)0x030151D8;
-const NiRTTI *	NiRTTI_NiPSysEmitterDeclinationCtlr = (NiRTTI *)0x030151E8;
-const NiRTTI *	NiRTTI_NiPSysEmitterDeclinationVarCtlr = (NiRTTI *)0x030151F8;
-const NiRTTI *	NiRTTI_NiPSysEmitterInitialRadiusCtlr = (NiRTTI *)0x03015208;
-const NiRTTI *	NiRTTI_NiPSysEmitterLifeSpanCtlr = (NiRTTI *)0x03015218;
-const NiRTTI *	NiRTTI_NiPSysEmitterPlanarAngleCtlr = (NiRTTI *)0x03015228;
-const NiRTTI *	NiRTTI_NiPSysEmitterPlanarAngleVarCtlr = (NiRTTI *)0x03015238;
-const NiRTTI *	NiRTTI_NiPSysEmitterSpeedCtlr = (NiRTTI *)0x03015248;
-const NiRTTI *	NiRTTI_NiPSysFieldAttenuationCtlr = (NiRTTI *)0x03015258;
-const NiRTTI *	NiRTTI_NiPSysFieldMagnitudeCtlr = (NiRTTI *)0x03015268;
-const NiRTTI *	NiRTTI_NiPSysFieldMaxDistanceCtlr = (NiRTTI *)0x03015278;
-const NiRTTI *	NiRTTI_NiPSysGravityFieldModifier = (NiRTTI *)0x03015288;
-const NiRTTI *	NiRTTI_NiPSysGravityStrengthCtlr = (NiRTTI *)0x03015298;
-const NiRTTI *	NiRTTI_NiPSysGrowFadeModifier = (NiRTTI *)0x030152A8;
-const NiRTTI *	NiRTTI_NiPSysInitialRotAngleCtlr = (NiRTTI *)0x030152B8;
-const NiRTTI *	NiRTTI_NiPSysInitialRotAngleVarCtlr = (NiRTTI *)0x030152C8;
-const NiRTTI *	NiRTTI_NiPSysInitialRotSpeedCtlr = (NiRTTI *)0x030152D8;
-const NiRTTI *	NiRTTI_NiPSysInitialRotSpeedVarCtlr = (NiRTTI *)0x030152E8;
-const NiRTTI *	NiRTTI_NiPSysMeshEmitter = (NiRTTI *)0x030152F8;
-const NiRTTI *	NiRTTI_NiPSysModifierActiveCtlr = (NiRTTI *)0x03015328;
-const NiRTTI *	NiRTTI_NiPSysPlanarCollider = (NiRTTI *)0x03015338;
-const NiRTTI *	NiRTTI_NiPSysPositionModifier = (NiRTTI *)0x03015350;
-const NiRTTI *	NiRTTI_NiPSysRadialFieldModifier = (NiRTTI *)0x03015360;
-const NiRTTI *	NiRTTI_NiPSysResetOnLoopCtlr = (NiRTTI *)0x03015370;
-const NiRTTI *	NiRTTI_NiPSysRotationModifier = (NiRTTI *)0x03015380;
-const NiRTTI *	NiRTTI_NiPSysSpawnModifier = (NiRTTI *)0x03015390;
-const NiRTTI *	NiRTTI_NiPSysSphereEmitter = (NiRTTI *)0x030153A0;
-const NiRTTI *	NiRTTI_NiPSysSphericalCollider = (NiRTTI *)0x030153B0;
-const NiRTTI *	NiRTTI_NiPSysTurbulenceFieldModifier = (NiRTTI *)0x030153C0;
-const NiRTTI *	NiRTTI_NiPSysVortexFieldModifier = (NiRTTI *)0x030153D0;
-const NiRTTI *	NiRTTI_BSStripPSysData = (NiRTTI *)0x030153E0;
-const NiRTTI *	NiRTTI_BSPSysRecycleBoundModifier = (NiRTTI *)0x030153F8;
-const NiRTTI *	NiRTTI_BSPSysInheritVelocityModifier = (NiRTTI *)0x03015408;
-const NiRTTI *	NiRTTI_NiPSysVolumeEmitter = (NiRTTI *)0x03015418;
-const NiRTTI *	NiRTTI_NiPSysModifierFloatCtlr = (NiRTTI *)0x03015428;
-const NiRTTI *	NiRTTI_NiPSysFieldModifier = (NiRTTI *)0x03015438;
-const NiRTTI *	NiRTTI_NiPSysModifierBoolCtlr = (NiRTTI *)0x03015448;
-const NiRTTI *	NiRTTI_NiPSysCollider = (NiRTTI *)0x03015458;
-const NiRTTI *	NiRTTI_BSMultiBound = (NiRTTI *)0x0301D708;
-const NiRTTI *	NiRTTI_BSMultiBoundRoom = (NiRTTI *)0x0301D718;
-const NiRTTI *	NiRTTI_BSMultiBoundAABB = (NiRTTI *)0x0301D730;
-const NiRTTI *	NiRTTI_BSMultiBoundOBB = (NiRTTI *)0x0301D748;
-const NiRTTI *	NiRTTI_BSXFlags = (NiRTTI *)0x0301D768;
-const NiRTTI *	NiRTTI_BSValueNode = (NiRTTI *)0x0301D780;
-const NiRTTI *	NiRTTI_BSWindModifier = (NiRTTI *)0x03023D00;
-const NiRTTI *	NiRTTI_BSTempNodeManager = (NiRTTI *)0x03023D20;
-const NiRTTI *	NiRTTI_BSTempNode = (NiRTTI *)0x03023D30;
-const NiRTTI *	NiRTTI_BSOcclusionShape = (NiRTTI *)0x03023D50;
-const NiRTTI *	NiRTTI_BSRangeNode = (NiRTTI *)0x03023E48;
-const NiRTTI *	NiRTTI_BSBlastNode = (NiRTTI *)0x03024080;
-const NiRTTI *	NiRTTI_BSDebrisNode = (NiRTTI *)0x03024090;
-const NiRTTI *	NiRTTI_BSDamageStage = (NiRTTI *)0x030240A0;
-const NiRTTI *	NiRTTI_BSPSysArrayEmitter = (NiRTTI *)0x030240B0;
-const NiRTTI *	NiRTTI_PArrayPoint = (NiRTTI *)0x030240C0;
-const NiRTTI *	NiRTTI_BSMultiStreamInstanceTriShape = (NiRTTI *)0x030240E8;
-const NiRTTI *	NiRTTI_BSMultiBoundShape = (NiRTTI *)0x03024118;
-const NiRTTI *	NiRTTI_BSMultiBoundSphere = (NiRTTI *)0x03024128;
-const NiRTTI *	NiRTTI_BSOcclusionBox = (NiRTTI *)0x03024140;
-const NiRTTI *	NiRTTI_BSOcclusionPlane = (NiRTTI *)0x03024158;
-const NiRTTI *	NiRTTI_BSPortal = (NiRTTI *)0x03024168;
-const NiRTTI *	NiRTTI_BSPortalSharedNode = (NiRTTI *)0x03024178;
-const NiRTTI *	NiRTTI_BSBodyMorphOffsetsExtraData = (NiRTTI *)0x03024190;
-const NiRTTI *	NiRTTI_BSBehaviorGraphExtraData = (NiRTTI *)0x030241A0;
-const NiRTTI *	NiRTTI_NiBSBoneLODController = (NiRTTI *)0x030241B8;
-const NiRTTI *	NiRTTI_BSCullingProcess = (NiRTTI *)0x030241D8;
-const NiRTTI *	NiRTTI_BSParticleSystemManager = (NiRTTI *)0x030241F8;
-const NiRTTI *	NiRTTI_BSFurnitureMarkerNode = (NiRTTI *)0x03024220;
-const NiRTTI *	NiRTTI_BSBound = (NiRTTI *)0x030242A0;
-const NiRTTI *	NiRTTI_BSMultiBoundNode = (NiRTTI *)0x03024330;
-const NiRTTI *	NiRTTI_BSBoneMap = (NiRTTI *)0x03024340;
-const NiRTTI *	NiRTTI_BSAnimInteractionMarker = (NiRTTI *)0x03024358;
-const NiRTTI *	NiRTTI_BSSceneGraph = (NiRTTI *)0x03024370;
-const NiRTTI *	NiRTTI_BSPSysMultiTargetEmitterCtlr = (NiRTTI *)0x03024388;
-const NiRTTI *	NiRTTI_BSGeometryListCullingProcess = (NiRTTI *)0x030243A0;
-const NiRTTI *	NiRTTI_BSSubIndexTriShape = (NiRTTI *)0x030243B8;
-const NiRTTI *	NiRTTI_BSDistantObjectLargeRefExtraData = (NiRTTI *)0x030243C8;
-const NiRTTI *	NiRTTI_BSMasterParticleSystem = (NiRTTI *)0x03025D90;
-const NiRTTI *	NiRTTI_BSProceduralLightningController = (NiRTTI *)0x03025DB8;
-const NiRTTI *	NiRTTI_BSInvMarker = (NiRTTI *)0x03025DC8;
-const NiRTTI *	NiRTTI_BSBoneLODExtraData = (NiRTTI *)0x03025DE0;
-const NiRTTI *	NiRTTI_BSReference = (NiRTTI *)0x03025E00;
-const NiRTTI *	NiRTTI_BSNodeReferences = (NiRTTI *)0x03025E10;
-const NiRTTI *	NiRTTI_BSDecalPlacementVectorExtraData = (NiRTTI *)0x03025E20;
-const NiRTTI *	NiRTTI_BSParentVelocityModifier = (NiRTTI *)0x03025E30;
-const NiRTTI *	NiRTTI_BSWArray = (NiRTTI *)0x03025E40;
-const NiRTTI *	NiRTTI_BSMultiBoundCapsule = (NiRTTI *)0x03025E58;
-const NiRTTI *	NiRTTI_BSPSysStripUpdateModifier = (NiRTTI *)0x03025E68;
-const NiRTTI *	NiRTTI_BSPSysSubTexModifier = (NiRTTI *)0x03025E78;
-const NiRTTI *	NiRTTI_BSPSysScaleModifier = (NiRTTI *)0x03025E88;
-const NiRTTI *	NiRTTI_BSLagBoneController = (NiRTTI *)0x03025E98;
-const NiRTTI *	NiRTTI_BSNonUniformScaleExtraData = (NiRTTI *)0x03025EA8;
-const NiRTTI *	NiRTTI_BSNiNode = (NiRTTI *)0x03025EC0;
-const NiRTTI *	NiRTTI_BSInstanceTriShape = (NiRTTI *)0x03025ED0;
-const NiRTTI *	NiRTTI_bhkWorldObject = (NiRTTI *)0x0302CC68;
-const NiRTTI *	NiRTTI_bhkWorld = (NiRTTI *)0x0302CCA8;
-const NiRTTI *	NiRTTI_bhkRigidBody = (NiRTTI *)0x0302DDE8;
-const NiRTTI *	NiRTTI_bhkCollisionObject = (NiRTTI *)0x0302DE00;
-const NiRTTI *	NiRTTI_bhkNiCollisionObject = (NiRTTI *)0x0302DEB0;
-const NiRTTI *	NiRTTI_bhkAttachmentCollisionObject = (NiRTTI *)0x0302DF40;
-const NiRTTI *	NiRTTI_WeaponObject = (NiRTTI *)0x0302DF50;
-const NiRTTI *	NiRTTI_bhkRigidBodyT = (NiRTTI *)0x0302DF78;
-const NiRTTI *	NiRTTI_bhkWorldM = (NiRTTI *)0x0302DF88;
-const NiRTTI *	NiRTTI_bhkRefObject = (NiRTTI *)0x0302DFB0;
-const NiRTTI *	NiRTTI_bhkSerializable = (NiRTTI *)0x0302DFC0;
-const NiRTTI *	NiRTTI_bhkShape = (NiRTTI *)0x0302DFF0;
-const NiRTTI *	NiRTTI_bhkEntity = (NiRTTI *)0x0302E008;
-const NiRTTI *	NiRTTI_bhkPhantom = (NiRTTI *)0x0302E020;
-const NiRTTI *	NiRTTI_bhkAabbPhantom = (NiRTTI *)0x0302E038;
-const NiRTTI *	NiRTTI_bhkSphereRepShape = (NiRTTI *)0x0302E050;
-const NiRTTI *	NiRTTI_bhkConvexShape = (NiRTTI *)0x0302E068;
-const NiRTTI *	NiRTTI_bhkPCollisionObject = (NiRTTI *)0x0302E078;
-const NiRTTI *	NiRTTI_hkPackedNiTriStripsData = (NiRTTI *)0x0302E088;
-const NiRTTI *	NiRTTI_bhkShapePhantom = (NiRTTI *)0x0302E0A0;
-const NiRTTI *	NiRTTI_bhkSimpleShapePhantom = (NiRTTI *)0x0302E0B8;
-const NiRTTI *	NiRTTI_bhkCapsuleShape = (NiRTTI *)0x0302E0D0;
-const NiRTTI *	NiRTTI_bhkBoxShape = (NiRTTI *)0x0302E0E8;
-const NiRTTI *	NiRTTI_bhkSphereShape = (NiRTTI *)0x0302E100;
-const NiRTTI *	NiRTTI_bhkBvTreeShape = (NiRTTI *)0x0302E118;
-const NiRTTI *	NiRTTI_bhkNiTriStripsShape = (NiRTTI *)0x0302E130;
-const NiRTTI *	NiRTTI_bhkPackedNiTriStripsShape = (NiRTTI *)0x0302E158;
-const NiRTTI *	NiRTTI_bhkBlendCollisionObject = (NiRTTI *)0x0302E170;
-const NiRTTI *	NiRTTI_bhkAvoidBox = (NiRTTI *)0x0302E190;
-const NiRTTI *	NiRTTI_bhkLimitedHingeConstraint = (NiRTTI *)0x0302E1A8;
-const NiRTTI *	NiRTTI_bhkMalleableConstraint = (NiRTTI *)0x0302E1C0;
-const NiRTTI *	NiRTTI_bhkConstraint = (NiRTTI *)0x0302E1D8;
-const NiRTTI *	NiRTTI_bhkPrismaticConstraint = (NiRTTI *)0x0302E1F0;
-const NiRTTI *	NiRTTI_bhkAction = (NiRTTI *)0x0302E208;
-const NiRTTI *	NiRTTI_bhkUnaryAction = (NiRTTI *)0x0302E220;
-const NiRTTI *	NiRTTI_bhkTriSampledHeightFieldBvTreeShape = (NiRTTI *)0x0302E238;
-const NiRTTI *	NiRTTI_bhkCachingShapePhantom = (NiRTTI *)0x0302EEA8;
-const NiRTTI *	NiRTTI_bhkRagdollTemplateData = (NiRTTI *)0x0302EED0;
-const NiRTTI *	NiRTTI_bhkRagdollTemplate = (NiRTTI *)0x0302EEE0;
-const NiRTTI *	NiRTTI_bhkSPCollisionObject = (NiRTTI *)0x0302EEF0;
-const NiRTTI *	NiRTTI_bhkMouseSpringAction = (NiRTTI *)0x0302EF08;
-const NiRTTI *	NiRTTI_bhkHingeConstraint = (NiRTTI *)0x0302EF20;
-const NiRTTI *	NiRTTI_bhkCompressedMeshShape = (NiRTTI *)0x0302EF98;
-const NiRTTI *	NiRTTI_bhkCompressedMeshShapeData = (NiRTTI *)0x0302EFA8;
-const NiRTTI *	NiRTTI_bhkConvexSweepShape = (NiRTTI *)0x0302EFC0;
-const NiRTTI *	NiRTTI_bhkConvexTransformShape = (NiRTTI *)0x0302EFD8;
-const NiRTTI *	NiRTTI_bhkConvexTranslateShape = (NiRTTI *)0x0302EFF0;
-const NiRTTI *	NiRTTI_bhkConvexVerticesShape = (NiRTTI *)0x0302F008;
-const NiRTTI *	NiRTTI_bhkCylinderShape = (NiRTTI *)0x0302F020;
-const NiRTTI *	NiRTTI_bhkMultiSphereShape = (NiRTTI *)0x0302F038;
-const NiRTTI *	NiRTTI_bhkPlaneShape = (NiRTTI *)0x0302F050;
-const NiRTTI *	NiRTTI_bhkTriangleShape = (NiRTTI *)0x0302F068;
-const NiRTTI *	NiRTTI_bhkMoppBvTreeShape = (NiRTTI *)0x0302F080;
-const NiRTTI *	NiRTTI_bhkTransformShape = (NiRTTI *)0x0302F098;
-const NiRTTI *	NiRTTI_bhkListShape = (NiRTTI *)0x0302F0B0;
-const NiRTTI *	NiRTTI_bhkBallAndSocketConstraint = (NiRTTI *)0x0302F0C8;
-const NiRTTI *	NiRTTI_bhkBallSocketConstraintChain = (NiRTTI *)0x0302F0E0;
-const NiRTTI *	NiRTTI_bhkGroupConstraint = (NiRTTI *)0x0302F0F8;
-const NiRTTI *	NiRTTI_bhkHingeLimitsConstraint = (NiRTTI *)0x0302F110;
-const NiRTTI *	NiRTTI_bhkFixedConstraint = (NiRTTI *)0x0302F128;
-const NiRTTI *	NiRTTI_bhkRagdollConstraint = (NiRTTI *)0x0302F140;
-const NiRTTI *	NiRTTI_bhkRagdollLimitsConstraint = (NiRTTI *)0x0302F158;
-const NiRTTI *	NiRTTI_bhkStiffSpringConstraint = (NiRTTI *)0x0302F170;
-const NiRTTI *	NiRTTI_bhkWheelConstraint = (NiRTTI *)0x0302F188;
-const NiRTTI *	NiRTTI_bhkBreakableConstraint = (NiRTTI *)0x0302F1A0;
-const NiRTTI *	NiRTTI_bhkAngularDashpotAction = (NiRTTI *)0x0302F1B8;
-const NiRTTI *	NiRTTI_bhkDashpotAction = (NiRTTI *)0x0302F1D0;
-const NiRTTI *	NiRTTI_bhkLiquidAction = (NiRTTI *)0x0302F1E8;
-const NiRTTI *	NiRTTI_bhkMotorAction = (NiRTTI *)0x0302F208;
-const NiRTTI *	NiRTTI_bhkOrientHingedBodyAction = (NiRTTI *)0x0302F220;
-const NiRTTI *	NiRTTI_bhkSpringAction = (NiRTTI *)0x0302F238;
-const NiRTTI *	NiRTTI_bhkBlendController = (NiRTTI *)0x0302F248;
-const NiRTTI *	NiRTTI_bhkExtraData = (NiRTTI *)0x0302F258;
-const NiRTTI *	NiRTTI_bhkPoseArray = (NiRTTI *)0x0302F268;
-const NiRTTI *	NiRTTI_bhkGenericConstraint = (NiRTTI *)0x0302F288;
-const NiRTTI *	NiRTTI_bhkCharControllerShape = (NiRTTI *)0x0302F298;
-const NiRTTI *	NiRTTI_bhkCollisionBox = (NiRTTI *)0x0302F2B0;
-const NiRTTI *	NiRTTI_bhkShapeCollection = (NiRTTI *)0x0302F2C8;
-const NiRTTI *	NiRTTI_bhkPositionConstraintMotor = (NiRTTI *)0x0302F330;
-const NiRTTI *	NiRTTI_bhkVelocityConstraintMotor = (NiRTTI *)0x0302F340;
-const NiRTTI *	NiRTTI_bhkSpringDamperConstraintMotor = (NiRTTI *)0x0302F350;
-const NiRTTI *	NiRTTI_bhkCharacterProxy = (NiRTTI *)0x03030108;
-const NiRTTI *	NiRTTI_bhkCharacterRigidBody = (NiRTTI *)0x03030120;
-const NiRTTI *	NiRTTI_bhkHeightFieldShape = (NiRTTI *)0x03031428;
-const NiRTTI *	NiRTTI_bhkConstraintChain = (NiRTTI *)0x03031440;
-const NiRTTI *	NiRTTI_bhkBinaryAction = (NiRTTI *)0x03031458;
-const NiRTTI *	NiRTTI_bhkPointToPathConstraint = (NiRTTI *)0x03031490;
-const NiRTTI *	NiRTTI_DebugTextExtraData = (NiRTTI *)0x03032C80;
-const NiRTTI *	NiRTTI_BSFadeNode = (NiRTTI *)0x031D0D90;
-const NiRTTI *	NiRTTI_BSShaderProperty = (NiRTTI *)0x031D0DC0;
-const NiRTTI *	NiRTTI_BSLeafAnimNode = (NiRTTI *)0x031D0DD0;
-const NiRTTI *	NiRTTI_BSTreeNode = (NiRTTI *)0x031D0DE0;
-const NiRTTI *	NiRTTI_ShadowSceneNode = (NiRTTI *)0x031D1200;
-const NiRTTI *	NiRTTI_BSLightingShaderProperty = (NiRTTI *)0x031D1AF8;
-const NiRTTI *	NiRTTI_BSGrassShaderProperty = (NiRTTI *)0x031D1B30;
-const NiRTTI *	NiRTTI_BSShaderAccumulator = (NiRTTI *)0x031D1D40;
-const NiRTTI *	NiRTTI_BSEffectShaderProperty = (NiRTTI *)0x031D1F00;
-const NiRTTI *	NiRTTI_BSWaterShaderProperty = (NiRTTI *)0x03232D28;
-const NiRTTI *	NiRTTI_BSBloodSplatterShaderProperty = (NiRTTI *)0x03232D38;
-const NiRTTI *	NiRTTI_BSParticleShaderProperty = (NiRTTI *)0x032331B8;
-const NiRTTI *	NiRTTI_BSTextureSet = (NiRTTI *)0x03233508;
-const NiRTTI *	NiRTTI_BSShaderTextureSet = (NiRTTI *)0x03233518;
-const NiRTTI *	NiRTTI_BSSkyShaderProperty = (NiRTTI *)0x03233818;
-const NiRTTI *	NiRTTI_BSFadeNodeCuller = (NiRTTI *)0x032838A0;
-const NiRTTI *	NiRTTI_BSDistantTreeShaderProperty = (NiRTTI *)0x032838D0;
-const NiRTTI *	NiRTTI_BSCubeMapCamera = (NiRTTI *)0x03283AB0;
-const NiRTTI *	NiRTTI_BSFogProperty = (NiRTTI *)0x03283B68;
-const NiRTTI *	NiRTTI_BSClearZNode = (NiRTTI *)0x03495C48;
-const NiRTTI *	NiRTTI_NiCollisionObject = (NiRTTI *)0x03495D68;
-const NiRTTI *	NiRTTI_BSOrderedNode = (NiRTTI *)0x03495D78;
-const NiRTTI *	NiRTTI_BSLines = (NiRTTI *)0x03495D88;
-const NiRTTI *	NiRTTI_BSDynamicLines = (NiRTTI *)0x03495D98;
-const NiRTTI *	NiRTTI_BSMultiIndexTriShape = (NiRTTI *)0x03495DB8;
-const NiRTTI *	NiRTTI_BSLightingShaderPropertyFloatController = (NiRTTI *)0x03495E60;
-const NiRTTI *	NiRTTI_BSLightingShaderPropertyUShortController = (NiRTTI *)0x03495E78;
-const NiRTTI *	NiRTTI_BSLightingShaderPropertyColorController = (NiRTTI *)0x03495E90;
-const NiRTTI *	NiRTTI_BSEffectShaderPropertyFloatController = (NiRTTI *)0x03495EC8;
-const NiRTTI *	NiRTTI_BSEffectShaderPropertyColorController = (NiRTTI *)0x03495EE0;
-const NiRTTI *	NiRTTI_BSNiAlphaPropertyTestRefController = (NiRTTI *)0x03495EF0;
-const NiRTTI *	NiRTTI_BSPSysSimpleColorModifier = (NiRTTI *)0x03495F00;
-const NiRTTI *	NiRTTI_BSPSysLODModifier = (NiRTTI *)0x03495F10;
-const NiRTTI *	NiRTTI_BSParabolicCullingProcess = (NiRTTI *)0x03496398;
-const NiRTTI *	NiRTTI_BSMeshLODTriShape = (NiRTTI *)0x034963A8;
-const NiRTTI *	NiRTTI_BSLODMultiIndexTriShape = (NiRTTI *)0x034963B8;
-const NiRTTI *	NiRTTI_BSSubIndexLandTriShape = (NiRTTI *)0x034963D0;
+INiRTTI::INiRTTI()
+{
+	for (size_t i = 0; i < NUM_NIRTTI; i++) {
+		addrs[i] = IAL::Addr<NiRTTI*>(aids[i]);
+	}
+}
+
+unsigned long long INiRTTI::aids[NUM_NIRTTI] = {
+	514417, //BGSDecalNode
+	514462, //BSAnimGroupSequence
+	514508, //BSSplatterExtraData
+	514633, //BGSAddonNodeSoundHandleExtra
+	514966, //REFRSyncController
+	515427, //bhkCartTether
+	515428, //bhkTiltPreventAction
+	515429, //bhkWheelAction
+	515540, //BSFaceGenAnimationData
+	515558, //BSFaceGenModelExtraData
+	515562, //BSFaceGenBaseMorphExtraData
+	515563, //BSFaceGenMorphData
+	515564, //BSFaceGenMorphDataHead
+	515565, //BSFaceGenMorphDataHair
+	515572, //BSFaceGenNiNode
+	515912, //BSTempEffect
+	515921, //BSTempEffectDebris
+	515924, //BSTempEffectGeometryDecal
+	515935, //BSTempEffectParticle
+	515938, //BSTempEffectSimpleDecal
+	515940, //BSTempEffectSPG
+	516226, //bhkAutoWater
+	516697, //ModelReferenceEffect
+	516706, //ReferenceEffect
+	516712, //ShaderReferenceEffect
+	516720, //SummonPlacementEffect
+	517222, //SceneGraph
+	517601, //BSDoorHavokController
+	517602, //BSPlayerDistanceCheckController
+	517603, //BSSimpleScaleController
+	523891, //NiObject
+	523895, //NiAVObject
+	523900, //NiNode
+	523910, //NiObjectNET
+	523923, //NiLight
+	523924, //NiSwitchNode
+	523925, //NiStringsExtraData
+	523926, //NiCamera
+	523928, //BSTriShape
+	523929, //NiProperty
+	523931, //NiAlphaProperty
+	523939, //NiSourceTexture
+	523940, //BSFlattenedBoneTree
+	523941, //BSDismemberSkinInstance
+	523942, //NiStringExtraData
+	523943, //NiTimeController
+	523948, //NiExtraData
+	523949, //NiGeometryData
+	523951, //BSGeometry
+	523953, //BSDynamicTriShape
+	523954, //NiPointLight
+	523955, //NiDefaultAVObjectPalette
+	523959, //NiBillboardNode
+	523960, //NiDirectionalLight
+	523961, //NiCullingProcess
+	523963, //NiParticles
+	523967, //NiTexture
+	523974, //NiSkinPartition
+	523975, //NiVertWeightsExtraData
+	523976, //NiSkinInstance
+	523977, //NiAVObjectPalette
+	523978, //NiGeometry
+	523986, //NiSkinData
+	523987, //NiShadeProperty
+	523989, //NiAlphaAccumulator
+	523990, //NiAmbientLight
+	523991, //NiBinaryExtraData
+	523992, //NiBooleanExtraData
+	523993, //NiBSPNode
+	523994, //NiColorExtraData
+	523995, //NiFloatExtraData
+	523996, //NiFloatsExtraData
+	523997, //NiFogProperty
+	523999, //NiIntegerExtraData
+	524000, //NiIntegersExtraData
+	524004, //NiParticlesData
+	524005, //NiParticleMeshesData
+	524006, //NiParticleMeshes
+	524007, //NiSpotLight
+	524008, //NiSwitchStringExtraData
+	524009, //NiTriShapeData
+	524010, //NiTriShape
+	524011, //NiTriStripsData
+	524012, //NiTriStrips
+	524013, //NiVectorExtraData
+	524017, //BSLODTriShape
+	524018, //NiAdditionalGeometryData
+	524019, //BSSegmentedTriShape
+	524024, //NiAccumulator
+	524025, //NiBackToFrontAccumulator
+	524026, //NiTriBasedGeomData
+	524027, //NiTriBasedGeom
+	524035, //NiCollisionData
+	524054, //NiControllerManager
+	524057, //NiControllerSequence
+	524060, //NiBlendInterpolator
+	524061, //NiMultiTargetTransformController
+	524062, //BSMultiTargetTreadTransfController
+	524063, //NiInterpController
+	524338, //NiFloatData
+	524339, //NiFloatInterpolator
+	524340, //NiColorData
+	524341, //NiColorInterpolator
+	524342, //NiSingleInterpController
+	524343, //NiTransformInterpolator
+	524344, //NiPathInterpolator
+	524348, //NiBlendTransformInterpolator
+	524349, //NiBlendFloatInterpolator
+	524350, //NiFloatExtraDataController
+	524351, //NiTransformController
+	524352, //NiBlendAccumTransformInterpolator
+	524353, //NiInterpolator
+	524358, //BSBlendTreadTransfInterpolator
+	524361, //NiKeyBasedInterpolator
+	524377, //NiTransformData
+	524378, //NiPosData
+	524379, //NiBlendBoolInterpolator
+	524380, //NiBlendColorInterpolator
+	524381, //NiBlendPoint3Interpolator
+	524382, //NiBlendQuaternionInterpolator
+	524383, //NiBoolData
+	524384, //NiBoolInterpolator
+	524385, //NiBoolTimelineInterpolator
+	524386, //NiBSplineBasisData
+	524387, //NiBSplineData
+	524388, //NiBSplineColorInterpolator
+	524389, //NiBSplineCompColorInterpolator
+	524390, //NiBSplineCompFloatInterpolator
+	524391, //NiBSplineCompPoint3Interpolator
+	524392, //NiBSplineCompTransformInterpolator
+	524393, //NiBSplineFloatInterpolator
+	524394, //NiBSplinePoint3Interpolator
+	524395, //NiBSplineTransformInterpolator
+	524396, //NiColorExtraDataController
+	524397, //NiFloatsExtraDataController
+	524398, //NiFloatsExtraDataPoint3Controller
+	524399, //NiKeyframeManager
+	524400, //NiLightColorController
+	524401, //NiLightDimmerController
+	524402, //NiLookAtController
+	524403, //NiLookAtInterpolator
+	524404, //NiMorphData
+	524405, //NiPathController
+	524406, //NiPoint3Interpolator
+	524407, //NiQuaternionInterpolator
+	524408, //NiRollController
+	524409, //NiRotData
+	524410, //NiSequence
+	524413, //NiSequenceStreamHelper
+	524414, //NiStringPalette
+	524415, //NiTextKeyExtraData
+	524416, //NiUVData
+	524417, //NiVisController
+	524418, //BSAnimNote
+	524419, //BSAnimNotes
+	524420, //BSGrabIKNote
+	524421, //BSLookIKNote
+	524422, //BSRotAccumTransfInterpolator
+	524423, //BSTreadTransfInterpolator
+	524424, //BSFrustumFOVController
+	524458, //NiExtraDataController
+	524459, //NiBSplineInterpolator
+	524460, //NiPoint3InterpController
+	524461, //NiFloatInterpController
+	524462, //NiFloatController
+	524463, //NiBoolInterpController
+	524465, //NiParticleSystem
+	524466, //NiPSysEmitterCtlr
+	524467, //NiPSysGravityModifier
+	524468, //BSPSysHavokUpdateModifier
+	524470, //NiMeshParticleSystem
+	524473, //NiPSysCylinderEmitter
+	524474, //BSStripParticleSystem
+	524475, //NiPSysEmitter
+	524477, //NiPSysModifierCtlr
+	524478, //NiPSysModifier
+	524479, //NiPSysMeshUpdateModifier
+	524480, //NiPSysUpdateCtlr
+	524481, //NiMeshPSysData
+	524482, //NiPSysAirFieldAirFrictionCtlr
+	524483, //NiPSysAirFieldInheritVelocityCtlr
+	524484, //NiPSysAirFieldModifier
+	524485, //NiPSysAirFieldSpreadCtlr
+	524486, //NiPSysAgeDeathModifier
+	524487, //NiPSysBombModifier
+	524488, //NiPSysBoundUpdateModifier
+	524489, //NiPSysBoxEmitter
+	524490, //NiPSysColliderManager
+	524491, //NiPSysColorModifier
+	524492, //NiPSysData
+	524493, //NiPSysDragFieldModifier
+	524494, //NiPSysDragModifier
+	524495, //NiPSysEmitterCtlrData
+	524496, //NiPSysEmitterDeclinationCtlr
+	524497, //NiPSysEmitterDeclinationVarCtlr
+	524498, //NiPSysEmitterInitialRadiusCtlr
+	524499, //NiPSysEmitterLifeSpanCtlr
+	524500, //NiPSysEmitterPlanarAngleCtlr
+	524501, //NiPSysEmitterPlanarAngleVarCtlr
+	524502, //NiPSysEmitterSpeedCtlr
+	524503, //NiPSysFieldAttenuationCtlr
+	524504, //NiPSysFieldMagnitudeCtlr
+	524505, //NiPSysFieldMaxDistanceCtlr
+	524506, //NiPSysGravityFieldModifier
+	524507, //NiPSysGravityStrengthCtlr
+	524508, //NiPSysGrowFadeModifier
+	524509, //NiPSysInitialRotAngleCtlr
+	524510, //NiPSysInitialRotAngleVarCtlr
+	524511, //NiPSysInitialRotSpeedCtlr
+	524512, //NiPSysInitialRotSpeedVarCtlr
+	524513, //NiPSysMeshEmitter
+	524518, //NiPSysModifierActiveCtlr
+	524519, //NiPSysPlanarCollider
+	524522, //NiPSysPositionModifier
+	524523, //NiPSysRadialFieldModifier
+	524524, //NiPSysResetOnLoopCtlr
+	524525, //NiPSysRotationModifier
+	524526, //NiPSysSpawnModifier
+	524527, //NiPSysSphereEmitter
+	524528, //NiPSysSphericalCollider
+	524529, //NiPSysTurbulenceFieldModifier
+	524530, //NiPSysVortexFieldModifier
+	524531, //BSStripPSysData
+	524533, //BSPSysRecycleBoundModifier
+	524534, //BSPSysInheritVelocityModifier
+	524535, //NiPSysVolumeEmitter
+	524536, //NiPSysModifierFloatCtlr
+	524537, //NiPSysFieldModifier
+	524538, //NiPSysModifierBoolCtlr
+	524539, //NiPSysCollider
+	524551, //BSMultiBound
+	524552, //BSMultiBoundRoom
+	524554, //BSMultiBoundAABB
+	524556, //BSMultiBoundOBB
+	524558, //BSXFlags
+	524560, //BSValueNode
+	524568, //BSWindModifier
+	524572, //BSTempNodeManager
+	524573, //BSTempNode
+	524577, //BSOcclusionShape
+	524594, //BSRangeNode
+	524598, //BSBlastNode
+	524599, //BSDebrisNode
+	524600, //BSDamageStage
+	524601, //BSPSysArrayEmitter
+	524602, //PArrayPoint
+	524606, //BSMultiStreamInstanceTriShape
+	524611, //BSMultiBoundShape
+	524612, //BSMultiBoundSphere
+	524614, //BSOcclusionBox
+	524616, //BSOcclusionPlane
+	524617, //BSPortal
+	524618, //BSPortalSharedNode
+	524620, //BSBodyMorphOffsetsExtraData
+	524621, //BSBehaviorGraphExtraData
+	524623, //NiBSBoneLODController
+	524626, //BSCullingProcess
+	524629, //BSParticleSystemManager
+	524633, //BSFurnitureMarkerNode
+	524648, //BSBound
+	524676, //BSMultiBoundNode
+	524677, //BSBoneMap
+	524679, //BSAnimInteractionMarker
+	524681, //BSSceneGraph
+	524684, //BSPSysMultiTargetEmitterCtlr
+	524686, //BSGeometryListCullingProcess
+	524688, //BSSubIndexTriShape
+	524689, //BSDistantObjectLargeRefExtraData
+	524698, //BSMasterParticleSystem
+	524703, //BSProceduralLightningController
+	524704, //BSInvMarker
+	524706, //BSBoneLODExtraData
+	524708, //BSReference
+	524709, //BSNodeReferences
+	524710, //BSDecalPlacementVectorExtraData
+	524711, //BSParentVelocityModifier
+	524712, //BSWArray
+	524714, //BSMultiBoundCapsule
+	524715, //BSPSysStripUpdateModifier
+	524716, //BSPSysSubTexModifier
+	524717, //BSPSysScaleModifier
+	524718, //BSLagBoneController
+	524719, //BSNonUniformScaleExtraData
+	524721, //BSNiNode
+	524722, //BSInstanceTriShape
+	525039, //bhkWorldObject
+	525051, //bhkWorld
+	525068, //bhkRigidBody
+	525071, //bhkCollisionObject
+	525089, //bhkNiCollisionObject
+	525101, //bhkAttachmentCollisionObject
+	525102, //WeaponObject
+	525106, //bhkRigidBodyT
+	525107, //bhkWorldM
+	525108, //bhkRefObject
+	525109, //bhkSerializable
+	525115, //bhkShape
+	525117, //bhkEntity
+	525119, //bhkPhantom
+	525121, //bhkAabbPhantom
+	525123, //bhkSphereRepShape
+	525126, //bhkConvexShape
+	525127, //bhkPCollisionObject
+	525128, //hkPackedNiTriStripsData
+	525130, //bhkShapePhantom
+	525132, //bhkSimpleShapePhantom
+	525134, //bhkCapsuleShape
+	525136, //bhkBoxShape
+	525138, //bhkSphereShape
+	525140, //bhkBvTreeShape
+	525142, //bhkNiTriStripsShape
+	525145, //bhkPackedNiTriStripsShape
+	525147, //bhkBlendCollisionObject
+	525150, //bhkAvoidBox
+	525152, //bhkLimitedHingeConstraint
+	525154, //bhkMalleableConstraint
+	525156, //bhkConstraint
+	525158, //bhkPrismaticConstraint
+	525160, //bhkAction
+	525162, //bhkUnaryAction
+	525164, //bhkTriSampledHeightFieldBvTreeShape
+	525177, //bhkCachingShapePhantom
+	525181, //bhkRagdollTemplateData
+	525182, //bhkRagdollTemplate
+	525183, //bhkSPCollisionObject
+	525185, //bhkMouseSpringAction
+	525187, //bhkHingeConstraint
+	525198, //bhkCompressedMeshShape
+	525199, //bhkCompressedMeshShapeData
+	525201, //bhkConvexSweepShape
+	525203, //bhkConvexTransformShape
+	525205, //bhkConvexTranslateShape
+	525207, //bhkConvexVerticesShape
+	525209, //bhkCylinderShape
+	525211, //bhkMultiSphereShape
+	525213, //bhkPlaneShape
+	525215, //bhkTriangleShape
+	525217, //bhkMoppBvTreeShape
+	525219, //bhkTransformShape
+	525221, //bhkListShape
+	525223, //bhkBallAndSocketConstraint
+	525225, //bhkBallSocketConstraintChain
+	525227, //bhkGroupConstraint
+	525229, //bhkHingeLimitsConstraint
+	525231, //bhkFixedConstraint
+	525233, //bhkRagdollConstraint
+	525235, //bhkRagdollLimitsConstraint
+	525237, //bhkStiffSpringConstraint
+	525239, //bhkWheelConstraint
+	525241, //bhkBreakableConstraint
+	525243, //bhkAngularDashpotAction
+	525245, //bhkDashpotAction
+	525247, //bhkLiquidAction
+	525250, //bhkMotorAction
+	525252, //bhkOrientHingedBodyAction
+	525254, //bhkSpringAction
+	525255, //bhkBlendController
+	525256, //bhkExtraData
+	525257, //bhkPoseArray
+	525260, //bhkGenericConstraint
+	525261, //bhkCharControllerShape
+	525263, //bhkCollisionBox
+	525265, //bhkShapeCollection
+	525267, //bhkPositionConstraintMotor
+	525268, //bhkVelocityConstraintMotor
+	525269, //bhkSpringDamperConstraintMotor
+	525445, //bhkCharacterProxy
+	525447, //bhkCharacterRigidBody
+	525456, //bhkHeightFieldShape
+	525458, //bhkConstraintChain
+	525460, //bhkBinaryAction
+	525466, //bhkPointToPathConstraint
+	525589, //DebugTextExtraData
+	527630, //BSFadeNode
+	527634, //BSShaderProperty
+	527635, //BSLeafAnimNode
+	527636, //BSTreeNode
+	527735, //ShadowSceneNode
+	527752, //BSLightingShaderProperty
+	527760, //BSGrassShaderProperty
+	527798, //BSShaderAccumulator
+	527834, //BSEffectShaderProperty
+	527905, //BSWaterShaderProperty
+	527906, //BSBloodSplatterShaderProperty
+	527992, //BSParticleShaderProperty
+	528103, //BSTextureSet
+	528104, //BSShaderTextureSet
+	528205, //BSSkyShaderProperty
+	528214, //BSFadeNodeCuller
+	528220, //BSDistantTreeShaderProperty
+	528279, //BSCubeMapCamera
+	528312, //BSFogProperty
+	528336, //BSClearZNode
+	528359, //NiCollisionObject
+	528360, //BSOrderedNode
+	528361, //BSLines
+	528362, //BSDynamicLines
+	528364, //BSMultiIndexTriShape
+	528394, //BSLightingShaderPropertyFloatController
+	528397, //BSLightingShaderPropertyUShortController
+	528400, //BSLightingShaderPropertyColorController
+	528411, //BSEffectShaderPropertyFloatController
+	528413, //BSEffectShaderPropertyColorController
+	528414, //BSNiAlphaPropertyTestRefController
+	528415, //BSPSysSimpleColorModifier
+	528416, //BSPSysLODModifier
+	528534, //BSParabolicCullingProcess
+	528535, //BSMeshLODTriShape
+	528536, //BSLODMultiIndexTriShape
+	528538  //BSSubIndexLandTriShape
+};
+
+NiRTTI* INiRTTI::addrs[NUM_NIRTTI];
\ No newline at end of file
diff --git a/skse64/skse64/NiRTTI.h b/skse64/skse64/NiRTTI.h
index b2d2c56..2500bac 100644
--- a/skse64/skse64/NiRTTI.h
+++ b/skse64/skse64/NiRTTI.h
@@ -431,419 +431,438 @@ public:
 	NiRTTI		* parent;
 };
 
-NiObject * DoNiRTTICast(NiObject * src, const NiRTTI * typeInfo);
-bool IsType(NiRTTI * rtti, const NiRTTI * typeInfo);
 
-#define ni_cast(obj, type)	(type *)DoNiRTTICast(obj, NiRTTI_##type)
-#define ni_is_type(obj, type) IsType(obj, NiRTTI_##type)
+constexpr size_t NUM_NIRTTI = 410;
+
+
+class INiRTTI
+{
+public:
+    static NiObject* Cast(NiObject* src, uint32_t typeIndex);
+    static bool IsType(NiRTTI* rtti, uint32_t typeIndex);
+private:
+    INiRTTI();
+
+    static unsigned long long aids[NUM_NIRTTI];
+    static NiRTTI* addrs[NUM_NIRTTI];
+
+    static INiRTTI m_Instance;
+};
+
+namespace TNiRTTI
+{
+    constexpr uint32_t BGSDecalNode = 0;
+    constexpr uint32_t BSAnimGroupSequence = 1;
+    constexpr uint32_t BSSplatterExtraData = 2;
+    constexpr uint32_t BGSAddonNodeSoundHandleExtra = 3;
+    constexpr uint32_t REFRSyncController = 4;
+    constexpr uint32_t bhkCartTether = 5;
+    constexpr uint32_t bhkTiltPreventAction = 6;
+    constexpr uint32_t bhkWheelAction = 7;
+    constexpr uint32_t BSFaceGenAnimationData = 8;
+    constexpr uint32_t BSFaceGenModelExtraData = 9;
+    constexpr uint32_t BSFaceGenBaseMorphExtraData = 10;
+    constexpr uint32_t BSFaceGenMorphData = 11;
+    constexpr uint32_t BSFaceGenMorphDataHead = 12;
+    constexpr uint32_t BSFaceGenMorphDataHair = 13;
+    constexpr uint32_t BSFaceGenNiNode = 14;
+    constexpr uint32_t BSTempEffect = 15;
+    constexpr uint32_t BSTempEffectDebris = 16;
+    constexpr uint32_t BSTempEffectGeometryDecal = 17;
+    constexpr uint32_t BSTempEffectParticle = 18;
+    constexpr uint32_t BSTempEffectSimpleDecal = 19;
+    constexpr uint32_t BSTempEffectSPG = 20;
+    constexpr uint32_t bhkAutoWater = 21;
+    constexpr uint32_t ModelReferenceEffect = 22;
+    constexpr uint32_t ReferenceEffect = 23;
+    constexpr uint32_t ShaderReferenceEffect = 24;
+    constexpr uint32_t SummonPlacementEffect = 25;
+    constexpr uint32_t SceneGraph = 26;
+    constexpr uint32_t BSDoorHavokController = 27;
+    constexpr uint32_t BSPlayerDistanceCheckController = 28;
+    constexpr uint32_t BSSimpleScaleController = 29;
+    constexpr uint32_t NiObject = 30;
+    constexpr uint32_t NiAVObject = 31;
+    constexpr uint32_t NiNode = 32;
+    constexpr uint32_t NiObjectNET = 33;
+    constexpr uint32_t NiLight = 34;
+    constexpr uint32_t NiSwitchNode = 35;
+    constexpr uint32_t NiStringsExtraData = 36;
+    constexpr uint32_t NiCamera = 37;
+    constexpr uint32_t BSTriShape = 38;
+    constexpr uint32_t NiProperty = 39;
+    constexpr uint32_t NiAlphaProperty = 40;
+    constexpr uint32_t NiSourceTexture = 41;
+    constexpr uint32_t BSFlattenedBoneTree = 42;
+    constexpr uint32_t BSDismemberSkinInstance = 43;
+    constexpr uint32_t NiStringExtraData = 44;
+    constexpr uint32_t NiTimeController = 45;
+    constexpr uint32_t NiExtraData = 46;
+    constexpr uint32_t NiGeometryData = 47;
+    constexpr uint32_t BSGeometry = 48;
+    constexpr uint32_t BSDynamicTriShape = 49;
+    constexpr uint32_t NiPointLight = 50;
+    constexpr uint32_t NiDefaultAVObjectPalette = 51;
+    constexpr uint32_t NiBillboardNode = 52;
+    constexpr uint32_t NiDirectionalLight = 53;
+    constexpr uint32_t NiCullingProcess = 54;
+    constexpr uint32_t NiParticles = 55;
+    constexpr uint32_t NiTexture = 56;
+    constexpr uint32_t NiSkinPartition = 57;
+    constexpr uint32_t NiVertWeightsExtraData = 58;
+    constexpr uint32_t NiSkinInstance = 59;
+    constexpr uint32_t NiAVObjectPalette = 60;
+    constexpr uint32_t NiGeometry = 61;
+    constexpr uint32_t NiSkinData = 62;
+    constexpr uint32_t NiShadeProperty = 63;
+    constexpr uint32_t NiAlphaAccumulator = 64;
+    constexpr uint32_t NiAmbientLight = 65;
+    constexpr uint32_t NiBinaryExtraData = 66;
+    constexpr uint32_t NiBooleanExtraData = 67;
+    constexpr uint32_t NiBSPNode = 68;
+    constexpr uint32_t NiColorExtraData = 69;
+    constexpr uint32_t NiFloatExtraData = 70;
+    constexpr uint32_t NiFloatsExtraData = 71;
+    constexpr uint32_t NiFogProperty = 72;
+    constexpr uint32_t NiIntegerExtraData = 73;
+    constexpr uint32_t NiIntegersExtraData = 74;
+    constexpr uint32_t NiParticlesData = 75;
+    constexpr uint32_t NiParticleMeshesData = 76;
+    constexpr uint32_t NiParticleMeshes = 77;
+    constexpr uint32_t NiSpotLight = 78;
+    constexpr uint32_t NiSwitchStringExtraData = 79;
+    constexpr uint32_t NiTriShapeData = 80;
+    constexpr uint32_t NiTriShape = 81;
+    constexpr uint32_t NiTriStripsData = 82;
+    constexpr uint32_t NiTriStrips = 83;
+    constexpr uint32_t NiVectorExtraData = 84;
+    constexpr uint32_t BSLODTriShape = 85;
+    constexpr uint32_t NiAdditionalGeometryData = 86;
+    constexpr uint32_t BSSegmentedTriShape = 87;
+    constexpr uint32_t NiAccumulator = 88;
+    constexpr uint32_t NiBackToFrontAccumulator = 89;
+    constexpr uint32_t NiTriBasedGeomData = 90;
+    constexpr uint32_t NiTriBasedGeom = 91;
+    constexpr uint32_t NiCollisionData = 92;
+    constexpr uint32_t NiControllerManager = 93;
+    constexpr uint32_t NiControllerSequence = 94;
+    constexpr uint32_t NiBlendInterpolator = 95;
+    constexpr uint32_t NiMultiTargetTransformController = 96;
+    constexpr uint32_t BSMultiTargetTreadTransfController = 97;
+    constexpr uint32_t NiInterpController = 98;
+    constexpr uint32_t NiFloatData = 99;
+    constexpr uint32_t NiFloatInterpolator = 100;
+    constexpr uint32_t NiColorData = 101;
+    constexpr uint32_t NiColorInterpolator = 102;
+    constexpr uint32_t NiSingleInterpController = 103;
+    constexpr uint32_t NiTransformInterpolator = 104;
+    constexpr uint32_t NiPathInterpolator = 105;
+    constexpr uint32_t NiBlendTransformInterpolator = 106;
+    constexpr uint32_t NiBlendFloatInterpolator = 107;
+    constexpr uint32_t NiFloatExtraDataController = 108;
+    constexpr uint32_t NiTransformController = 109;
+    constexpr uint32_t NiBlendAccumTransformInterpolator = 110;
+    constexpr uint32_t NiInterpolator = 111;
+    constexpr uint32_t BSBlendTreadTransfInterpolator = 112;
+    constexpr uint32_t NiKeyBasedInterpolator = 113;
+    constexpr uint32_t NiTransformData = 114;
+    constexpr uint32_t NiPosData = 115;
+    constexpr uint32_t NiBlendBoolInterpolator = 116;
+    constexpr uint32_t NiBlendColorInterpolator = 117;
+    constexpr uint32_t NiBlendPoint3Interpolator = 118;
+    constexpr uint32_t NiBlendQuaternionInterpolator = 119;
+    constexpr uint32_t NiBoolData = 120;
+    constexpr uint32_t NiBoolInterpolator = 121;
+    constexpr uint32_t NiBoolTimelineInterpolator = 122;
+    constexpr uint32_t NiBSplineBasisData = 123;
+    constexpr uint32_t NiBSplineData = 124;
+    constexpr uint32_t NiBSplineColorInterpolator = 125;
+    constexpr uint32_t NiBSplineCompColorInterpolator = 126;
+    constexpr uint32_t NiBSplineCompFloatInterpolator = 127;
+    constexpr uint32_t NiBSplineCompPoint3Interpolator = 128;
+    constexpr uint32_t NiBSplineCompTransformInterpolator = 129;
+    constexpr uint32_t NiBSplineFloatInterpolator = 130;
+    constexpr uint32_t NiBSplinePoint3Interpolator = 131;
+    constexpr uint32_t NiBSplineTransformInterpolator = 132;
+    constexpr uint32_t NiColorExtraDataController = 133;
+    constexpr uint32_t NiFloatsExtraDataController = 134;
+    constexpr uint32_t NiFloatsExtraDataPoint3Controller = 135;
+    constexpr uint32_t NiKeyframeManager = 136;
+    constexpr uint32_t NiLightColorController = 137;
+    constexpr uint32_t NiLightDimmerController = 138;
+    constexpr uint32_t NiLookAtController = 139;
+    constexpr uint32_t NiLookAtInterpolator = 140;
+    constexpr uint32_t NiMorphData = 141;
+    constexpr uint32_t NiPathController = 142;
+    constexpr uint32_t NiPoint3Interpolator = 143;
+    constexpr uint32_t NiQuaternionInterpolator = 144;
+    constexpr uint32_t NiRollController = 145;
+    constexpr uint32_t NiRotData = 146;
+    constexpr uint32_t NiSequence = 147;
+    constexpr uint32_t NiSequenceStreamHelper = 148;
+    constexpr uint32_t NiStringPalette = 149;
+    constexpr uint32_t NiTextKeyExtraData = 150;
+    constexpr uint32_t NiUVData = 151;
+    constexpr uint32_t NiVisController = 152;
+    constexpr uint32_t BSAnimNote = 153;
+    constexpr uint32_t BSAnimNotes = 154;
+    constexpr uint32_t BSGrabIKNote = 155;
+    constexpr uint32_t BSLookIKNote = 156;
+    constexpr uint32_t BSRotAccumTransfInterpolator = 157;
+    constexpr uint32_t BSTreadTransfInterpolator = 158;
+    constexpr uint32_t BSFrustumFOVController = 159;
+    constexpr uint32_t NiExtraDataController = 160;
+    constexpr uint32_t NiBSplineInterpolator = 161;
+    constexpr uint32_t NiPoint3InterpController = 162;
+    constexpr uint32_t NiFloatInterpController = 163;
+    constexpr uint32_t NiFloatController = 164;
+    constexpr uint32_t NiBoolInterpController = 165;
+    constexpr uint32_t NiParticleSystem = 166;
+    constexpr uint32_t NiPSysEmitterCtlr = 167;
+    constexpr uint32_t NiPSysGravityModifier = 168;
+    constexpr uint32_t BSPSysHavokUpdateModifier = 169;
+    constexpr uint32_t NiMeshParticleSystem = 170;
+    constexpr uint32_t NiPSysCylinderEmitter = 171;
+    constexpr uint32_t BSStripParticleSystem = 172;
+    constexpr uint32_t NiPSysEmitter = 173;
+    constexpr uint32_t NiPSysModifierCtlr = 174;
+    constexpr uint32_t NiPSysModifier = 175;
+    constexpr uint32_t NiPSysMeshUpdateModifier = 176;
+    constexpr uint32_t NiPSysUpdateCtlr = 177;
+    constexpr uint32_t NiMeshPSysData = 178;
+    constexpr uint32_t NiPSysAirFieldAirFrictionCtlr = 179;
+    constexpr uint32_t NiPSysAirFieldInheritVelocityCtlr = 180;
+    constexpr uint32_t NiPSysAirFieldModifier = 181;
+    constexpr uint32_t NiPSysAirFieldSpreadCtlr = 182;
+    constexpr uint32_t NiPSysAgeDeathModifier = 183;
+    constexpr uint32_t NiPSysBombModifier = 184;
+    constexpr uint32_t NiPSysBoundUpdateModifier = 185;
+    constexpr uint32_t NiPSysBoxEmitter = 186;
+    constexpr uint32_t NiPSysColliderManager = 187;
+    constexpr uint32_t NiPSysColorModifier = 188;
+    constexpr uint32_t NiPSysData = 189;
+    constexpr uint32_t NiPSysDragFieldModifier = 190;
+    constexpr uint32_t NiPSysDragModifier = 191;
+    constexpr uint32_t NiPSysEmitterCtlrData = 192;
+    constexpr uint32_t NiPSysEmitterDeclinationCtlr = 193;
+    constexpr uint32_t NiPSysEmitterDeclinationVarCtlr = 194;
+    constexpr uint32_t NiPSysEmitterInitialRadiusCtlr = 195;
+    constexpr uint32_t NiPSysEmitterLifeSpanCtlr = 196;
+    constexpr uint32_t NiPSysEmitterPlanarAngleCtlr = 197;
+    constexpr uint32_t NiPSysEmitterPlanarAngleVarCtlr = 198;
+    constexpr uint32_t NiPSysEmitterSpeedCtlr = 199;
+    constexpr uint32_t NiPSysFieldAttenuationCtlr = 200;
+    constexpr uint32_t NiPSysFieldMagnitudeCtlr = 201;
+    constexpr uint32_t NiPSysFieldMaxDistanceCtlr = 202;
+    constexpr uint32_t NiPSysGravityFieldModifier = 203;
+    constexpr uint32_t NiPSysGravityStrengthCtlr = 204;
+    constexpr uint32_t NiPSysGrowFadeModifier = 205;
+    constexpr uint32_t NiPSysInitialRotAngleCtlr = 206;
+    constexpr uint32_t NiPSysInitialRotAngleVarCtlr = 207;
+    constexpr uint32_t NiPSysInitialRotSpeedCtlr = 208;
+    constexpr uint32_t NiPSysInitialRotSpeedVarCtlr = 209;
+    constexpr uint32_t NiPSysMeshEmitter = 210;
+    constexpr uint32_t NiPSysModifierActiveCtlr = 211;
+    constexpr uint32_t NiPSysPlanarCollider = 212;
+    constexpr uint32_t NiPSysPositionModifier = 213;
+    constexpr uint32_t NiPSysRadialFieldModifier = 214;
+    constexpr uint32_t NiPSysResetOnLoopCtlr = 215;
+    constexpr uint32_t NiPSysRotationModifier = 216;
+    constexpr uint32_t NiPSysSpawnModifier = 217;
+    constexpr uint32_t NiPSysSphereEmitter = 218;
+    constexpr uint32_t NiPSysSphericalCollider = 219;
+    constexpr uint32_t NiPSysTurbulenceFieldModifier = 220;
+    constexpr uint32_t NiPSysVortexFieldModifier = 221;
+    constexpr uint32_t BSStripPSysData = 222;
+    constexpr uint32_t BSPSysRecycleBoundModifier = 223;
+    constexpr uint32_t BSPSysInheritVelocityModifier = 224;
+    constexpr uint32_t NiPSysVolumeEmitter = 225;
+    constexpr uint32_t NiPSysModifierFloatCtlr = 226;
+    constexpr uint32_t NiPSysFieldModifier = 227;
+    constexpr uint32_t NiPSysModifierBoolCtlr = 228;
+    constexpr uint32_t NiPSysCollider = 229;
+    constexpr uint32_t BSMultiBound = 230;
+    constexpr uint32_t BSMultiBoundRoom = 231;
+    constexpr uint32_t BSMultiBoundAABB = 232;
+    constexpr uint32_t BSMultiBoundOBB = 233;
+    constexpr uint32_t BSXFlags = 234;
+    constexpr uint32_t BSValueNode = 235;
+    constexpr uint32_t BSWindModifier = 236;
+    constexpr uint32_t BSTempNodeManager = 237;
+    constexpr uint32_t BSTempNode = 238;
+    constexpr uint32_t BSOcclusionShape = 239;
+    constexpr uint32_t BSRangeNode = 240;
+    constexpr uint32_t BSBlastNode = 241;
+    constexpr uint32_t BSDebrisNode = 242;
+    constexpr uint32_t BSDamageStage = 243;
+    constexpr uint32_t BSPSysArrayEmitter = 244;
+    constexpr uint32_t PArrayPoint = 245;
+    constexpr uint32_t BSMultiStreamInstanceTriShape = 246;
+    constexpr uint32_t BSMultiBoundShape = 247;
+    constexpr uint32_t BSMultiBoundSphere = 248;
+    constexpr uint32_t BSOcclusionBox = 249;
+    constexpr uint32_t BSOcclusionPlane = 250;
+    constexpr uint32_t BSPortal = 251;
+    constexpr uint32_t BSPortalSharedNode = 252;
+    constexpr uint32_t BSBodyMorphOffsetsExtraData = 253;
+    constexpr uint32_t BSBehaviorGraphExtraData = 254;
+    constexpr uint32_t NiBSBoneLODController = 255;
+    constexpr uint32_t BSCullingProcess = 256;
+    constexpr uint32_t BSParticleSystemManager = 257;
+    constexpr uint32_t BSFurnitureMarkerNode = 258;
+    constexpr uint32_t BSBound = 259;
+    constexpr uint32_t BSMultiBoundNode = 260;
+    constexpr uint32_t BSBoneMap = 261;
+    constexpr uint32_t BSAnimInteractionMarker = 262;
+    constexpr uint32_t BSSceneGraph = 263;
+    constexpr uint32_t BSPSysMultiTargetEmitterCtlr = 264;
+    constexpr uint32_t BSGeometryListCullingProcess = 265;
+    constexpr uint32_t BSSubIndexTriShape = 266;
+    constexpr uint32_t BSDistantObjectLargeRefExtraData = 267;
+    constexpr uint32_t BSMasterParticleSystem = 268;
+    constexpr uint32_t BSProceduralLightningController = 269;
+    constexpr uint32_t BSInvMarker = 270;
+    constexpr uint32_t BSBoneLODExtraData = 271;
+    constexpr uint32_t BSReference = 272;
+    constexpr uint32_t BSNodeReferences = 273;
+    constexpr uint32_t BSDecalPlacementVectorExtraData = 274;
+    constexpr uint32_t BSParentVelocityModifier = 275;
+    constexpr uint32_t BSWArray = 276;
+    constexpr uint32_t BSMultiBoundCapsule = 277;
+    constexpr uint32_t BSPSysStripUpdateModifier = 278;
+    constexpr uint32_t BSPSysSubTexModifier = 279;
+    constexpr uint32_t BSPSysScaleModifier = 280;
+    constexpr uint32_t BSLagBoneController = 281;
+    constexpr uint32_t BSNonUniformScaleExtraData = 282;
+    constexpr uint32_t BSNiNode = 283;
+    constexpr uint32_t BSInstanceTriShape = 284;
+    constexpr uint32_t bhkWorldObject = 285;
+    constexpr uint32_t bhkWorld = 286;
+    constexpr uint32_t bhkRigidBody = 287;
+    constexpr uint32_t bhkCollisionObject = 288;
+    constexpr uint32_t bhkNiCollisionObject = 289;
+    constexpr uint32_t bhkAttachmentCollisionObject = 290;
+    constexpr uint32_t WeaponObject = 291;
+    constexpr uint32_t bhkRigidBodyT = 292;
+    constexpr uint32_t bhkWorldM = 293;
+    constexpr uint32_t bhkRefObject = 294;
+    constexpr uint32_t bhkSerializable = 295;
+    constexpr uint32_t bhkShape = 296;
+    constexpr uint32_t bhkEntity = 297;
+    constexpr uint32_t bhkPhantom = 298;
+    constexpr uint32_t bhkAabbPhantom = 299;
+    constexpr uint32_t bhkSphereRepShape = 300;
+    constexpr uint32_t bhkConvexShape = 301;
+    constexpr uint32_t bhkPCollisionObject = 302;
+    constexpr uint32_t hkPackedNiTriStripsData = 303;
+    constexpr uint32_t bhkShapePhantom = 304;
+    constexpr uint32_t bhkSimpleShapePhantom = 305;
+    constexpr uint32_t bhkCapsuleShape = 306;
+    constexpr uint32_t bhkBoxShape = 307;
+    constexpr uint32_t bhkSphereShape = 308;
+    constexpr uint32_t bhkBvTreeShape = 309;
+    constexpr uint32_t bhkNiTriStripsShape = 310;
+    constexpr uint32_t bhkPackedNiTriStripsShape = 311;
+    constexpr uint32_t bhkBlendCollisionObject = 312;
+    constexpr uint32_t bhkAvoidBox = 313;
+    constexpr uint32_t bhkLimitedHingeConstraint = 314;
+    constexpr uint32_t bhkMalleableConstraint = 315;
+    constexpr uint32_t bhkConstraint = 316;
+    constexpr uint32_t bhkPrismaticConstraint = 317;
+    constexpr uint32_t bhkAction = 318;
+    constexpr uint32_t bhkUnaryAction = 319;
+    constexpr uint32_t bhkTriSampledHeightFieldBvTreeShape = 320;
+    constexpr uint32_t bhkCachingShapePhantom = 321;
+    constexpr uint32_t bhkRagdollTemplateData = 322;
+    constexpr uint32_t bhkRagdollTemplate = 323;
+    constexpr uint32_t bhkSPCollisionObject = 324;
+    constexpr uint32_t bhkMouseSpringAction = 325;
+    constexpr uint32_t bhkHingeConstraint = 326;
+    constexpr uint32_t bhkCompressedMeshShape = 327;
+    constexpr uint32_t bhkCompressedMeshShapeData = 328;
+    constexpr uint32_t bhkConvexSweepShape = 329;
+    constexpr uint32_t bhkConvexTransformShape = 330;
+    constexpr uint32_t bhkConvexTranslateShape = 331;
+    constexpr uint32_t bhkConvexVerticesShape = 332;
+    constexpr uint32_t bhkCylinderShape = 333;
+    constexpr uint32_t bhkMultiSphereShape = 334;
+    constexpr uint32_t bhkPlaneShape = 335;
+    constexpr uint32_t bhkTriangleShape = 336;
+    constexpr uint32_t bhkMoppBvTreeShape = 337;
+    constexpr uint32_t bhkTransformShape = 338;
+    constexpr uint32_t bhkListShape = 339;
+    constexpr uint32_t bhkBallAndSocketConstraint = 340;
+    constexpr uint32_t bhkBallSocketConstraintChain = 341;
+    constexpr uint32_t bhkGroupConstraint = 342;
+    constexpr uint32_t bhkHingeLimitsConstraint = 343;
+    constexpr uint32_t bhkFixedConstraint = 344;
+    constexpr uint32_t bhkRagdollConstraint = 345;
+    constexpr uint32_t bhkRagdollLimitsConstraint = 346;
+    constexpr uint32_t bhkStiffSpringConstraint = 347;
+    constexpr uint32_t bhkWheelConstraint = 348;
+    constexpr uint32_t bhkBreakableConstraint = 349;
+    constexpr uint32_t bhkAngularDashpotAction = 350;
+    constexpr uint32_t bhkDashpotAction = 351;
+    constexpr uint32_t bhkLiquidAction = 352;
+    constexpr uint32_t bhkMotorAction = 353;
+    constexpr uint32_t bhkOrientHingedBodyAction = 354;
+    constexpr uint32_t bhkSpringAction = 355;
+    constexpr uint32_t bhkBlendController = 356;
+    constexpr uint32_t bhkExtraData = 357;
+    constexpr uint32_t bhkPoseArray = 358;
+    constexpr uint32_t bhkGenericConstraint = 359;
+    constexpr uint32_t bhkCharControllerShape = 360;
+    constexpr uint32_t bhkCollisionBox = 361;
+    constexpr uint32_t bhkShapeCollection = 362;
+    constexpr uint32_t bhkPositionConstraintMotor = 363;
+    constexpr uint32_t bhkVelocityConstraintMotor = 364;
+    constexpr uint32_t bhkSpringDamperConstraintMotor = 365;
+    constexpr uint32_t bhkCharacterProxy = 366;
+    constexpr uint32_t bhkCharacterRigidBody = 367;
+    constexpr uint32_t bhkHeightFieldShape = 368;
+    constexpr uint32_t bhkConstraintChain = 369;
+    constexpr uint32_t bhkBinaryAction = 370;
+    constexpr uint32_t bhkPointToPathConstraint = 371;
+    constexpr uint32_t DebugTextExtraData = 372;
+    constexpr uint32_t BSFadeNode = 373;
+    constexpr uint32_t BSShaderProperty = 374;
+    constexpr uint32_t BSLeafAnimNode = 375;
+    constexpr uint32_t BSTreeNode = 376;
+    constexpr uint32_t ShadowSceneNode = 377;
+    constexpr uint32_t BSLightingShaderProperty = 378;
+    constexpr uint32_t BSGrassShaderProperty = 379;
+    constexpr uint32_t BSShaderAccumulator = 380;
+    constexpr uint32_t BSEffectShaderProperty = 381;
+    constexpr uint32_t BSWaterShaderProperty = 382;
+    constexpr uint32_t BSBloodSplatterShaderProperty = 383;
+    constexpr uint32_t BSParticleShaderProperty = 384;
+    constexpr uint32_t BSTextureSet = 385;
+    constexpr uint32_t BSShaderTextureSet = 386;
+    constexpr uint32_t BSSkyShaderProperty = 387;
+    constexpr uint32_t BSFadeNodeCuller = 388;
+    constexpr uint32_t BSDistantTreeShaderProperty = 389;
+    constexpr uint32_t BSCubeMapCamera = 390;
+    constexpr uint32_t BSFogProperty = 391;
+    constexpr uint32_t BSClearZNode = 392;
+    constexpr uint32_t NiCollisionObject = 393;
+    constexpr uint32_t BSOrderedNode = 394;
+    constexpr uint32_t BSLines = 395;
+    constexpr uint32_t BSDynamicLines = 396;
+    constexpr uint32_t BSMultiIndexTriShape = 397;
+    constexpr uint32_t BSLightingShaderPropertyFloatController = 398;
+    constexpr uint32_t BSLightingShaderPropertyUShortController = 399;
+    constexpr uint32_t BSLightingShaderPropertyColorController = 400;
+    constexpr uint32_t BSEffectShaderPropertyFloatController = 401;
+    constexpr uint32_t BSEffectShaderPropertyColorController = 402;
+    constexpr uint32_t BSNiAlphaPropertyTestRefController = 403;
+    constexpr uint32_t BSPSysSimpleColorModifier = 404;
+    constexpr uint32_t BSPSysLODModifier = 405;
+    constexpr uint32_t BSParabolicCullingProcess = 406;
+    constexpr uint32_t BSMeshLODTriShape = 407;
+    constexpr uint32_t BSLODMultiIndexTriShape = 408;
+    constexpr uint32_t BSSubIndexLandTriShape = 409;
+}
+
+#define ni_cast(obj, type) reinterpret_cast<type*>(INiRTTI::Cast(obj, TNiRTTI:: ##type))
+#define ni_is_type(obj, type) IsType(obj, TNiRTTI:: ##type)
 
-extern const NiRTTI *	NiRTTI_BGSDecalNode;
-extern const NiRTTI *	NiRTTI_BSAnimGroupSequence;
-extern const NiRTTI *	NiRTTI_BSSplatterExtraData;
-extern const NiRTTI *	NiRTTI_BGSAddonNodeSoundHandleExtra;
-extern const NiRTTI *	NiRTTI_REFRSyncController;
-extern const NiRTTI *	NiRTTI_bhkCartTether;
-extern const NiRTTI *	NiRTTI_bhkTiltPreventAction;
-extern const NiRTTI *	NiRTTI_bhkWheelAction;
-extern const NiRTTI *	NiRTTI_BSFaceGenAnimationData;
-extern const NiRTTI *	NiRTTI_BSFaceGenModelExtraData;
-extern const NiRTTI *	NiRTTI_BSFaceGenBaseMorphExtraData;
-extern const NiRTTI *	NiRTTI_BSFaceGenMorphData;
-extern const NiRTTI *	NiRTTI_BSFaceGenMorphDataHead;
-extern const NiRTTI *	NiRTTI_BSFaceGenMorphDataHair;
-extern const NiRTTI *	NiRTTI_BSFaceGenNiNode;
-extern const NiRTTI *	NiRTTI_BSTempEffect;
-extern const NiRTTI *	NiRTTI_BSTempEffectDebris;
-extern const NiRTTI *	NiRTTI_BSTempEffectGeometryDecal;
-extern const NiRTTI *	NiRTTI_BSTempEffectParticle;
-extern const NiRTTI *	NiRTTI_BSTempEffectSimpleDecal;
-extern const NiRTTI *	NiRTTI_BSTempEffectSPG;
-extern const NiRTTI *	NiRTTI_bhkAutoWater;
-extern const NiRTTI *	NiRTTI_ModelReferenceEffect;
-extern const NiRTTI *	NiRTTI_ReferenceEffect;
-extern const NiRTTI *	NiRTTI_ShaderReferenceEffect;
-extern const NiRTTI *	NiRTTI_SummonPlacementEffect;
-extern const NiRTTI *	NiRTTI_SceneGraph;
-extern const NiRTTI *	NiRTTI_BSDoorHavokController;
-extern const NiRTTI *	NiRTTI_BSPlayerDistanceCheckController;
-extern const NiRTTI *	NiRTTI_BSSimpleScaleController;
-extern const NiRTTI *	NiRTTI_NiObject;
-extern const NiRTTI *	NiRTTI_NiAVObject;
-extern const NiRTTI *	NiRTTI_NiNode;
-extern const NiRTTI *	NiRTTI_NiObjectNET;
-extern const NiRTTI *	NiRTTI_NiLight;
-extern const NiRTTI *	NiRTTI_NiSwitchNode;
-extern const NiRTTI *	NiRTTI_NiStringsExtraData;
-extern const NiRTTI *	NiRTTI_NiCamera;
-extern const NiRTTI *	NiRTTI_BSTriShape;
-extern const NiRTTI *	NiRTTI_NiProperty;
-extern const NiRTTI *	NiRTTI_NiAlphaProperty;
-extern const NiRTTI *	NiRTTI_NiSourceTexture;
-extern const NiRTTI *	NiRTTI_BSFlattenedBoneTree;
-extern const NiRTTI *	NiRTTI_BSDismemberSkinInstance;
-extern const NiRTTI *	NiRTTI_NiStringExtraData;
-extern const NiRTTI *	NiRTTI_NiTimeController;
-extern const NiRTTI *	NiRTTI_NiExtraData;
-extern const NiRTTI *	NiRTTI_NiGeometryData;
-extern const NiRTTI *	NiRTTI_BSGeometry;
-extern const NiRTTI *	NiRTTI_BSDynamicTriShape;
-extern const NiRTTI *	NiRTTI_NiPointLight;
-extern const NiRTTI *	NiRTTI_NiDefaultAVObjectPalette;
-extern const NiRTTI *	NiRTTI_NiBillboardNode;
-extern const NiRTTI *	NiRTTI_NiDirectionalLight;
-extern const NiRTTI *	NiRTTI_NiCullingProcess;
-extern const NiRTTI *	NiRTTI_NiParticles;
-extern const NiRTTI *	NiRTTI_NiTexture;
-extern const NiRTTI *	NiRTTI_NiSkinPartition;
-extern const NiRTTI *	NiRTTI_NiVertWeightsExtraData;
-extern const NiRTTI *	NiRTTI_NiSkinInstance;
-extern const NiRTTI *	NiRTTI_NiAVObjectPalette;
-extern const NiRTTI *	NiRTTI_NiGeometry;
-extern const NiRTTI *	NiRTTI_NiSkinData;
-extern const NiRTTI *	NiRTTI_NiShadeProperty;
-extern const NiRTTI *	NiRTTI_NiAlphaAccumulator;
-extern const NiRTTI *	NiRTTI_NiAmbientLight;
-extern const NiRTTI *	NiRTTI_NiBinaryExtraData;
-extern const NiRTTI *	NiRTTI_NiBooleanExtraData;
-extern const NiRTTI *	NiRTTI_NiBSPNode;
-extern const NiRTTI *	NiRTTI_NiColorExtraData;
-extern const NiRTTI *	NiRTTI_NiFloatExtraData;
-extern const NiRTTI *	NiRTTI_NiFloatsExtraData;
-extern const NiRTTI *	NiRTTI_NiFogProperty;
-extern const NiRTTI *	NiRTTI_NiIntegerExtraData;
-extern const NiRTTI *	NiRTTI_NiIntegersExtraData;
-extern const NiRTTI *	NiRTTI_NiParticlesData;
-extern const NiRTTI *	NiRTTI_NiParticleMeshesData;
-extern const NiRTTI *	NiRTTI_NiParticleMeshes;
-extern const NiRTTI *	NiRTTI_NiSpotLight;
-extern const NiRTTI *	NiRTTI_NiSwitchStringExtraData;
-extern const NiRTTI *	NiRTTI_NiTriShapeData;
-extern const NiRTTI *	NiRTTI_NiTriShape;
-extern const NiRTTI *	NiRTTI_NiTriStripsData;
-extern const NiRTTI *	NiRTTI_NiTriStrips;
-extern const NiRTTI *	NiRTTI_NiVectorExtraData;
-extern const NiRTTI *	NiRTTI_BSLODTriShape;
-extern const NiRTTI *	NiRTTI_NiAdditionalGeometryData;
-extern const NiRTTI *	NiRTTI_BSSegmentedTriShape;
-extern const NiRTTI *	NiRTTI_NiAccumulator;
-extern const NiRTTI *	NiRTTI_NiBackToFrontAccumulator;
-extern const NiRTTI *	NiRTTI_NiTriBasedGeomData;
-extern const NiRTTI *	NiRTTI_NiTriBasedGeom;
-extern const NiRTTI *	NiRTTI_NiCollisionData;
-extern const NiRTTI *	NiRTTI_NiControllerManager;
-extern const NiRTTI *	NiRTTI_NiControllerSequence;
-extern const NiRTTI *	NiRTTI_NiBlendInterpolator;
-extern const NiRTTI *	NiRTTI_NiMultiTargetTransformController;
-extern const NiRTTI *	NiRTTI_BSMultiTargetTreadTransfController;
-extern const NiRTTI *	NiRTTI_NiInterpController;
-extern const NiRTTI *	NiRTTI_NiFloatData;
-extern const NiRTTI *	NiRTTI_NiFloatInterpolator;
-extern const NiRTTI *	NiRTTI_NiColorData;
-extern const NiRTTI *	NiRTTI_NiColorInterpolator;
-extern const NiRTTI *	NiRTTI_NiSingleInterpController;
-extern const NiRTTI *	NiRTTI_NiTransformInterpolator;
-extern const NiRTTI *	NiRTTI_NiPathInterpolator;
-extern const NiRTTI *	NiRTTI_NiBlendTransformInterpolator;
-extern const NiRTTI *	NiRTTI_NiBlendFloatInterpolator;
-extern const NiRTTI *	NiRTTI_NiFloatExtraDataController;
-extern const NiRTTI *	NiRTTI_NiTransformController;
-extern const NiRTTI *	NiRTTI_NiBlendAccumTransformInterpolator;
-extern const NiRTTI *	NiRTTI_NiInterpolator;
-extern const NiRTTI *	NiRTTI_BSBlendTreadTransfInterpolator;
-extern const NiRTTI *	NiRTTI_NiKeyBasedInterpolator;
-extern const NiRTTI *	NiRTTI_NiTransformData;
-extern const NiRTTI *	NiRTTI_NiPosData;
-extern const NiRTTI *	NiRTTI_NiBlendBoolInterpolator;
-extern const NiRTTI *	NiRTTI_NiBlendColorInterpolator;
-extern const NiRTTI *	NiRTTI_NiBlendPoint3Interpolator;
-extern const NiRTTI *	NiRTTI_NiBlendQuaternionInterpolator;
-extern const NiRTTI *	NiRTTI_NiBoolData;
-extern const NiRTTI *	NiRTTI_NiBoolInterpolator;
-extern const NiRTTI *	NiRTTI_NiBoolTimelineInterpolator;
-extern const NiRTTI *	NiRTTI_NiBSplineBasisData;
-extern const NiRTTI *	NiRTTI_NiBSplineData;
-extern const NiRTTI *	NiRTTI_NiBSplineColorInterpolator;
-extern const NiRTTI *	NiRTTI_NiBSplineCompColorInterpolator;
-extern const NiRTTI *	NiRTTI_NiBSplineCompFloatInterpolator;
-extern const NiRTTI *	NiRTTI_NiBSplineCompPoint3Interpolator;
-extern const NiRTTI *	NiRTTI_NiBSplineCompTransformInterpolator;
-extern const NiRTTI *	NiRTTI_NiBSplineFloatInterpolator;
-extern const NiRTTI *	NiRTTI_NiBSplinePoint3Interpolator;
-extern const NiRTTI *	NiRTTI_NiBSplineTransformInterpolator;
-extern const NiRTTI *	NiRTTI_NiColorExtraDataController;
-extern const NiRTTI *	NiRTTI_NiFloatsExtraDataController;
-extern const NiRTTI *	NiRTTI_NiFloatsExtraDataPoint3Controller;
-extern const NiRTTI *	NiRTTI_NiKeyframeManager;
-extern const NiRTTI *	NiRTTI_NiLightColorController;
-extern const NiRTTI *	NiRTTI_NiLightDimmerController;
-extern const NiRTTI *	NiRTTI_NiLookAtController;
-extern const NiRTTI *	NiRTTI_NiLookAtInterpolator;
-extern const NiRTTI *	NiRTTI_NiMorphData;
-extern const NiRTTI *	NiRTTI_NiPathController;
-extern const NiRTTI *	NiRTTI_NiPoint3Interpolator;
-extern const NiRTTI *	NiRTTI_NiQuaternionInterpolator;
-extern const NiRTTI *	NiRTTI_NiRollController;
-extern const NiRTTI *	NiRTTI_NiRotData;
-extern const NiRTTI *	NiRTTI_NiSequence;
-extern const NiRTTI *	NiRTTI_NiSequenceStreamHelper;
-extern const NiRTTI *	NiRTTI_NiStringPalette;
-extern const NiRTTI *	NiRTTI_NiTextKeyExtraData;
-extern const NiRTTI *	NiRTTI_NiUVData;
-extern const NiRTTI *	NiRTTI_NiVisController;
-extern const NiRTTI *	NiRTTI_BSAnimNote;
-extern const NiRTTI *	NiRTTI_BSAnimNotes;
-extern const NiRTTI *	NiRTTI_BSGrabIKNote;
-extern const NiRTTI *	NiRTTI_BSLookIKNote;
-extern const NiRTTI *	NiRTTI_BSRotAccumTransfInterpolator;
-extern const NiRTTI *	NiRTTI_BSTreadTransfInterpolator;
-extern const NiRTTI *	NiRTTI_BSFrustumFOVController;
-extern const NiRTTI *	NiRTTI_NiExtraDataController;
-extern const NiRTTI *	NiRTTI_NiBSplineInterpolator;
-extern const NiRTTI *	NiRTTI_NiPoint3InterpController;
-extern const NiRTTI *	NiRTTI_NiFloatInterpController;
-extern const NiRTTI *	NiRTTI_NiFloatController;
-extern const NiRTTI *	NiRTTI_NiBoolInterpController;
-extern const NiRTTI *	NiRTTI_NiParticleSystem;
-extern const NiRTTI *	NiRTTI_NiPSysEmitterCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysGravityModifier;
-extern const NiRTTI *	NiRTTI_BSPSysHavokUpdateModifier;
-extern const NiRTTI *	NiRTTI_NiMeshParticleSystem;
-extern const NiRTTI *	NiRTTI_NiPSysCylinderEmitter;
-extern const NiRTTI *	NiRTTI_BSStripParticleSystem;
-extern const NiRTTI *	NiRTTI_NiPSysEmitter;
-extern const NiRTTI *	NiRTTI_NiPSysModifierCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysModifier;
-extern const NiRTTI *	NiRTTI_NiPSysMeshUpdateModifier;
-extern const NiRTTI *	NiRTTI_NiPSysUpdateCtlr;
-extern const NiRTTI *	NiRTTI_NiMeshPSysData;
-extern const NiRTTI *	NiRTTI_NiPSysAirFieldAirFrictionCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysAirFieldInheritVelocityCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysAirFieldModifier;
-extern const NiRTTI *	NiRTTI_NiPSysAirFieldSpreadCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysAgeDeathModifier;
-extern const NiRTTI *	NiRTTI_NiPSysBombModifier;
-extern const NiRTTI *	NiRTTI_NiPSysBoundUpdateModifier;
-extern const NiRTTI *	NiRTTI_NiPSysBoxEmitter;
-extern const NiRTTI *	NiRTTI_NiPSysColliderManager;
-extern const NiRTTI *	NiRTTI_NiPSysColorModifier;
-extern const NiRTTI *	NiRTTI_NiPSysData;
-extern const NiRTTI *	NiRTTI_NiPSysDragFieldModifier;
-extern const NiRTTI *	NiRTTI_NiPSysDragModifier;
-extern const NiRTTI *	NiRTTI_NiPSysEmitterCtlrData;
-extern const NiRTTI *	NiRTTI_NiPSysEmitterDeclinationCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysEmitterDeclinationVarCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysEmitterInitialRadiusCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysEmitterLifeSpanCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysEmitterPlanarAngleCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysEmitterPlanarAngleVarCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysEmitterSpeedCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysFieldAttenuationCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysFieldMagnitudeCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysFieldMaxDistanceCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysGravityFieldModifier;
-extern const NiRTTI *	NiRTTI_NiPSysGravityStrengthCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysGrowFadeModifier;
-extern const NiRTTI *	NiRTTI_NiPSysInitialRotAngleCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysInitialRotAngleVarCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysInitialRotSpeedCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysInitialRotSpeedVarCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysMeshEmitter;
-extern const NiRTTI *	NiRTTI_NiPSysModifierActiveCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysPlanarCollider;
-extern const NiRTTI *	NiRTTI_NiPSysPositionModifier;
-extern const NiRTTI *	NiRTTI_NiPSysRadialFieldModifier;
-extern const NiRTTI *	NiRTTI_NiPSysResetOnLoopCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysRotationModifier;
-extern const NiRTTI *	NiRTTI_NiPSysSpawnModifier;
-extern const NiRTTI *	NiRTTI_NiPSysSphereEmitter;
-extern const NiRTTI *	NiRTTI_NiPSysSphericalCollider;
-extern const NiRTTI *	NiRTTI_NiPSysTurbulenceFieldModifier;
-extern const NiRTTI *	NiRTTI_NiPSysVortexFieldModifier;
-extern const NiRTTI *	NiRTTI_BSStripPSysData;
-extern const NiRTTI *	NiRTTI_BSPSysRecycleBoundModifier;
-extern const NiRTTI *	NiRTTI_BSPSysInheritVelocityModifier;
-extern const NiRTTI *	NiRTTI_NiPSysVolumeEmitter;
-extern const NiRTTI *	NiRTTI_NiPSysModifierFloatCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysFieldModifier;
-extern const NiRTTI *	NiRTTI_NiPSysModifierBoolCtlr;
-extern const NiRTTI *	NiRTTI_NiPSysCollider;
-extern const NiRTTI *	NiRTTI_BSMultiBound;
-extern const NiRTTI *	NiRTTI_BSMultiBoundRoom;
-extern const NiRTTI *	NiRTTI_BSMultiBoundAABB;
-extern const NiRTTI *	NiRTTI_BSMultiBoundOBB;
-extern const NiRTTI *	NiRTTI_BSXFlags;
-extern const NiRTTI *	NiRTTI_BSValueNode;
-extern const NiRTTI *	NiRTTI_BSWindModifier;
-extern const NiRTTI *	NiRTTI_BSTempNodeManager;
-extern const NiRTTI *	NiRTTI_BSTempNode;
-extern const NiRTTI *	NiRTTI_BSOcclusionShape;
-extern const NiRTTI *	NiRTTI_BSRangeNode;
-extern const NiRTTI *	NiRTTI_BSBlastNode;
-extern const NiRTTI *	NiRTTI_BSDebrisNode;
-extern const NiRTTI *	NiRTTI_BSDamageStage;
-extern const NiRTTI *	NiRTTI_BSPSysArrayEmitter;
-extern const NiRTTI *	NiRTTI_PArrayPoint;
-extern const NiRTTI *	NiRTTI_BSMultiStreamInstanceTriShape;
-extern const NiRTTI *	NiRTTI_BSMultiBoundShape;
-extern const NiRTTI *	NiRTTI_BSMultiBoundSphere;
-extern const NiRTTI *	NiRTTI_BSOcclusionBox;
-extern const NiRTTI *	NiRTTI_BSOcclusionPlane;
-extern const NiRTTI *	NiRTTI_BSPortal;
-extern const NiRTTI *	NiRTTI_BSPortalSharedNode;
-extern const NiRTTI *	NiRTTI_BSBodyMorphOffsetsExtraData;
-extern const NiRTTI *	NiRTTI_BSBehaviorGraphExtraData;
-extern const NiRTTI *	NiRTTI_NiBSBoneLODController;
-extern const NiRTTI *	NiRTTI_BSCullingProcess;
-extern const NiRTTI *	NiRTTI_BSParticleSystemManager;
-extern const NiRTTI *	NiRTTI_BSFurnitureMarkerNode;
-extern const NiRTTI *	NiRTTI_BSBound;
-extern const NiRTTI *	NiRTTI_BSMultiBoundNode;
-extern const NiRTTI *	NiRTTI_BSBoneMap;
-extern const NiRTTI *	NiRTTI_BSAnimInteractionMarker;
-extern const NiRTTI *	NiRTTI_BSSceneGraph;
-extern const NiRTTI *	NiRTTI_BSPSysMultiTargetEmitterCtlr;
-extern const NiRTTI *	NiRTTI_BSGeometryListCullingProcess;
-extern const NiRTTI *	NiRTTI_BSSubIndexTriShape;
-extern const NiRTTI *	NiRTTI_BSDistantObjectLargeRefExtraData;
-extern const NiRTTI *	NiRTTI_BSMasterParticleSystem;
-extern const NiRTTI *	NiRTTI_BSProceduralLightningController;
-extern const NiRTTI *	NiRTTI_BSInvMarker;
-extern const NiRTTI *	NiRTTI_BSBoneLODExtraData;
-extern const NiRTTI *	NiRTTI_BSReference;
-extern const NiRTTI *	NiRTTI_BSNodeReferences;
-extern const NiRTTI *	NiRTTI_BSDecalPlacementVectorExtraData;
-extern const NiRTTI *	NiRTTI_BSParentVelocityModifier;
-extern const NiRTTI *	NiRTTI_BSWArray;
-extern const NiRTTI *	NiRTTI_BSMultiBoundCapsule;
-extern const NiRTTI *	NiRTTI_BSPSysStripUpdateModifier;
-extern const NiRTTI *	NiRTTI_BSPSysSubTexModifier;
-extern const NiRTTI *	NiRTTI_BSPSysScaleModifier;
-extern const NiRTTI *	NiRTTI_BSLagBoneController;
-extern const NiRTTI *	NiRTTI_BSNonUniformScaleExtraData;
-extern const NiRTTI *	NiRTTI_BSNiNode;
-extern const NiRTTI *	NiRTTI_BSInstanceTriShape;
-extern const NiRTTI *	NiRTTI_bhkWorldObject;
-extern const NiRTTI *	NiRTTI_bhkWorld;
-extern const NiRTTI *	NiRTTI_bhkRigidBody;
-extern const NiRTTI *	NiRTTI_bhkCollisionObject;
-extern const NiRTTI *	NiRTTI_bhkNiCollisionObject;
-extern const NiRTTI *	NiRTTI_bhkAttachmentCollisionObject;
-extern const NiRTTI *	NiRTTI_WeaponObject;
-extern const NiRTTI *	NiRTTI_bhkRigidBodyT;
-extern const NiRTTI *	NiRTTI_bhkWorldM;
-extern const NiRTTI *	NiRTTI_bhkRefObject;
-extern const NiRTTI *	NiRTTI_bhkSerializable;
-extern const NiRTTI *	NiRTTI_bhkShape;
-extern const NiRTTI *	NiRTTI_bhkEntity;
-extern const NiRTTI *	NiRTTI_bhkPhantom;
-extern const NiRTTI *	NiRTTI_bhkAabbPhantom;
-extern const NiRTTI *	NiRTTI_bhkSphereRepShape;
-extern const NiRTTI *	NiRTTI_bhkConvexShape;
-extern const NiRTTI *	NiRTTI_bhkPCollisionObject;
-extern const NiRTTI *	NiRTTI_hkPackedNiTriStripsData;
-extern const NiRTTI *	NiRTTI_bhkShapePhantom;
-extern const NiRTTI *	NiRTTI_bhkSimpleShapePhantom;
-extern const NiRTTI *	NiRTTI_bhkCapsuleShape;
-extern const NiRTTI *	NiRTTI_bhkBoxShape;
-extern const NiRTTI *	NiRTTI_bhkSphereShape;
-extern const NiRTTI *	NiRTTI_bhkBvTreeShape;
-extern const NiRTTI *	NiRTTI_bhkNiTriStripsShape;
-extern const NiRTTI *	NiRTTI_bhkPackedNiTriStripsShape;
-extern const NiRTTI *	NiRTTI_bhkBlendCollisionObject;
-extern const NiRTTI *	NiRTTI_bhkAvoidBox;
-extern const NiRTTI *	NiRTTI_bhkLimitedHingeConstraint;
-extern const NiRTTI *	NiRTTI_bhkMalleableConstraint;
-extern const NiRTTI *	NiRTTI_bhkConstraint;
-extern const NiRTTI *	NiRTTI_bhkPrismaticConstraint;
-extern const NiRTTI *	NiRTTI_bhkAction;
-extern const NiRTTI *	NiRTTI_bhkUnaryAction;
-extern const NiRTTI *	NiRTTI_bhkTriSampledHeightFieldBvTreeShape;
-extern const NiRTTI *	NiRTTI_bhkCachingShapePhantom;
-extern const NiRTTI *	NiRTTI_bhkRagdollTemplateData;
-extern const NiRTTI *	NiRTTI_bhkRagdollTemplate;
-extern const NiRTTI *	NiRTTI_bhkSPCollisionObject;
-extern const NiRTTI *	NiRTTI_bhkMouseSpringAction;
-extern const NiRTTI *	NiRTTI_bhkHingeConstraint;
-extern const NiRTTI *	NiRTTI_bhkCompressedMeshShape;
-extern const NiRTTI *	NiRTTI_bhkCompressedMeshShapeData;
-extern const NiRTTI *	NiRTTI_bhkConvexSweepShape;
-extern const NiRTTI *	NiRTTI_bhkConvexTransformShape;
-extern const NiRTTI *	NiRTTI_bhkConvexTranslateShape;
-extern const NiRTTI *	NiRTTI_bhkConvexVerticesShape;
-extern const NiRTTI *	NiRTTI_bhkCylinderShape;
-extern const NiRTTI *	NiRTTI_bhkMultiSphereShape;
-extern const NiRTTI *	NiRTTI_bhkPlaneShape;
-extern const NiRTTI *	NiRTTI_bhkTriangleShape;
-extern const NiRTTI *	NiRTTI_bhkMoppBvTreeShape;
-extern const NiRTTI *	NiRTTI_bhkTransformShape;
-extern const NiRTTI *	NiRTTI_bhkListShape;
-extern const NiRTTI *	NiRTTI_bhkBallAndSocketConstraint;
-extern const NiRTTI *	NiRTTI_bhkBallSocketConstraintChain;
-extern const NiRTTI *	NiRTTI_bhkGroupConstraint;
-extern const NiRTTI *	NiRTTI_bhkHingeLimitsConstraint;
-extern const NiRTTI *	NiRTTI_bhkFixedConstraint;
-extern const NiRTTI *	NiRTTI_bhkRagdollConstraint;
-extern const NiRTTI *	NiRTTI_bhkRagdollLimitsConstraint;
-extern const NiRTTI *	NiRTTI_bhkStiffSpringConstraint;
-extern const NiRTTI *	NiRTTI_bhkWheelConstraint;
-extern const NiRTTI *	NiRTTI_bhkBreakableConstraint;
-extern const NiRTTI *	NiRTTI_bhkAngularDashpotAction;
-extern const NiRTTI *	NiRTTI_bhkDashpotAction;
-extern const NiRTTI *	NiRTTI_bhkLiquidAction;
-extern const NiRTTI *	NiRTTI_bhkMotorAction;
-extern const NiRTTI *	NiRTTI_bhkOrientHingedBodyAction;
-extern const NiRTTI *	NiRTTI_bhkSpringAction;
-extern const NiRTTI *	NiRTTI_bhkBlendController;
-extern const NiRTTI *	NiRTTI_bhkExtraData;
-extern const NiRTTI *	NiRTTI_bhkPoseArray;
-extern const NiRTTI *	NiRTTI_bhkGenericConstraint;
-extern const NiRTTI *	NiRTTI_bhkCharControllerShape;
-extern const NiRTTI *	NiRTTI_bhkCollisionBox;
-extern const NiRTTI *	NiRTTI_bhkShapeCollection;
-extern const NiRTTI *	NiRTTI_bhkPositionConstraintMotor;
-extern const NiRTTI *	NiRTTI_bhkVelocityConstraintMotor;
-extern const NiRTTI *	NiRTTI_bhkSpringDamperConstraintMotor;
-extern const NiRTTI *	NiRTTI_bhkCharacterProxy;
-extern const NiRTTI *	NiRTTI_bhkCharacterRigidBody;
-extern const NiRTTI *	NiRTTI_bhkHeightFieldShape;
-extern const NiRTTI *	NiRTTI_bhkConstraintChain;
-extern const NiRTTI *	NiRTTI_bhkBinaryAction;
-extern const NiRTTI *	NiRTTI_bhkPointToPathConstraint;
-extern const NiRTTI *	NiRTTI_DebugTextExtraData;
-extern const NiRTTI *	NiRTTI_BSFadeNode;
-extern const NiRTTI *	NiRTTI_BSShaderProperty;
-extern const NiRTTI *	NiRTTI_BSLeafAnimNode;
-extern const NiRTTI *	NiRTTI_BSTreeNode;
-extern const NiRTTI *	NiRTTI_ShadowSceneNode;
-extern const NiRTTI *	NiRTTI_BSLightingShaderProperty;
-extern const NiRTTI *	NiRTTI_BSGrassShaderProperty;
-extern const NiRTTI *	NiRTTI_BSShaderAccumulator;
-extern const NiRTTI *	NiRTTI_BSEffectShaderProperty;
-extern const NiRTTI *	NiRTTI_BSWaterShaderProperty;
-extern const NiRTTI *	NiRTTI_BSBloodSplatterShaderProperty;
-extern const NiRTTI *	NiRTTI_BSParticleShaderProperty;
-extern const NiRTTI *	NiRTTI_BSTextureSet;
-extern const NiRTTI *	NiRTTI_BSShaderTextureSet;
-extern const NiRTTI *	NiRTTI_BSSkyShaderProperty;
-extern const NiRTTI *	NiRTTI_BSFadeNodeCuller;
-extern const NiRTTI *	NiRTTI_BSDistantTreeShaderProperty;
-extern const NiRTTI *	NiRTTI_BSCubeMapCamera;
-extern const NiRTTI *	NiRTTI_BSFogProperty;
-extern const NiRTTI *	NiRTTI_BSClearZNode;
-extern const NiRTTI *	NiRTTI_NiCollisionObject;
-extern const NiRTTI *	NiRTTI_BSOrderedNode;
-extern const NiRTTI *	NiRTTI_BSLines;
-extern const NiRTTI *	NiRTTI_BSDynamicLines;
-extern const NiRTTI *	NiRTTI_BSMultiIndexTriShape;
-extern const NiRTTI *	NiRTTI_BSLightingShaderPropertyFloatController;
-extern const NiRTTI *	NiRTTI_BSLightingShaderPropertyUShortController;
-extern const NiRTTI *	NiRTTI_BSLightingShaderPropertyColorController;
-extern const NiRTTI *	NiRTTI_BSEffectShaderPropertyFloatController;
-extern const NiRTTI *	NiRTTI_BSEffectShaderPropertyColorController;
-extern const NiRTTI *	NiRTTI_BSNiAlphaPropertyTestRefController;
-extern const NiRTTI *	NiRTTI_BSPSysSimpleColorModifier;
-extern const NiRTTI *	NiRTTI_BSPSysLODModifier;
-extern const NiRTTI *	NiRTTI_BSParabolicCullingProcess;
-extern const NiRTTI *	NiRTTI_BSMeshLODTriShape;
-extern const NiRTTI *	NiRTTI_BSLODMultiIndexTriShape;
-extern const NiRTTI *	NiRTTI_BSSubIndexLandTriShape;
diff --git a/skse64/skse64/NiRenderer.cpp b/skse64/skse64/NiRenderer.cpp
index 12e5239..ed653c2 100644
--- a/skse64/skse64/NiRenderer.cpp
+++ b/skse64/skse64/NiRenderer.cpp
@@ -1,7 +1,7 @@
-#include "skse64/NiRenderer.h"
+#include "NiRenderer.h"
 
 // 4EE5DE7D7BF6D392967302448BCC9612EEE6E7F9+4
-RelocPtr <BSRenderManager> g_renderManager(0x03028490);
+BSRenderManager* g_renderManager = IAL::Addr<BSRenderManager*>(524907); 
 
 BSRenderManager * BSRenderManager::GetSingleton()
 {
@@ -9,4 +9,4 @@ BSRenderManager * BSRenderManager::GetSingleton()
 }
 
 // 57AB5FBCBB5E60836D42FAF78C4DFED6A7BACA41+28
-RelocPtr <BSShaderResourceManager> g_shaderResourceManager(0x030136C0);
+BSShaderResourceManager* g_shaderResourceManager = IAL::Addr<BSShaderResourceManager*>(523950);
diff --git a/skse64/skse64/NiRenderer.h b/skse64/skse64/NiRenderer.h
index f9b2e57..3f87e2e 100644
--- a/skse64/skse64/NiRenderer.h
+++ b/skse64/skse64/NiRenderer.h
@@ -1,9 +1,9 @@
 #pragma once
 
-#include "skse64/NiObjects.h"
-#include "skse64/NiTextures.h"
+#include "NiObjects.h"
+#include "NiTextures.h"
 
-#include "skse64/GameTypes.h"
+#include "GameTypes.h"
 
 struct ID3D11Device;
 struct ID3D11DeviceContext;
@@ -32,14 +32,16 @@ public:
 	CRITICAL_SECTION			lock;				// 2790
 
 	// 1412F0390 - CreateRenderTargets
-	DEFINE_MEMBER_FN_2(CreateRenderTexture, NiTexture::RendererData *, 0x00D6DBC0, UInt32 width, UInt32 height);
+	DEFINE_MEMBER_FN_2(CreateRenderTexture, NiTexture::RendererData *, offset1, UInt32 width, UInt32 height);
+private:
+	inline static auto offset1 = IAL::Offset(75507);
 };
 
-extern RelocPtr <BSRenderManager> g_renderManager;
+extern BSRenderManager* g_renderManager;
 
 class BSShaderResourceManager
 {
 public:
 	virtual ~BSShaderResourceManager();
 };
-extern RelocPtr <BSShaderResourceManager> g_shaderResourceManager;
+extern BSShaderResourceManager* g_shaderResourceManager;
diff --git a/skse64/skse64/NiSerialization.cpp b/skse64/skse64/NiSerialization.cpp
index d7db35a..73b926c 100644
--- a/skse64/skse64/NiSerialization.cpp
+++ b/skse64/skse64/NiSerialization.cpp
@@ -1 +1 @@
-#include "skse64/NiSerialization.h"
+#include "NiSerialization.h"
diff --git a/skse64/skse64/NiSerialization.h b/skse64/skse64/NiSerialization.h
index 55363cf..3989a97 100644
--- a/skse64/skse64/NiSerialization.h
+++ b/skse64/skse64/NiSerialization.h
@@ -1,7 +1,7 @@
 #pragma once
 
 #include "skse64_common/Utilities.h"
-#include "skse64/NiTypes.h"
+#include "NiTypes.h"
 
 class NiBinaryStream;
 class NiObject;
@@ -21,9 +21,9 @@ public:
 	virtual bool	SavePath(const char * path);
 
 	MEMBER_FN_PREFIX(NiStream);
-	DEFINE_MEMBER_FN(ctor, NiStream *, 0x00C59690);
-	DEFINE_MEMBER_FN(dtor, void, 0x00C598F0);
-	DEFINE_MEMBER_FN(AddObject, void, 0x00C59AE0, NiObject * object);
+	DEFINE_MEMBER_FN(ctor, NiStream *, offset1);
+	DEFINE_MEMBER_FN(dtor, void, offset2);
+	DEFINE_MEMBER_FN(AddObject, void, offset3, NiObject * object);
 
 //	void	** _vtbl;								// 000
 	UInt64	pad004[(0x218 - 0x008) >> 3];			// 008
@@ -44,6 +44,10 @@ public:
 	UInt32						unk414;
 	UInt64						unk418[(0x518 - 0x418) >> 3]; // 418
 	char						unk518[MAX_PATH];	// 518
+private:
+	inline static auto offset1 = IAL::Offset(68971);
+	inline static auto offset2 = IAL::Offset(68972);
+	inline static auto offset3 = IAL::Offset(68973);
 };
 
 // 638
@@ -51,11 +55,13 @@ class BSStream : public NiStream
 {
 public:
 	MEMBER_FN_PREFIX(BSStream);
-	DEFINE_MEMBER_FN(dtor, void, 0x0014CC20);
+	DEFINE_MEMBER_FN(dtor, void, offset1);
 
 	UInt64	unk620;
 	UInt64	unk628;
 	UInt64	unk630;
+private:
+	inline static auto offset1 = IAL::Offset(13007);
 };
 
 class DeepCopyStream : public NiStream
@@ -67,8 +73,11 @@ public:
 	// vtbl 001117394
 
 	MEMBER_FN_PREFIX(DeepCopyStream);
-	DEFINE_MEMBER_FN(SaveStream, bool, 0x00C59F10, char ** buffer, UInt32 * length);
-	DEFINE_MEMBER_FN(LoadStream, bool, 0x00C59EC0, char * buffer, UInt32 length);
+	DEFINE_MEMBER_FN(SaveStream, bool, offset1, char ** buffer, UInt32 * length);
+	DEFINE_MEMBER_FN(LoadStream, bool, offset2, char * buffer, UInt32 length);
+private:
+	inline static auto offset1 = IAL::Offset(68979);
+	inline static auto offset2 = IAL::Offset(68978);
 };
 
 //STATIC_ASSERT(offsetof(NiStream, m_objects) == 0x1F4);
diff --git a/skse64/skse64/NiTextures.cpp b/skse64/skse64/NiTextures.cpp
index 9f9e898..31bce6a 100644
--- a/skse64/skse64/NiTextures.cpp
+++ b/skse64/skse64/NiTextures.cpp
@@ -1,4 +1,4 @@
-#include "skse64/NiTextures.h"
+#include "NiTextures.h"
 
-RelocAddr<_CreateSourceTexture> CreateSourceTexture(0x00C68D20);
-RelocAddr<_LoadTexture> LoadTexture(0x01295C30);
\ No newline at end of file
+_CreateSourceTexture CreateSourceTexture = IAL::Addr<_CreateSourceTexture>(69335);
+_LoadTexture LoadTexture = IAL::Addr<_LoadTexture>(98986);
\ No newline at end of file
diff --git a/skse64/skse64/NiTextures.h b/skse64/skse64/NiTextures.h
index 902a555..36b4c1e 100644
--- a/skse64/skse64/NiTextures.h
+++ b/skse64/skse64/NiTextures.h
@@ -1,9 +1,9 @@
 #pragma once
 
-#include "skse64/NiObjects.h"
-#include "skse64/GameAPI.h"
+#include "NiObjects.h"
+#include "GameAPI.h"
 #include "skse64_common/Utilities.h"
-#include "skse64/GameTypes.h"
+#include "GameTypes.h"
 
 class BSResourceStream;
 
@@ -170,9 +170,13 @@ public:
 
 	MEMBER_FN_PREFIX(NiRenderedTexture);
 	DEFINE_MEMBER_FN(ctor, void, 0x00000000);
-	DEFINE_MEMBER_FN(UpdateVirtualImage, void, 0x00ECDF50, NiRenderedTexture * newTexture);
-	DEFINE_MEMBER_FN(AddVirtualImage, UInt8, 0x00ECE010, BSFixedString linkageName);
-	DEFINE_MEMBER_FN(ReleaseVirtualImage, void, 0x00ECDEE0);
+	DEFINE_MEMBER_FN(UpdateVirtualImage, void, offset1, NiRenderedTexture * newTexture);
+	DEFINE_MEMBER_FN(AddVirtualImage, UInt8, offset2, BSFixedString linkageName);
+	DEFINE_MEMBER_FN(ReleaseVirtualImage, void, offset3);
+private:
+	inline static auto offset1 = IAL::Offset(80295);
+	inline static auto offset2 = IAL::Offset(80298);
+	inline static auto offset3 = IAL::Offset(80294);
 };
 
 // 58
@@ -198,7 +202,7 @@ public:
 };
 
 typedef NiTexture * (*_CreateSourceTexture)(const BSFixedString & name);
-extern RelocAddr<_CreateSourceTexture> CreateSourceTexture;
+extern _CreateSourceTexture CreateSourceTexture;
 
 typedef void (*_LoadTexture)(const char * path, UInt8 unk1, NiPointer<NiTexture> & texture, bool unk2);
-extern RelocAddr<_LoadTexture> LoadTexture;
\ No newline at end of file
+extern _LoadTexture LoadTexture;
\ No newline at end of file
diff --git a/skse64/skse64/NiTypes.cpp b/skse64/skse64/NiTypes.cpp
index 587fef6..f42b6cf 100644
--- a/skse64/skse64/NiTypes.cpp
+++ b/skse64/skse64/NiTypes.cpp
@@ -1,4 +1,4 @@
-#include "skse64/NiTypes.h"
+#include "NiTypes.h"
 
 NiPoint3::NiPoint3()
 {
diff --git a/skse64/skse64/ObScript.cpp b/skse64/skse64/ObScript.cpp
index c0f5421..b632ca3 100644
--- a/skse64/skse64/ObScript.cpp
+++ b/skse64/skse64/ObScript.cpp
@@ -2,8 +2,8 @@
 #include "skse64_common\Relocation.h"
 
 // 698845F80EE915EE803E515A37C1269ED6A2FE43+47
-RelocPtr <ObScriptCommand>	g_firstObScriptCommand(0x01DB8910);
+ObScriptCommand	*g_firstObScriptCommand = IAL::Addr<ObScriptCommand*>(501789);
 // 698845F80EE915EE803E515A37C1269ED6A2FE43+1E
-RelocPtr <ObScriptCommand>	g_firstConsoleCommand(0x01DC6F60);
+ObScriptCommand* g_firstConsoleCommand = IAL::Addr<ObScriptCommand*>(501797);
 
-RelocAddr<_ObScript_ExtractArgs> ObjScript_ExtractArgs(0x002E8400);
\ No newline at end of file
+_ObScript_ExtractArgs ObjScript_ExtractArgs = IAL::Addr<_ObScript_ExtractArgs>(21425);
\ No newline at end of file
diff --git a/skse64/skse64/ObScript.h b/skse64/skse64/ObScript.h
index 2d2a189..05c89a0 100644
--- a/skse64/skse64/ObScript.h
+++ b/skse64/skse64/ObScript.h
@@ -99,7 +99,7 @@ typedef bool (* ObScript_Parse)(UInt32 numParams, const ObScriptParam* paramInfo
 typedef bool (* ObScript_Eval)(TESObjectREFR* thisObj, void* arg1, void* arg2, double& result);
 
 typedef bool(* _ObScript_ExtractArgs)(const ObScriptParam * paramInfo, ScriptData * scriptData, UInt32& opcodeOffsetPtr, TESObjectREFR * thisObj, TESObjectREFR* containingObj, Script* scriptObj, ScriptLocals* locals, void* args1, void* args2);
-extern RelocAddr<_ObScript_ExtractArgs> ObjScript_ExtractArgs;
+extern _ObScript_ExtractArgs ObjScript_ExtractArgs;
 
 // 02E8400
 
@@ -135,5 +135,5 @@ enum
 	kObScript_ConsoleOpBase =		0x0100,
 };
 
-extern RelocPtr <ObScriptCommand>	g_firstObScriptCommand;
-extern RelocPtr <ObScriptCommand>	g_firstConsoleCommand;
+extern ObScriptCommand	*g_firstObScriptCommand;
+extern ObScriptCommand	*g_firstConsoleCommand;
diff --git a/skse64/skse64/PapyrusArgs.cpp b/skse64/skse64/PapyrusArgs.cpp
index babb81d..f5797ca 100644
--- a/skse64/skse64/PapyrusArgs.cpp
+++ b/skse64/skse64/PapyrusArgs.cpp
@@ -1,7 +1,7 @@
-#include "skse64/PapyrusArgs.h"
-#include "skse64/PapyrusNativeFunctions.h"
-#include "skse64/PapyrusVM.h"
-#include "skse64/GameForms.h"
+#include "PapyrusArgs.h"
+#include "PapyrusNativeFunctions.h"
+#include "PapyrusVM.h"
+#include "GameForms.h"
 
 //// type -> VMValue
 
diff --git a/skse64/skse64/PapyrusArgs.h b/skse64/skse64/PapyrusArgs.h
index ef1e1cc..f42fa05 100644
--- a/skse64/skse64/PapyrusArgs.h
+++ b/skse64/skse64/PapyrusArgs.h
@@ -1,7 +1,7 @@
 #pragma once
 
 #include "skse64_common/Utilities.h"
-#include "skse64/PapyrusVM.h"
+#include "PapyrusVM.h"
 
 #include <vector>
 
@@ -19,9 +19,12 @@ public:
 
 	MEMBER_FN_PREFIX(VMArgList);
 	// 20AE20213D7A9C7AB3491192BCCB2467282AE266+44
-	DEFINE_MEMBER_FN(GetOffset, UInt32, 0x01244970, VMState * state);
+	DEFINE_MEMBER_FN(GetOffset, UInt32, offset1, VMState * state);
 	// 20AE20213D7A9C7AB3491192BCCB2467282AE266+62
-	DEFINE_MEMBER_FN(Get, VMValue *, 0x012449D0, VMState * state, UInt32 idx, UInt32 offset);
+	DEFINE_MEMBER_FN(Get, VMValue *, offset2, VMState * state, UInt32 idx, UInt32 offset);
+private:
+	inline static auto offset1 = IAL::Offset(97745);
+	inline static auto offset2 = IAL::Offset(97746);
 };
 
 template <typename T>
diff --git a/skse64/skse64/PapyrusClass.h b/skse64/skse64/PapyrusClass.h
index c8d7876..a6bfe2e 100644
--- a/skse64/skse64/PapyrusClass.h
+++ b/skse64/skse64/PapyrusClass.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "skse64/GameTypes.h"
+#include "GameTypes.h"
 
 // SkyrimScript::Store, derived from BSScript::IStore, derived from BSStorage, derived from BSIntrusiveRefCounted
 class VMDataStore
diff --git a/skse64/skse64/PapyrusInterfaces.cpp b/skse64/skse64/PapyrusInterfaces.cpp
index f957b72..09a6be2 100644
--- a/skse64/skse64/PapyrusInterfaces.cpp
+++ b/skse64/skse64/PapyrusInterfaces.cpp
@@ -1,4 +1,4 @@
-#include "skse64/PapyrusInterfaces.h"
+#include "PapyrusInterfaces.h"
 
 // 82677E39AC1FFB7F2E1C28FBABC2FC971DB49882+F7
-RelocPtr <IObjectHandlePolicy*> g_objectHandlePolicy(0x031D07A8);
+IObjectHandlePolicy** g_objectHandlePolicy = IAL::Addr<IObjectHandlePolicy**>(527437);
diff --git a/skse64/skse64/PapyrusInterfaces.h b/skse64/skse64/PapyrusInterfaces.h
index 39af980..de67ca0 100644
--- a/skse64/skse64/PapyrusInterfaces.h
+++ b/skse64/skse64/PapyrusInterfaces.h
@@ -27,7 +27,7 @@ public:
 	//	void	** _vtbl;	// 00
 };
 
-extern RelocPtr<IObjectHandlePolicy	*> g_objectHandlePolicy;
+extern IObjectHandlePolicy** g_objectHandlePolicy;
 
 class ObjectBindPolicy
 {
@@ -51,5 +51,7 @@ public:
 	//	void	** _vtbl;	// 00
 
 	MEMBER_FN_PREFIX(ObjectBindPolicy);
-	DEFINE_MEMBER_FN(BindObject, void, 0x0122DAD0, VMIdentifier ** identifier, UInt64 handle);
+	DEFINE_MEMBER_FN(BindObject, void, offset1, VMIdentifier ** identifier, UInt64 handle);
+private:
+	inline static auto offset1 = IAL::Offset(97379);
 };
diff --git a/skse64/skse64/PapyrusNativeFunctionDef.inl b/skse64/skse64/PapyrusNativeFunctionDef.inl
index 143b388..48c454b 100644
--- a/skse64/skse64/PapyrusNativeFunctionDef.inl
+++ b/skse64/skse64/PapyrusNativeFunctionDef.inl
@@ -4,10 +4,10 @@
 #define LATENT_SPEC 0
 
 #define VOID_SPEC 0
-#include "skse64/PapyrusNativeFunctionDef_Base.inl"
+#include "PapyrusNativeFunctionDef_Base.inl"
 
 #define VOID_SPEC 1
-#include "skse64/PapyrusNativeFunctionDef_Base.inl"
+#include "PapyrusNativeFunctionDef_Base.inl"
 
 #undef LATENT_SPEC
 #undef CLASS_NAME
@@ -18,10 +18,10 @@
 #define LATENT_SPEC 1
 
 #define VOID_SPEC 0
-#include "skse64/PapyrusNativeFunctionDef_Base.inl"
+#include "PapyrusNativeFunctionDef_Base.inl"
 
 #define VOID_SPEC 1
-#include "skse64/PapyrusNativeFunctionDef_Base.inl"
+#include "PapyrusNativeFunctionDef_Base.inl"
 
 #undef LATENT_SPEC
 #undef CLASS_NAME
diff --git a/skse64/skse64/PapyrusNativeFunctions.cpp b/skse64/skse64/PapyrusNativeFunctions.cpp
index d3d1155..81f3c20 100644
--- a/skse64/skse64/PapyrusNativeFunctions.cpp
+++ b/skse64/skse64/PapyrusNativeFunctions.cpp
@@ -1,4 +1,4 @@
-#include "skse64/PapyrusNativeFunctions.h"
+#include "PapyrusNativeFunctions.h"
 
 void NativeFunction::DebugRunHook(VMValue * baseValue, VMClassRegistry * registry, UInt32 arg2, VMValue * resultValue, VMState * state)
 {
diff --git a/skse64/skse64/PapyrusNativeFunctions.h b/skse64/skse64/PapyrusNativeFunctions.h
index 3e79c4d..2212724 100644
--- a/skse64/skse64/PapyrusNativeFunctions.h
+++ b/skse64/skse64/PapyrusNativeFunctions.h
@@ -1,9 +1,9 @@
 #pragma once
 
-#include "skse64/GameTypes.h"
-#include "skse64/GameAPI.h"
-#include "skse64/PapyrusArgs.h"
-#include "skse64/PapyrusVM.h"
+#include "GameTypes.h"
+#include "GameAPI.h"
+#include "PapyrusArgs.h"
+#include "PapyrusVM.h"
 
 // native function bindings for papyrus
 
@@ -117,14 +117,14 @@ public:
 	virtual bool				Run(VMValue * baseValue, VMClassRegistry * registry, UInt32 arg2, VMValue * resultValue, VMState * state) = 0;
 
 	MEMBER_FN_PREFIX(NativeFunctionBase);
-	DEFINE_MEMBER_FN(Impl_dtor, void, 0x01250ED0);
+	DEFINE_MEMBER_FN(Impl_dtor, void, offset1);
 	// ??_7?$NativeFunction1@VActiveEffect@@XPEAVTESForm@@@BSScript@@6B@ entry 6
-	DEFINE_MEMBER_FN(Impl_GetParam, UInt64 *, 0x01250670, UInt32 idx, BSFixedString * nameOut, UInt64 * typeOut);
-	DEFINE_MEMBER_FN(Impl_Invoke, UInt32, 0x012507F0, UInt64 unk0, UInt64 unk1, VMClassRegistry * registry, VMState * unk3);
+	DEFINE_MEMBER_FN(Impl_GetParam, UInt64 *, offset2, UInt32 idx, BSFixedString * nameOut, UInt64 * typeOut);
+	DEFINE_MEMBER_FN(Impl_Invoke, UInt32, offset3, UInt64 unk0, UInt64 unk1, VMClassRegistry * registry, VMState * unk3);
 	// ??_7?$NativeFunction1@VActiveEffect@@XPEAVTESForm@@@BSScript@@6B@ entry 0x10
-	DEFINE_MEMBER_FN(Impl_Fn10, BSFixedString *, 0x01250750);
+	DEFINE_MEMBER_FN(Impl_Fn10, BSFixedString *, offset4);
 	// ??_7?$NativeFunction1@VActiveEffect@@XPEAVTESForm@@@BSScript@@6B@ entry 0x12
-	DEFINE_MEMBER_FN(Impl_Fn12, bool, 0x01250770, UInt32 idx, UInt64 out);
+	DEFINE_MEMBER_FN(Impl_Fn12, bool, offset5, UInt32 idx, UInt64 out);
 
 	DEFINE_STATIC_HEAP(Heap_Allocate, Heap_Free);
 
@@ -140,6 +140,12 @@ protected:
 	UInt8				pad43;			// 43
 	UInt32				unk44;			// 44
 	BSFixedString		unk48;			// 48
+private:
+	inline static auto offset1 = IAL::Offset(97927);
+	inline static auto offset2 = IAL::Offset(97909);
+	inline static auto offset3 = IAL::Offset(97923);
+	inline static auto offset4 = IAL::Offset(97918);
+	inline static auto offset5 = IAL::Offset(97920);
 };
 
 // 30
@@ -156,8 +162,8 @@ public:
 	virtual bool				Run(VMValue * baseValue, VMClassRegistry * registry, UInt32 arg2, VMValue * resultValue, VMState * state) = 0;
 
 	MEMBER_FN_PREFIX(NativeFunction);
-	DEFINE_MEMBER_FN(Impl_ctor, NativeFunction *, 0x01250C80, const char * fnName, const char * className, UInt32 unk0, UInt32 numParams);
-	DEFINE_MEMBER_FN(Impl_dtor, void, 0x01250ED0);
+	DEFINE_MEMBER_FN(Impl_ctor, NativeFunction *, offset1, const char * fnName, const char * className, UInt32 unk0, UInt32 numParams);
+	DEFINE_MEMBER_FN(Impl_dtor, void, offset2);
 
 	void	DebugRunHook(VMValue * baseValue, VMClassRegistry * registry, UInt32 arg2, VMValue * resultValue, VMState * state);
 
@@ -166,40 +172,44 @@ protected:
 
 	// hide
 	NativeFunction();
+
+private:
+	inline static auto offset1 = IAL::Offset(97925);
+	inline static auto offset2 = IAL::Offset(97927);
 };
 
 #define NUM_PARAMS 0
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 1
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 2
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 3
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 4
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 5
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 6
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 7
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 8
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 9
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 #define NUM_PARAMS 10
-#include "skse64/PapyrusNativeFunctionDef.inl"
+#include "PapyrusNativeFunctionDef.inl"
 
 // Less boilerplate for checking of input parameters in native function callbacks.
 
diff --git a/skse64/skse64/PapyrusVM.cpp b/skse64/skse64/PapyrusVM.cpp
index 4b091e3..4c25325 100644
--- a/skse64/skse64/PapyrusVM.cpp
+++ b/skse64/skse64/PapyrusVM.cpp
@@ -2,7 +2,7 @@
 #include "GameAPI.h"
 
 // 34E44118D2A6FDD3472D1A6D43002360FBDE4EA4+15
-RelocPtr <SkyrimVM*> g_skyrimVM(0x01EC3B78);
+SkyrimVM** g_skyrimVM = IAL::Addr<SkyrimVM**>(514315);
 
 void VMClassInfo::AddRef(void)
 {
diff --git a/skse64/skse64/PapyrusVM.h b/skse64/skse64/PapyrusVM.h
index f8fce7b..e79cf4f 100644
--- a/skse64/skse64/PapyrusVM.h
+++ b/skse64/skse64/PapyrusVM.h
@@ -1,11 +1,11 @@
 #pragma once
 
 #include "skse64_common/Utilities.h"
-#include "skse64/GameTypes.h"
-#include "skse64/GameUtilities.h"
+#include "GameTypes.h"
+#include "GameUtilities.h"
 
-#include "skse64/PapyrusValue.h"
-#include "skse64/PapyrusInterfaces.h"
+#include "PapyrusValue.h"
+#include "PapyrusInterfaces.h"
 
 class IFunction;
 class VMIdentifier;
@@ -78,10 +78,14 @@ public:
 	void	Release(void);
 
 	MEMBER_FN_PREFIX(VMClassInfo);
-	DEFINE_MEMBER_FN(Destroy, void, 0x01237240);
-	DEFINE_MEMBER_FN(GetVariable, SInt32, 0x012385B0, BSFixedString * name);
+	DEFINE_MEMBER_FN(Destroy, void, offset1);
+	DEFINE_MEMBER_FN(GetVariable, SInt32, offset2, BSFixedString * name);
 	// 1673D04F90861710999A3DC0514282C538D25FCA+187
-	DEFINE_MEMBER_FN(GetFunction, IFunction*, 0x0123C760, const char * fnName);
+	DEFINE_MEMBER_FN(GetFunction, IFunction*, offset3, const char * fnName);
+private:
+	inline static auto offset1 = IAL::Offset(97514);
+	inline static auto offset2 = IAL::Offset(97537);
+	inline static auto offset3 = IAL::Offset(97606);
 };
 
 // This type is not fully decoded or correctly sized, just enough to use the functor
@@ -392,15 +396,15 @@ public:
 
 	// Used by Hooks_Papyrus
 	// 7B34FD8669F3B7848943EE6F26F783A154F6A336+31
-	DEFINE_MEMBER_FN(UnregisterFromSleep_Internal, void, 0x009247E0, UInt64 handle);
-	DEFINE_MEMBER_FN(RevertGlobalData_Internal, bool, 0x0092DAE0);
+	DEFINE_MEMBER_FN(UnregisterFromSleep_Internal, void, offset1, UInt64 handle);
+	DEFINE_MEMBER_FN(RevertGlobalData_Internal, bool, offset2);
 	// E79F47684196468F785E6950402DBDAA5A668FAA+110
-	DEFINE_MEMBER_FN(SaveRegSleepEventHandles_Internal, bool, 0x0092EB50, void * handleReaderWriter, void * saveStorageWrapper);
+	DEFINE_MEMBER_FN(SaveRegSleepEventHandles_Internal, bool, offset3, void * handleReaderWriter, void * saveStorageWrapper);
 	// ECCDB3740458A9BB07FA958498C66F04CE14F94C+1E6
-	DEFINE_MEMBER_FN(LoadRegSleepEventHandles_Internal, bool, 0x0092FD80, void * handleReaderWriter, void * loadStorageWrapper);
+	DEFINE_MEMBER_FN(LoadRegSleepEventHandles_Internal, bool, offset4, void * handleReaderWriter, void * loadStorageWrapper);
 
 	// 00011FEFBFDA69F253C84165B45736A4F0AF02B8+204
-	DEFINE_MEMBER_FN(QueueDelayFunctor_Internal, bool, 0x009252C0, void** pFunctor);
+	DEFINE_MEMBER_FN(QueueDelayFunctor_Internal, bool, offset5, void** pFunctor);
 
 	bool QueueDelayFunctor(void** pFunctor)
 	{
@@ -411,13 +415,19 @@ public:
 	void RevertGlobalData_Hook(void);
 	bool SaveGlobalData_Hook(void * handleReaderWriter, void * saveStorageWrapper);
 	bool LoadGlobalData_Hook(void * handleReaderWriter, void * loadStorageWrapper);
+private:
+	inline static auto offset1 = IAL::Offset(53136);
+	inline static auto offset2 = IAL::Offset(53228);
+	inline static auto offset3 = IAL::Offset(53234);
+	inline static auto offset4 = IAL::Offset(53242);
+	inline static auto offset5 = IAL::Offset(53144);
 };
 STATIC_ASSERT(offsetof(SkyrimVM, m_classRegistry) == 0x200);
 STATIC_ASSERT(offsetof(SkyrimVM, m_updateLock) == 0x714);
 STATIC_ASSERT(offsetof(SkyrimVM, m_updateRegHolder) == 0x720);
 STATIC_ASSERT(offsetof(SkyrimVM, m_updateGameTimeRegHolder) == 0x738);
 
-extern RelocPtr<SkyrimVM*> g_skyrimVM;
+extern SkyrimVM** g_skyrimVM;
 
 // ??
 class IFunctionArguments
@@ -438,8 +448,10 @@ public:
 		VMValue	* Get(UInt32 idx)	{ return (idx < m_size) ? &m_data[idx] : NULL; }
 
 		MEMBER_FN_PREFIX(Output);
-		DEFINE_MEMBER_FN(Resize, bool, 0x00920360, UInt32 len);
+		DEFINE_MEMBER_FN(Resize, bool, offset1, UInt32 len);
 	};
 
 	virtual bool	Copy(Output * dst) = 0;
+private:
+	inline static auto offset1 = IAL::Offset(53105);
 };
diff --git a/skse64/skse64/PapyrusValue.cpp b/skse64/skse64/PapyrusValue.cpp
index 3471a9f..6748cc1 100644
--- a/skse64/skse64/PapyrusValue.cpp
+++ b/skse64/skse64/PapyrusValue.cpp
@@ -1 +1 @@
-#include "skse64/PapyrusValue.h"
+#include "PapyrusValue.h"
diff --git a/skse64/skse64/PapyrusValue.h b/skse64/skse64/PapyrusValue.h
index dd7e1cc..6bfaab6 100644
--- a/skse64/skse64/PapyrusValue.h
+++ b/skse64/skse64/PapyrusValue.h
@@ -1,7 +1,7 @@
 #pragma once
 
 #include "skse64_common/Utilities.h"
-#include "skse64/GameTypes.h"
+#include "GameTypes.h"
 
 class VMClassInfo;
 
@@ -17,9 +17,9 @@ public:
 
 	SInt32			m_refCount;	// 00
 	UInt32			unk04;		// 04
-	VMClassInfo		* m_type;	// 08
-	void			* unk08;	// 10
-	void			* unk0C;	// 18
+	VMClassInfo* m_type;	// 08
+	void* unk08;	// 10
+	void* unk0C;	// 18
 	volatile UInt64	m_handle;	// 20
 	volatile SInt32	m_lock;		// 28
 
@@ -35,7 +35,9 @@ public:
 	void	Destroy(void);
 
 	MEMBER_FN_PREFIX(VMIdentifier);
-	DEFINE_MEMBER_FN(Destroy_Internal, void, 0x01233670);
+	DEFINE_MEMBER_FN(Destroy_Internal, void, offset1);
+private:
+	inline static auto offset1 = IAL::Offset(97462);
 };
 
 // 10
@@ -45,7 +47,7 @@ public:
 	VMValue() :type(kType_None) { data.p = 0; }
 	~VMValue() { CALL_MEMBER_FN(this, Destroy)(); }
 
-	VMValue(const VMValue & other)
+	VMValue(const VMValue& other)
 	{
 		if (&other != this)
 		{
@@ -94,10 +96,10 @@ public:
 		UInt64			unk18;		// 18
 		//VMValue			data[0];	// 20
 
-		VMValue	*	GetData(void) { return (VMValue *)(this + 1); }
+		VMValue* GetData(void) { return (VMValue*)(this + 1); }
 
 		MEMBER_FN_PREFIX(ArrayData);
-		DEFINE_MEMBER_FN(Destroy, void, 0x01241E40);
+		DEFINE_MEMBER_FN(Destroy, void, offset1);
 	};
 
 	UInt64	type;	// 00
@@ -108,18 +110,18 @@ public:
 		UInt32			u;
 		float			f;
 		bool			b;
-		void			* p;
-		ArrayData		* arr;
-		VMIdentifier	* id;
-		const char		* str;	// BSFixedString
+		void* p;
+		ArrayData* arr;
+		VMIdentifier* id;
+		const char* str;	// BSFixedString
 
-		BSFixedString *	GetStr(void) { return (BSFixedString *)(&str); }
+		BSFixedString* GetStr(void) { return (BSFixedString*)(&str); }
 	} data;			// 04
 
 	MEMBER_FN_PREFIX(VMValue);
-	DEFINE_MEMBER_FN(Set, void, 0x01236E50, const VMValue * src);
-	DEFINE_MEMBER_FN(Destroy, void, 0x01236D10);
-	DEFINE_MEMBER_FN(SetArray, void, 0x01235F60, ArrayData * data);
+	DEFINE_MEMBER_FN(Set, void, offset2, const VMValue* src);
+	DEFINE_MEMBER_FN(Destroy, void, offset3);
+	DEFINE_MEMBER_FN(SetArray, void, offset4, ArrayData* data);
 
 	bool	IsIdentifierArray()
 	{
@@ -202,4 +204,9 @@ public:
 	UInt32	GetUnmangledType(void);
 
 	bool	IsIdentifier(void) { return GetUnmangledType() == kType_Identifier; }
+private:
+	inline static auto offset1 = IAL::Offset(97723);
+	inline static auto offset2 = IAL::Offset(97509);
+	inline static auto offset3 = IAL::Offset(97508);
+	inline static auto offset4 = IAL::Offset(97503);
 };
diff --git a/skse64/skse64/ScaleformAPI.cpp b/skse64/skse64/ScaleformAPI.cpp
index 03908d9..8ac5f8d 100644
--- a/skse64/skse64/ScaleformAPI.cpp
+++ b/skse64/skse64/ScaleformAPI.cpp
@@ -19,7 +19,7 @@ public:
 };
 
 // C70DB2D0DA8EB136C1BB8E87A7E39C173A7E4C0B+21
-RelocPtr<ScaleformHeap *> g_scaleformHeap(0x03032C50);
+ScaleformHeap ** g_scaleformHeap = IAL::Addr< ScaleformHeap** >(525584);
 
 void * ScaleformHeap_Allocate(UInt32 size)
 {
@@ -31,5 +31,5 @@ void ScaleformHeap_Free(void * ptr)
 	(*(g_scaleformHeap))->Free(ptr);
 }
 
-RelocAddr<_InvokeFunction> InvokeFunction(0x00ED6AC0);
-RelocAddr<_GFxAllocateHeap> GFxAllocateHeap(0x00F483C0);
+_InvokeFunction InvokeFunction = IAL::Addr<_InvokeFunction>(80520);
+_GFxAllocateHeap GFxAllocateHeap = IAL::Addr<_GFxAllocateHeap>(82467);
diff --git a/skse64/skse64/ScaleformAPI.h b/skse64/skse64/ScaleformAPI.h
index cfda8d0..d964694 100644
--- a/skse64/skse64/ScaleformAPI.h
+++ b/skse64/skse64/ScaleformAPI.h
@@ -10,7 +10,7 @@ void * ScaleformHeap_Allocate(UInt32 size);
 void ScaleformHeap_Free(void * ptr);
 
 typedef void * (* _InvokeFunction)(GFxMovieView * movie, const char * fnName, FxResponseArgsBase * arguments);
-extern RelocAddr<_InvokeFunction> InvokeFunction;
+extern _InvokeFunction InvokeFunction;
 
 struct HeapDesc
 {
@@ -33,4 +33,4 @@ struct HeapDesc
 };
 
 typedef void * (* _GFxAllocateHeap)(HeapDesc * heap, ScaleformAllocator * allocator);
-extern RelocAddr<_GFxAllocateHeap> GFxAllocateHeap;
+extern _GFxAllocateHeap GFxAllocateHeap;
diff --git a/skse64/skse64/ScaleformCallbacks.cpp b/skse64/skse64/ScaleformCallbacks.cpp
index 6e2e7d4..a9e94fe 100644
--- a/skse64/skse64/ScaleformCallbacks.cpp
+++ b/skse64/skse64/ScaleformCallbacks.cpp
@@ -15,7 +15,7 @@ GFxFunctionHandler::~GFxFunctionHandler()
 
 FunctionHandlerCache g_functionHandlerCache;
 
-RelocAddr<FxDelegateHandler::Callback> PlaySoundCallback(0x008DA5C0);
+FxDelegateHandler::Callback PlaySoundCallback = IAL::Addr<FxDelegateHandler::Callback>(52051); 
 
 FxResponseArgsList::FxResponseArgsList()
 {
diff --git a/skse64/skse64/ScaleformCallbacks.h b/skse64/skse64/ScaleformCallbacks.h
index abb38d3..ceb85ea 100644
--- a/skse64/skse64/ScaleformCallbacks.h
+++ b/skse64/skse64/ScaleformCallbacks.h
@@ -1,8 +1,8 @@
 #pragma once
 
-#include "skse64/ScaleformAPI.h"
-#include "skse64/ScaleformTypes.h"
-#include "skse64/ScaleformValue.h"
+#include "ScaleformAPI.h"
+#include "ScaleformTypes.h"
+#include "ScaleformValue.h"
 #include "skse64_common/Utilities.h"
 #include <typeinfo>
 #include <map>
@@ -170,4 +170,4 @@ public:
 	virtual void	Accept(CallbackProcessor * processor) = 0;
 };
 
-extern RelocAddr<FxDelegateHandler::Callback> PlaySoundCallback;
+extern FxDelegateHandler::Callback PlaySoundCallback;
diff --git a/skse64/skse64/ScaleformExtendedData.cpp b/skse64/skse64/ScaleformExtendedData.cpp
index 351d3e9..fb490c9 100644
--- a/skse64/skse64/ScaleformExtendedData.cpp
+++ b/skse64/skse64/ScaleformExtendedData.cpp
@@ -10,7 +10,7 @@
 #include "GameMenus.h"
 
 // Helpers
-double round(double r)
+static double _round(double r)
 {
 	return (r >= 0.0) ? floor(r + 0.5) : ceil(r - 0.5);
 }
@@ -742,7 +742,7 @@ namespace scaleformExtend
 				if(pArmor)
 				{
 					double armorValue = CALL_MEMBER_FN(pPC, GetArmorValue)(objDesc);
-					armorValue = round(armorValue);
+					armorValue = _round(armorValue);
 					RegisterNumber(pFxVal, "armor", armorValue);
 				}
 			}
@@ -754,7 +754,7 @@ namespace scaleformExtend
 				if(pWeapon)
 				{
 					double damage = CALL_MEMBER_FN(pPC, GetDamage)(objDesc);
-					damage = round(damage);
+					damage = _round(damage);
 					RegisterNumber(pFxVal, "damage", damage);
 				}
 			}
@@ -766,7 +766,7 @@ namespace scaleformExtend
 				if(pAmmo)
 				{
 					double damage = CALL_MEMBER_FN(pPC, GetDamage)(objDesc);
-					damage = round(damage);
+					damage = _round(damage);
 					RegisterNumber(pFxVal, "damage", damage);
 				}
 			}
diff --git a/skse64/skse64/ScaleformLoader.cpp b/skse64/skse64/ScaleformLoader.cpp
index ade5337..9878691 100644
--- a/skse64/skse64/ScaleformLoader.cpp
+++ b/skse64/skse64/ScaleformLoader.cpp
@@ -2,9 +2,10 @@
 
 #include "skse64_common/Relocation.h"
 
+// 4E9F39D1066653EF254B38406212E476F80A6C9B+AE
+static auto g_GFxLoader = IAL::Addr<GFxLoader**>(516573);
+
 GFxLoader * GFxLoader::GetSingleton()
 {
-	// 4E9F39D1066653EF254B38406212E476F80A6C9B+AE
-	RelocPtr<GFxLoader*> g_GFxLoader(0x02F257A0);
 	return *g_GFxLoader;
 }
diff --git a/skse64/skse64/ScaleformLoader.h b/skse64/skse64/ScaleformLoader.h
index f1e8d41..4f22689 100644
--- a/skse64/skse64/ScaleformLoader.h
+++ b/skse64/skse64/ScaleformLoader.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "skse64/ScaleformState.h"
+#include "ScaleformState.h"
 
 class NiTexture;
 class IMenu;
@@ -18,8 +18,11 @@ public:
 	virtual ~BSScaleformImageLoader();
 	virtual GImageInfoBase*	LoadImage(const char * url);
 
-	DEFINE_MEMBER_FN_1(AddVirtualImage, UInt8, 0x00F45350, NiTexture ** texture);
-	DEFINE_MEMBER_FN_1(ReleaseVirtualImage, UInt8, 0x00F45820, NiTexture ** texture);
+	DEFINE_MEMBER_FN_1(AddVirtualImage, UInt8, offset1, NiTexture ** texture);
+	DEFINE_MEMBER_FN_1(ReleaseVirtualImage, UInt8, offset2, NiTexture ** texture);
+private:
+	inline static auto offset1 = IAL::Offset(82382);
+	inline static auto offset2 = IAL::Offset(82383);
 };
 
 class GFxLoader
@@ -34,8 +37,11 @@ public:
 	static GFxLoader * GetSingleton();
 
 	MEMBER_FN_PREFIX(GFxLoader);
-	DEFINE_MEMBER_FN(ctor, GFxLoader *, 0x00ECE0D0);
+	DEFINE_MEMBER_FN(ctor, GFxLoader *, offset1);
 
 	// Note: Probably in subclass
-	DEFINE_MEMBER_FN(LoadMovie, bool, 0x00ECE790, IMenu* menu, GFxMovieView** viewOut, const char* name, int arg4, float arg5);
+	DEFINE_MEMBER_FN(LoadMovie, bool, offset2, IMenu* menu, GFxMovieView** viewOut, const char* name, int arg4, float arg5);
+private:
+	inline static auto offset1 = IAL::Offset(80300);
+	inline static auto offset2 = IAL::Offset(80302);
 };
diff --git a/skse64/skse64/ScaleformMovie.h b/skse64/skse64/ScaleformMovie.h
index c5ed458..5781b17 100644
--- a/skse64/skse64/ScaleformMovie.h
+++ b/skse64/skse64/ScaleformMovie.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "skse64/ScaleformTypes.h"
+#include "ScaleformTypes.h"
 
 class GFxValue;
 class GFxFunctionHandler;
diff --git a/skse64/skse64/ScaleformState.cpp b/skse64/skse64/ScaleformState.cpp
index 7040e42..b7e5c3b 100644
--- a/skse64/skse64/ScaleformState.cpp
+++ b/skse64/skse64/ScaleformState.cpp
@@ -1,7 +1,7 @@
 #include "ScaleformState.h"
-#include "skse64/GameAPI.h"
+#include "GameAPI.h"
 
-RelocAddr<BSScaleformTranslator::_GetCachedString> BSScaleformTranslator::GetCachedString(0x00C29900);
+BSScaleformTranslator::_GetCachedString BSScaleformTranslator::GetCachedString = IAL::Addr< BSScaleformTranslator::_GetCachedString>(67844);
 
 void SKSEGFxLogger::LogMessageVarg(UInt32 messageType, const char* fmt, va_list args)
 {
diff --git a/skse64/skse64/ScaleformState.h b/skse64/skse64/ScaleformState.h
index 06a9834..a6f2a25 100644
--- a/skse64/skse64/ScaleformState.h
+++ b/skse64/skse64/ScaleformState.h
@@ -1,8 +1,8 @@
 #pragma once
 
-#include "skse64/ScaleformTypes.h"
-#include "skse64/GameTypes.h"
-#include "skse64/GameUtilities.h"
+#include "ScaleformTypes.h"
+#include "GameTypes.h"
+#include "GameUtilities.h"
 
 class GFxState : public GRefCountBase
 {
@@ -107,7 +107,7 @@ public:
 	TranslationTable	translations;	// 020
 
 	typedef void (* _GetCachedString)(wchar_t ** pOut, wchar_t * bufIn, UInt32 unused);
-	static RelocAddr<_GetCachedString> GetCachedString;
+	static _GetCachedString GetCachedString;
 };
 STATIC_ASSERT(offsetof(BSScaleformTranslator, translations) == 0x20);
 
diff --git a/skse64/skse64/ScaleformTypes.h b/skse64/skse64/ScaleformTypes.h
index e894e65..c990f18 100644
--- a/skse64/skse64/ScaleformTypes.h
+++ b/skse64/skse64/ScaleformTypes.h
@@ -1,7 +1,7 @@
 #pragma once
 
 #include "skse64_common/Utilities.h"
-#include "skse64/ScaleformAPI.h"
+#include "ScaleformAPI.h"
 
 // not sure why they nest it like this, but whatever
 class GRefCountImplCore
@@ -113,8 +113,9 @@ public:
 	void	Destroy(void);
 
 	MEMBER_FN_PREFIX(GString);
-	DEFINE_MEMBER_FN(ctor, GString *, 0x00ED3A50, const char * string);
-	
+	DEFINE_MEMBER_FN(ctor, GString *, offset1, const char * string);
+private:
+	inline static auto offset1 = IAL::Offset(80446);
 };
 
 #pragma warning (pop)
diff --git a/skse64/skse64/ScaleformVM.h b/skse64/skse64/ScaleformVM.h
index 39e9b34..1d328d4 100644
--- a/skse64/skse64/ScaleformVM.h
+++ b/skse64/skse64/ScaleformVM.h
@@ -1,3 +1,3 @@
 #pragma once
 
-#include "skse64/ScaleformTypes.h"
+#include "ScaleformTypes.h"
diff --git a/skse64/skse64/ScaleformValue.cpp b/skse64/skse64/ScaleformValue.cpp
index 7a676c9..70d4f91 100644
--- a/skse64/skse64/ScaleformValue.cpp
+++ b/skse64/skse64/ScaleformValue.cpp
@@ -1,4 +1,4 @@
-#include "skse64/ScaleformValue.h"
+#include "ScaleformValue.h"
 
 GFxValue::~GFxValue()
 {
diff --git a/skse64/skse64/ScaleformValue.h b/skse64/skse64/ScaleformValue.h
index 1a43c6f..f2e298e 100644
--- a/skse64/skse64/ScaleformValue.h
+++ b/skse64/skse64/ScaleformValue.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "skse64/ScaleformTypes.h"
+#include "ScaleformTypes.h"
 #include "skse64_common/Utilities.h"
 
 class GFxMovieRoot;
@@ -126,26 +126,26 @@ public:
 	public:
 		GFxMovieRoot	* root;
 
-		DEFINE_MEMBER_FN_3(HasMember, bool, 0x00ECA620, void * obj, const char * name, bool isDisplayObj);
-		DEFINE_MEMBER_FN_4(SetMember, bool, 0x00ECCBA0, void * obj, const char * name, GFxValue * value, bool isDisplayObj);
-		DEFINE_MEMBER_FN_3(DeleteMember, bool, 0x00EC9490, void * obj, const char * name, bool isDisplayObj);
-		DEFINE_MEMBER_FN_4(GetMember, bool, 0x00ECA150, void * obj, const char * name, GFxValue * value, bool isDisplayObj);
-		DEFINE_MEMBER_FN_6(Invoke, bool, 0x00ECA860, void * obj, GFxValue * result, const char * name, GFxValue * args, UInt32 numArgs, bool isDisplayObj);
-		DEFINE_MEMBER_FN_6(AttachMovie, bool, 0x00EC83A0, void * obj, GFxValue * value, const char * symbolName, const char * instanceName, SInt32 depth, void * initArgs);
-		DEFINE_MEMBER_FN_2(PushBack, bool, 0x00ECB300, void * obj, GFxValue * value);
-		DEFINE_MEMBER_FN_3(SetText, bool, 0x00ECCCF0, void * obj, const char * text, bool html);
+		DEFINE_MEMBER_FN_3(HasMember, bool, offset1, void * obj, const char * name, bool isDisplayObj);
+		DEFINE_MEMBER_FN_4(SetMember, bool, offset2, void * obj, const char * name, GFxValue * value, bool isDisplayObj);
+		DEFINE_MEMBER_FN_3(DeleteMember, bool, offset3, void * obj, const char * name, bool isDisplayObj);
+		DEFINE_MEMBER_FN_4(GetMember, bool, offset4, void * obj, const char * name, GFxValue * value, bool isDisplayObj);
+		DEFINE_MEMBER_FN_6(Invoke, bool, offset5, void * obj, GFxValue * result, const char * name, GFxValue * args, UInt32 numArgs, bool isDisplayObj);
+		DEFINE_MEMBER_FN_6(AttachMovie, bool, offset6, void * obj, GFxValue * value, const char * symbolName, const char * instanceName, SInt32 depth, void * initArgs);
+		DEFINE_MEMBER_FN_2(PushBack, bool, offset7, void * obj, GFxValue * value);
+		DEFINE_MEMBER_FN_3(SetText, bool, offset8, void * obj, const char * text, bool html);
 		//DEFINE_MEMBER_FN(PopBack, bool, 0x00000000, void * obj, GFxValue * value);
-		DEFINE_MEMBER_FN_1(GetArraySize, UInt32, 0x00EC9BD0, void * obj);
+		DEFINE_MEMBER_FN_1(GetArraySize, UInt32, offset9, void * obj);
 		//DEFINE_MEMBER_FN(SetArraySize, bool, 0x00000000, void * obj, UInt32 size);
-		DEFINE_MEMBER_FN_3(GetElement, bool, 0x00EC9F30, void * obj, UInt32 index, GFxValue * value);
+		DEFINE_MEMBER_FN_3(GetElement, bool, offset10, void * obj, UInt32 index, GFxValue * value);
 		//DEFINE_MEMBER_FN(SetElement, bool, 0x00000000, void * obj, UInt32 index, GFxValue * value);
-		DEFINE_MEMBER_FN_3(GotoLabeledFrame, bool, 0x00ECA570, void * obj, const char * frameLabel, bool stop);
+		DEFINE_MEMBER_FN_3(GotoLabeledFrame, bool, offset11, void * obj, const char * frameLabel, bool stop);
 		//DEFINE_MEMBER_FN(GotoFrame, bool, 0x00000000, void * obj, UInt32 frameNumber, bool stop);
-		DEFINE_MEMBER_FN_2(GetDisplayInfo, bool, 0x00EC9C20, void * obj, DisplayInfo * displayInfo);
-		DEFINE_MEMBER_FN_2(SetDisplayInfo, bool, 0x00ECBDB0, void * obj, DisplayInfo * displayInfo);
+		DEFINE_MEMBER_FN_2(GetDisplayInfo, bool, offset12, void * obj, DisplayInfo * displayInfo);
+		DEFINE_MEMBER_FN_2(SetDisplayInfo, bool, offset13, void * obj, DisplayInfo * displayInfo);
 
-		DEFINE_MEMBER_FN_2(AddManaged_Internal, void, 0x00ECB080, GFxValue * value, void * obj);
-		DEFINE_MEMBER_FN_2(ReleaseManaged_Internal, void, 0x00ECB0E0, GFxValue * value, void * obj);
+		DEFINE_MEMBER_FN_2(AddManaged_Internal, void, offset14, GFxValue * value, void * obj);
+		DEFINE_MEMBER_FN_2(ReleaseManaged_Internal, void, offset15, GFxValue * value, void * obj);
 	};
 
 	ObjectInterface	* objectInterface;	// 00
@@ -183,4 +183,20 @@ public:
 	bool	GetDisplayInfo(DisplayInfo * displayInfo);
 	bool	SetDisplayInfo(DisplayInfo * displayInfo);
 	bool	SetText(const char * text, bool html);
+private:
+	inline static auto offset1 = IAL::Offset(80231);
+	inline static auto offset2 = IAL::Offset(80268);
+	inline static auto offset3 = IAL::Offset(80207);
+	inline static auto offset4 = IAL::Offset(80222);
+	inline static auto offset5 = IAL::Offset(80233);
+	inline static auto offset6 = IAL::Offset(80197);
+	inline static auto offset7 = IAL::Offset(80248);
+	inline static auto offset8 = IAL::Offset(80270);
+	inline static auto offset9 = IAL::Offset(80214);
+	inline static auto offset10 = IAL::Offset(80218);
+	inline static auto offset11 = IAL::Offset(80230);
+	inline static auto offset12 = IAL::Offset(80216);
+	inline static auto offset13 = IAL::Offset(80263);
+	inline static auto offset14 = IAL::Offset(80244);
+	inline static auto offset15 = IAL::Offset(80245);
 };
diff --git a/skse64/skse64/gamethreads.h b/skse64/skse64/gamethreads.h
index bfd9e78..d66d589 100644
--- a/skse64/skse64/gamethreads.h
+++ b/skse64/skse64/gamethreads.h
@@ -21,11 +21,14 @@ class BSTaskPool
 {
 public:
 	MEMBER_FN_PREFIX(BSTaskPool);
-	DEFINE_MEMBER_FN(SetNiGeometryTexture, UInt32, 0x005C6BF0, NiAVObject * geometry, BGSTextureSet * textureSet);
+	DEFINE_MEMBER_FN(SetNiGeometryTexture, UInt32, offset1, NiAVObject * geometry, BGSTextureSet * textureSet);
 
 	void ProcessTasks(void);
 
-	DEFINE_MEMBER_FN(ProcessTaskQueue_HookTarget, void, 0x005C1BE0);
+	DEFINE_MEMBER_FN(ProcessTaskQueue_HookTarget, void, offset2);
 
 	static BSTaskPool *	GetSingleton(void);
+private:
+	inline static auto offset1 = IAL::Offset(36012);
+	inline static auto offset2 = IAL::Offset(35916);
 };
diff --git a/skse64/skse64/skse64.vcxproj b/skse64/skse64/skse64.vcxproj
index dbd88bc..4a4b751 100644
--- a/skse64/skse64/skse64.vcxproj
+++ b/skse64/skse64/skse64.vcxproj
@@ -5,6 +5,18 @@
       <Configuration>Debug</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
+    <ProjectConfiguration Include="DeployRelease|x64">
+      <Configuration>DeployRelease</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="PreRelease|x64">
+      <Configuration>PreRelease</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseAVX2|x64">
+      <Configuration>ReleaseAVX2</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
     <ProjectConfiguration Include="Release|x64">
       <Configuration>Release</Configuration>
       <Platform>x64</Platform>
@@ -14,23 +26,49 @@
     <ProjectGuid>{7028B79C-06E3-4D9A-B38C-1DC3680B1BDB}</ProjectGuid>
     <Keyword>Win32Proj</Keyword>
     <RootNamespace>skse64</RootNamespace>
-    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
-    <SccProjectName>SAK</SccProjectName>
-    <SccAuxPath>SAK</SccAuxPath>
-    <SccLocalPath>SAK</SccLocalPath>
-    <SccProvider>SAK</SccProvider>
+    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
+    <SccProjectName>
+    </SccProjectName>
+    <SccAuxPath>
+    </SccAuxPath>
+    <SccLocalPath>
+    </SccLocalPath>
+    <SccProvider>
+    </SccProvider>
+    <ProjectName>skse64_1_5_97</ProjectName>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <ConfigurationType>StaticLibrary</ConfigurationType>
     <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
+    <PlatformToolset>v141</PlatformToolset>
     <CharacterSet>MultiByte</CharacterSet>
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'" Label="Configuration">
     <ConfigurationType>DynamicLibrary</ConfigurationType>
     <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
+    <PlatformToolset>v141</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v141</PlatformToolset>
     <WholeProgramOptimization>true</WholeProgramOptimization>
     <CharacterSet>MultiByte</CharacterSet>
   </PropertyGroup>
@@ -45,14 +83,50 @@
   <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
   </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
     <LinkIncremental>true</LinkIncremental>
-    <TargetName>$(ProjectName)_1_5_97</TargetName>
+    <TargetName>$(ProjectName)</TargetName>
+    <PostBuildEventUseInBuild>false</PostBuildEventUseInBuild>
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
     <LinkIncremental>false</LinkIncremental>
-    <TargetName>$(ProjectName)_1_5_97</TargetName>
+    <TargetName>$(ProjectName)</TargetName>
+    <PostBuildEventUseInBuild>false</PostBuildEventUseInBuild>
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'">
+    <LinkIncremental>false</LinkIncremental>
+    <TargetName>$(ProjectName)</TargetName>
+    <PostBuildEventUseInBuild>true</PostBuildEventUseInBuild>
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'">
+    <LinkIncremental>false</LinkIncremental>
+    <TargetName>$(ProjectName)</TargetName>
+    <PostBuildEventUseInBuild>false</PostBuildEventUseInBuild>
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'">
+    <LinkIncremental>false</LinkIncremental>
+    <TargetName>$(ProjectName)</TargetName>
+    <PostBuildEventUseInBuild>false</PostBuildEventUseInBuild>
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
   </PropertyGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
     <ClCompile>
@@ -61,9 +135,12 @@
       <WarningLevel>Level3</WarningLevel>
       <Optimization>Disabled</Optimization>
       <PreprocessorDefinitions>_DEBUG;_WINDOWS;_USRDLL;SKSE64_EXPORTS;RUNTIME_VERSION=0x01050610;RUNTIME;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h;skse64_common/ICommon.h</ForcedIncludeFiles>
       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
     </ClCompile>
     <Link>
       <SubSystem>Windows</SubSystem>
@@ -85,9 +162,110 @@
       <FunctionLevelLinking>true</FunctionLevelLinking>
       <IntrinsicFunctions>true</IntrinsicFunctions>
       <PreprocessorDefinitions>NDEBUG;_WINDOWS;_USRDLL;SKSE64_EXPORTS;RUNTIME;RUNTIME_VERSION=0x01050610;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h;skse64_common/ICommon.h</ForcedIncludeFiles>
       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+    <PostBuildEvent>
+      <Command>copy "$(TargetPath)" "$(Skyrim64Path)\$(TargetFileName)" /Y</Command>
+    </PostBuildEvent>
+    <PostBuildEvent>
+      <Message>Installing DLL...</Message>
+    </PostBuildEvent>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_WINDOWS;_USRDLL;SKSE64_EXPORTS;RUNTIME;RUNTIME_VERSION=0x01050610;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h;skse64_common/ICommon.h</ForcedIncludeFiles>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+    <PostBuildEvent>
+      <Command>copy "$(TargetPath)" "$(SSEPath)\$(TargetFileName)" /Y</Command>
+    </PostBuildEvent>
+    <PostBuildEvent>
+      <Message>Installing DLL...</Message>
+    </PostBuildEvent>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_WINDOWS;_USRDLL;SKSE64_EXPORTS;RUNTIME;RUNTIME_VERSION=0x01050610;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h;skse64_common/ICommon.h</ForcedIncludeFiles>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+    <PostBuildEvent>
+      <Command>copy "$(TargetPath)" "$(Skyrim64Path)\$(TargetFileName)" /Y</Command>
+    </PostBuildEvent>
+    <PostBuildEvent>
+      <Message>Installing DLL...</Message>
+    </PostBuildEvent>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_WINDOWS;_USRDLL;SKSE64_EXPORTS;RUNTIME;RUNTIME_VERSION=0x01050610;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h;skse64_common/ICommon.h</ForcedIncludeFiles>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
     </ClCompile>
     <Link>
       <SubSystem>Windows</SubSystem>
@@ -120,7 +298,6 @@
     <ClCompile Include="GameObjects.cpp" />
     <ClCompile Include="GameReferences.cpp" />
     <ClCompile Include="GameResources.cpp" />
-    <ClCompile Include="GameRTTI.cpp" />
     <ClCompile Include="GameSettings.cpp" />
     <ClCompile Include="GameStreams.cpp" />
     <ClCompile Include="GameThreads.cpp" />
@@ -242,14 +419,6 @@
     <ClCompile Include="PapyrusInterfaces.cpp" />
     <ClCompile Include="Translation.cpp" />
   </ItemGroup>
-  <ItemGroup>
-    <ProjectReference Include="..\..\common\common_vc14.vcxproj">
-      <Project>{472e19ab-def0-42df-819b-18722e8dc822}</Project>
-    </ProjectReference>
-    <ProjectReference Include="..\skse64_common\skse64_common.vcxproj">
-      <Project>{5fd1c08d-db80-480c-a1c6-f0920005cd13}</Project>
-    </ProjectReference>
-  </ItemGroup>
   <ItemGroup>
     <ClInclude Include="BSModelDB.h" />
     <ClInclude Include="Colors.h" />
@@ -392,13 +561,20 @@
     <ClInclude Include="Translation.h" />
   </ItemGroup>
   <ItemGroup>
-    <None Include="GameRTTI.inl" />
     <None Include="PapyrusNativeFunctionDef.inl" />
     <None Include="PapyrusNativeFunctionDef_Base.inl" />
   </ItemGroup>
   <ItemGroup>
     <ResourceCompile Include="..\skse64_common\skse_version.rc" />
   </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\..\common\common_vc14.vcxproj">
+      <Project>{472e19ab-def0-42df-819b-18722e8dc822}</Project>
+    </ProjectReference>
+    <ProjectReference Include="..\skse64_common\skse64_common.vcxproj">
+      <Project>{5fd1c08d-db80-480c-a1c6-f0920005cd13}</Project>
+    </ProjectReference>
+  </ItemGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
   <ImportGroup Label="ExtensionTargets">
   </ImportGroup>
diff --git a/skse64/skse64/skse64.vcxproj.filters b/skse64/skse64/skse64.vcxproj.filters
index bb8a240..f43291a 100644
--- a/skse64/skse64/skse64.vcxproj.filters
+++ b/skse64/skse64/skse64.vcxproj.filters
@@ -62,9 +62,6 @@
     <ClCompile Include="GameObjects.cpp">
       <Filter>api</Filter>
     </ClCompile>
-    <ClCompile Include="GameRTTI.cpp">
-      <Filter>api</Filter>
-    </ClCompile>
     <ClCompile Include="ObScript.cpp">
       <Filter>api</Filter>
     </ClCompile>
@@ -866,9 +863,6 @@
     <None Include="PapyrusNativeFunctionDef_Base.inl">
       <Filter>papyrus\vm</Filter>
     </None>
-    <None Include="GameRTTI.inl">
-      <Filter>api</Filter>
-    </None>
   </ItemGroup>
   <ItemGroup>
     <ResourceCompile Include="..\skse64_common\skse_version.rc" />
diff --git a/skse64/skse64_common/skse64_common.vcxproj b/skse64/skse64_common/skse64_common.vcxproj
index 91c100f..0db05e6 100644
--- a/skse64/skse64_common/skse64_common.vcxproj
+++ b/skse64/skse64_common/skse64_common.vcxproj
@@ -5,6 +5,30 @@
       <Configuration>Debug</Configuration>
       <Platform>x64</Platform>
     </ProjectConfiguration>
+    <ProjectConfiguration Include="DeployRelease|x64">
+      <Configuration>DeployRelease</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="PreRelease MT|x64">
+      <Configuration>PreRelease MT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="PreRelease|x64">
+      <Configuration>PreRelease</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release MT|x64">
+      <Configuration>Release MT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseAVX2 MT|x64">
+      <Configuration>ReleaseAVX2 MT</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseAVX2|x64">
+      <Configuration>ReleaseAVX2</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
     <ProjectConfiguration Include="Release|x64">
       <Configuration>Release</Configuration>
       <Platform>x64</Platform>
@@ -29,29 +53,77 @@
   <ItemGroup>
     <ProjectReference Include="..\..\common\common_vc14.vcxproj">
       <Project>{472e19ab-def0-42df-819b-18722e8dc822}</Project>
+      <LinkLibraryDependencies>false</LinkLibraryDependencies>
     </ProjectReference>
   </ItemGroup>
   <PropertyGroup Label="Globals">
     <ProjectGuid>{5FD1C08D-DB80-480C-A1C6-F0920005CD13}</ProjectGuid>
     <Keyword>Win32Proj</Keyword>
     <RootNamespace>skse64_common</RootNamespace>
-    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
-    <SccProjectName>SAK</SccProjectName>
-    <SccAuxPath>SAK</SccAuxPath>
-    <SccLocalPath>SAK</SccLocalPath>
-    <SccProvider>SAK</SccProvider>
+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
+    <SccProjectName>
+    </SccProjectName>
+    <SccAuxPath>
+    </SccAuxPath>
+    <SccLocalPath>
+    </SccLocalPath>
+    <SccProvider>
+    </SccProvider>
+    <ProjectName>skse64_1_5_97_common</ProjectName>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
     <ConfigurationType>StaticLibrary</ConfigurationType>
     <UseDebugLibraries>true</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
+    <PlatformToolset>v142</PlatformToolset>
     <CharacterSet>MultiByte</CharacterSet>
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
     <ConfigurationType>StaticLibrary</ConfigurationType>
     <UseDebugLibraries>false</UseDebugLibraries>
-    <PlatformToolset>v140</PlatformToolset>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release MT|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2 MT|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease MT|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <PlatformToolset>v142</PlatformToolset>
     <WholeProgramOptimization>true</WholeProgramOptimization>
     <CharacterSet>MultiByte</CharacterSet>
   </PropertyGroup>
@@ -66,8 +138,57 @@
   <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
   </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release MT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2 MT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease MT|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
   <PropertyGroup Label="UserMacros" />
-  <PropertyGroup />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release MT|x64'">
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'">
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'">
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2 MT|x64'">
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'">
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease MT|x64'">
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <IntDir>$(Platform)\$(ProjectName)\$(Configuration)\</IntDir>
+    <OutDir>$(SolutionDir)$(Platform)\$(ProjectName)\$(Configuration)\</OutDir>
+  </PropertyGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
     <ClCompile>
       <PrecompiledHeader>
@@ -75,9 +196,12 @@
       <WarningLevel>Level3</WarningLevel>
       <Optimization>Disabled</Optimization>
       <PreprocessorDefinitions>_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
       <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
     </ClCompile>
     <Link>
       <SubSystem>Windows</SubSystem>
@@ -92,9 +216,168 @@
       <FunctionLevelLinking>true</FunctionLevelLinking>
       <IntrinsicFunctions>true</IntrinsicFunctions>
       <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release MT|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DeployRelease|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseAVX2 MT|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>None</DebugInformationFormat>
+      <UseFullPaths>false</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <UseFullPaths>true</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
+    </ClCompile>
+    <Link>
+      <SubSystem>Windows</SubSystem>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='PreRelease MT|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>$(ProjectDir)\..\..;$(ProjectDir);$(ProjectDir)\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
       <ForcedIncludeFiles>common/IPrefix.h</ForcedIncludeFiles>
       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <MultiProcessorCompilation>true</MultiProcessorCompilation>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <UseFullPaths>true</UseFullPaths>
+      <LanguageStandard>stdcpp17</LanguageStandard>
+      <StringPooling>true</StringPooling>
     </ClCompile>
     <Link>
       <SubSystem>Windows</SubSystem>
